{
  "properties": {
    "[plaintext]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.unicodeHighlight.ambiguousCharacters": false,
        "editor.unicodeHighlight.invisibleCharacters": false
      }
    },
    "[code-text-binary]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[Log]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[log]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[scminput]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[clojure]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "diffEditor.ignoreTrimWhitespace": false
      },
      "defaultValueSource": {
        "id": "vscode.clojure",
        "displayName": "Clojure Language Basics"
      }
    },
    "[coffeescript]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "diffEditor.ignoreTrimWhitespace": false
      },
      "defaultValueSource": {
        "id": "vscode.coffeescript",
        "displayName": "CoffeeScript Language Basics"
      }
    },
    "[csharp]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.maxTokenizationLineLength": 2500
      },
      "defaultValueSource": {
        "id": "vscode.csharp",
        "displayName": "C# Language Basics"
      }
    },
    "[css]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.insertMode": "replace"
      },
      "defaultValueSource": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      }
    },
    "[scss]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.insertMode": "replace"
      },
      "defaultValueSource": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      }
    },
    "[less]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.insertMode": "replace"
      },
      "defaultValueSource": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      }
    },
    "[dockerfile]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.quickSuggestions": {
          "strings": true
        }
      },
      "defaultValueSource": {
        "id": "vscode.docker",
        "displayName": "Docker Language Basics"
      }
    },
    "[fsharp]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "diffEditor.ignoreTrimWhitespace": false
      },
      "defaultValueSource": {
        "id": "vscode.fsharp",
        "displayName": "F# Language Basics"
      }
    },
    "[git-commit]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.rulers": [
          50,
          72
        ],
        "editor.wordWrap": "off",
        "workbench.editor.restoreViewState": false
      },
      "defaultValueSource": {
        "id": "vscode.git",
        "displayName": "Git"
      }
    },
    "[git-rebase]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "workbench.editor.restoreViewState": false
      },
      "defaultValueSource": {
        "id": "vscode.git",
        "displayName": "Git"
      }
    },
    "[go]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.insertSpaces": false
      },
      "defaultValueSource": {
        "id": "vscode.go",
        "displayName": "Go Language Basics"
      }
    },
    "[html]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.insertMode": "replace"
      },
      "defaultValueSource": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      }
    },
    "[handlebars]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.insertMode": "replace"
      },
      "defaultValueSource": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      }
    },
    "[javascript]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.maxTokenizationLineLength": 2500
      },
      "defaultValueSource": {
        "id": "vscode.javascript",
        "displayName": "JavaScript Language Basics"
      }
    },
    "[json]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.quickSuggestions": {
          "strings": true
        },
        "editor.suggest.insertMode": "replace"
      },
      "defaultValueSource": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      }
    },
    "[jsonc]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.quickSuggestions": {
          "strings": true
        },
        "editor.suggest.insertMode": "replace"
      },
      "defaultValueSource": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      }
    },
    "[makefile]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.insertSpaces": false
      },
      "defaultValueSource": {
        "id": "vscode.make",
        "displayName": "Make Language Basics"
      }
    },
    "[markdown]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.unicodeHighlight.ambiguousCharacters": false,
        "editor.unicodeHighlight.invisibleCharacters": false,
        "diffEditor.ignoreTrimWhitespace": false,
        "editor.wordWrap": "on",
        "editor.quickSuggestions": {
          "comments": "off",
          "strings": "off",
          "other": "off"
        }
      },
      "defaultValueSource": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      }
    },
    "[jade]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "diffEditor.ignoreTrimWhitespace": false
      },
      "defaultValueSource": {
        "id": "vscode.pug",
        "displayName": "Pug Language Basics"
      }
    },
    "[python]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "diffEditor.ignoreTrimWhitespace": false,
        "editor.formatOnType": true,
        "editor.wordBasedSuggestions": "off"
      },
      "defaultValueSource": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      }
    },
    "[search-result]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.lineNumbers": "off"
      },
      "defaultValueSource": {
        "id": "vscode.search-result",
        "displayName": "Search Result"
      }
    },
    "[shellscript]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "files.eol": "\n"
      },
      "defaultValueSource": {
        "id": "vscode.shellscript",
        "displayName": "Shell Script Language Basics"
      }
    },
    "[yaml]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.autoIndent": "advanced",
        "diffEditor.ignoreTrimWhitespace": false
      },
      "defaultValueSource": {
        "id": "vscode.yaml",
        "displayName": "YAML Language Basics"
      }
    },
    "[dockercompose]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.autoIndent": "advanced"
      },
      "defaultValueSource": {
        "id": "vscode.yaml",
        "displayName": "YAML Language Basics"
      }
    },
    "[java]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.snippetsPreventQuickSuggestions": false
      },
      "defaultValueSource": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      }
    },
    "emmet.extensionsPath": {
      "type": "array",
      "items": {
        "type": "string",
        "markdownDescription": "A path containing Emmet syntaxProfiles and/or snippets."
      },
      "default": [],
      "scope": 6,
      "markdownDescription": "An array of paths, where each path can contain Emmet syntaxProfiles and/or snippet files.\nIn case of conflicts, the profiles/snippets of later paths will override those of earlier paths.\nSee https://code.visualstudio.com/docs/editor/emmet for more information and an example snippet file.",
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "php.validate.executablePath": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "description": "Points to the PHP executable.",
      "scope": 6,
      "source": {
        "id": "vscode.php-language-features",
        "displayName": "PHP Language Features"
      },
      "defaultDefaultValue": null,
      "restricted": true
    },
    "eslint.nodePath": {
      "scope": 6,
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "A path added to `NODE_PATH` when resolving the eslint module.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "eslint.runtime": {
      "scope": 6,
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "The location of the node binary to run ESLint under.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "eslint.execArgv": {
      "scope": 6,
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "markdownDescription": "Additional exec argv argument passed to the runtime. This can for example be used to control the maximum heap space using --max_old_space_size",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "python.activeStateToolPath": {
      "default": "state",
      "description": "Path to the State Tool executable for ActiveState runtimes (version 0.36+).",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "state",
      "restricted": false
    },
    "python.createEnvironment.contentButton": {
      "default": "hide",
      "markdownDescription": "Show or hide Create Environment button in the editor for `requirements.txt` or other dependency files.",
      "scope": 6,
      "type": "string",
      "enum": [
        "show",
        "hide"
      ],
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "hide",
      "restricted": false
    },
    "python.createEnvironment.trigger": {
      "default": "prompt",
      "markdownDescription": "Detect if environment creation is required for the current project",
      "scope": 6,
      "type": "string",
      "enum": [
        "off",
        "prompt"
      ],
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "python.defaultInterpreterPath": {
      "default": "python",
      "markdownDescription": "Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See [here](https://aka.ms/AAfekmf) to understand when this is used",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "python",
      "restricted": false
    },
    "python.pipenvPath": {
      "default": "pipenv",
      "description": "Path to the pipenv executable to use for activation.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "pipenv",
      "restricted": false
    },
    "python.poetryPath": {
      "default": "poetry",
      "description": "Path to the poetry executable.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "poetry",
      "restricted": false
    },
    "python.testing.pytestPath": {
      "default": "pytest",
      "description": "Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "pytest",
      "restricted": false
    },
    "java.home": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "description": "Specifies the folder path to the JDK (17 or more recent) used to launch the Java Language Server.\nOn Windows, backslashes must be escaped, i.e.\n\"java.home\":\"C:\\\\Program Files\\\\Java\\\\jdk-17.0_3\"",
      "scope": 6,
      "deprecationMessage": "This setting is deprecated, please use 'java.jdt.ls.java.home' instead.",
      "order": 0,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": null,
      "restricted": true
    },
    "java.jdt.ls.java.home": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "description": "Specifies the folder path to the JDK (17 or more recent) used to launch the Java Language Server. This setting will replace the Java extension's embedded JRE to start the Java Language Server. \n\nOn Windows, backslashes must be escaped, i.e.\n\"java.jdt.ls.java.home\":\"C:\\\\Program Files\\\\Java\\\\jdk-17.0_3\"",
      "scope": 6,
      "order": 10,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": null,
      "restricted": true
    },
    "java.jdt.ls.vmargs": {
      "type": [
        "string",
        "null"
      ],
      "default": "-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:disable",
      "description": "Specifies extra VM arguments used to launch the Java Language Server. Eg. use `-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:disable` to optimize memory usage with the parallel garbage collector",
      "scope": 6,
      "order": 20,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:disable",
      "restricted": true
    },
    "java.import.gradle.home": {
      "type": "string",
      "default": null,
      "description": "Use Gradle from the specified local installation directory or GRADLE_HOME if the Gradle wrapper is missing or disabled and no 'java.import.gradle.version' is specified.",
      "scope": 6,
      "order": 40,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": null,
      "restricted": true
    },
    "java.import.gradle.java.home": {
      "type": "string",
      "default": null,
      "description": "The location to the JVM used to run the Gradle daemon.",
      "scope": 6,
      "order": 50,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": null,
      "restricted": true
    },
    "java.import.gradle.user.home": {
      "type": "string",
      "default": null,
      "description": "Setting for GRADLE_USER_HOME.",
      "scope": 6,
      "order": 55,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "java.configuration.runtimes": {
      "type": "array",
      "description": "Map Java Execution Environments to local JDKs.",
      "items": {
        "type": "object",
        "default": {},
        "required": [
          "path",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "J2SE-1.5",
              "JavaSE-1.6",
              "JavaSE-1.7",
              "JavaSE-1.8",
              "JavaSE-9",
              "JavaSE-10",
              "JavaSE-11",
              "JavaSE-12",
              "JavaSE-13",
              "JavaSE-14",
              "JavaSE-15",
              "JavaSE-16",
              "JavaSE-17",
              "JavaSE-18",
              "JavaSE-19",
              "JavaSE-20",
              "JavaSE-21",
              "JavaSE-22"
            ],
            "description": "Java Execution Environment name. Must be unique."
          },
          "path": {
            "type": "string",
            "pattern": ".*(?<!\\/bin|\\/bin\\/|\\\\bin|\\\\bin\\\\)$",
            "description": "JDK home path. Should be the JDK installation directory, not the Java bin path.\n On Windows, backslashes must be escaped, i.e.\n\"path\":\"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_161\"."
          },
          "sources": {
            "type": "string",
            "description": "JDK sources path."
          },
          "javadoc": {
            "type": "string",
            "description": "JDK javadoc path."
          },
          "default": {
            "type": "boolean",
            "description": "Is default runtime? Only one runtime can be default."
          }
        },
        "additionalProperties": false
      },
      "default": [],
      "scope": 6,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [],
      "restricted": true
    },
    "rust-analyzer.server.path": {
      "type": [
        "null",
        "string"
      ],
      "scope": 6,
      "default": null,
      "markdownDescription": "Path to rust-analyzer executable (points to bundled binary by default).",
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "maven.executable.options": {
      "type": "string",
      "default": "",
      "description": "Specifies default options for all mvn commands.",
      "scope": 6,
      "source": {
        "id": "vscjava.vscode-maven",
        "displayName": "Maven for Java"
      },
      "defaultDefaultValue": "",
      "restricted": true
    },
    "[bat]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[c]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[cpp]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[cuda-cpp]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[dart]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[diff]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[ignore]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[groovy]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[hlsl]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[ini]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[properties]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[javascriptreact]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[jsx-tags]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[jsonl]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[snippets]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[julia]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[juliamarkdown]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[tex]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[latex]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[bibtex]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[cpp_embedded_latex]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[markdown_latex_combined]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[lua]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[markdown-math]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[wat]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[objective-c]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[objective-cpp]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[perl]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[raku]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[php]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[powershell]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[r]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[razor]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[restructuredtext]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[ruby]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[rust]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[shaderlab]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[sql]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[swift]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[typescript]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[typescriptreact]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[vb]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[xml]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[xsl]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[tailwindcss]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[editorconfig]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[graphql]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[vue]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[jinja]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[pip-requirements]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[toml]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[ssh_config]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[java-properties]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[gradle-kotlin-dsl]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[ra_syntax_tree]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[source.css.styled]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "workbench.list.multiSelectModifier": {
      "type": "string",
      "enum": [
        "ctrlCmd",
        "alt"
      ],
      "markdownEnumDescriptions": [
        "Maps to `Control` on Windows and Linux and to `Command` on macOS.",
        "Maps to `Alt` on Windows and Linux and to `Option` on macOS."
      ],
      "default": "ctrlCmd",
      "description": "The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.",
      "defaultDefaultValue": "ctrlCmd",
      "scope": 3,
      "restricted": false
    },
    "workbench.list.openMode": {
      "type": "string",
      "enum": [
        "singleClick",
        "doubleClick"
      ],
      "default": "singleClick",
      "description": "Controls how to open items in trees and lists using the mouse (if supported). Note that some trees and lists might choose to ignore this setting if it is not applicable.",
      "defaultDefaultValue": "singleClick",
      "scope": 3,
      "restricted": false
    },
    "workbench.list.horizontalScrolling": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether lists and trees support horizontal scrolling in the workbench. Warning: turning on this setting has a performance implication.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.list.scrollByPage": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether clicks in the scrollbar scroll page by page.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.tree.indent": {
      "type": "number",
      "default": 8,
      "minimum": 4,
      "maximum": 40,
      "description": "Controls tree indentation in pixels.",
      "defaultDefaultValue": 8,
      "scope": 3,
      "restricted": false
    },
    "workbench.tree.renderIndentGuides": {
      "type": "string",
      "enum": [
        "none",
        "onHover",
        "always"
      ],
      "default": "onHover",
      "description": "Controls whether the tree should render indent guides.",
      "defaultDefaultValue": "onHover",
      "scope": 3,
      "restricted": false
    },
    "workbench.list.smoothScrolling": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether lists and trees have smooth scrolling.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.list.mouseWheelScrollSensitivity": {
      "type": "number",
      "default": 1,
      "markdownDescription": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "workbench.list.fastScrollSensitivity": {
      "type": "number",
      "default": 5,
      "markdownDescription": "Scrolling speed multiplier when pressing `Alt`.",
      "defaultDefaultValue": 5,
      "scope": 3,
      "restricted": false
    },
    "workbench.list.defaultFindMode": {
      "type": "string",
      "enum": [
        "highlight",
        "filter"
      ],
      "enumDescriptions": [
        "Highlight elements when searching. Further up and down navigation will traverse only the highlighted elements.",
        "Filter elements when searching."
      ],
      "default": "highlight",
      "description": "Controls the default find mode for lists and trees in the workbench.",
      "defaultDefaultValue": "highlight",
      "scope": 3,
      "restricted": false
    },
    "workbench.list.keyboardNavigation": {
      "type": "string",
      "enum": [
        "simple",
        "highlight",
        "filter"
      ],
      "enumDescriptions": [
        "Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.",
        "Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.",
        "Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input."
      ],
      "default": "highlight",
      "description": "Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.",
      "deprecated": true,
      "deprecationMessage": "Please use 'workbench.list.defaultFindMode' and\t'workbench.list.typeNavigationMode' instead.",
      "defaultDefaultValue": "highlight",
      "scope": 3,
      "restricted": false
    },
    "workbench.list.defaultFindMatchType": {
      "type": "string",
      "enum": [
        "fuzzy",
        "contiguous"
      ],
      "enumDescriptions": [
        "Use fuzzy matching when searching.",
        "Use contiguous matching when searching."
      ],
      "default": "fuzzy",
      "description": "Controls the type of matching used when searching lists and trees in the workbench.",
      "defaultDefaultValue": "fuzzy",
      "scope": 3,
      "restricted": false
    },
    "workbench.tree.expandMode": {
      "type": "string",
      "enum": [
        "singleClick",
        "doubleClick"
      ],
      "default": "singleClick",
      "description": "Controls how tree folders are expanded when clicking the folder names. Note that some trees and lists might choose to ignore this setting if it is not applicable.",
      "defaultDefaultValue": "singleClick",
      "scope": 3,
      "restricted": false
    },
    "workbench.tree.enableStickyScroll": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether sticky scrolling is enabled in trees.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.tree.stickyScrollMaxItemCount": {
      "type": "number",
      "minimum": 1,
      "default": 7,
      "markdownDescription": "Controls the number of sticky elements displayed in the tree when `#workbench.tree.enableStickyScroll#` is enabled.",
      "defaultDefaultValue": 7,
      "scope": 3,
      "restricted": false
    },
    "workbench.list.typeNavigationMode": {
      "type": "string",
      "enum": [
        "automatic",
        "trigger"
      ],
      "default": "automatic",
      "markdownDescription": "Controls how type navigation works in lists and trees in the workbench. When set to `trigger`, type navigation begins once the `list.triggerTypeNavigation` command is run.",
      "defaultDefaultValue": "automatic",
      "scope": 3,
      "restricted": false
    },
    "breadcrumbs.enabled": {
      "description": "Enable/disable navigation breadcrumbs.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "breadcrumbs.filePath": {
      "description": "Controls whether and how file paths are shown in the breadcrumbs view.",
      "type": "string",
      "default": "on",
      "enum": [
        "on",
        "off",
        "last"
      ],
      "enumDescriptions": [
        "Show the file path in the breadcrumbs view.",
        "Do not show the file path in the breadcrumbs view.",
        "Only show the last element of the file path in the breadcrumbs view."
      ],
      "defaultDefaultValue": "on",
      "scope": 3,
      "restricted": false
    },
    "breadcrumbs.symbolPath": {
      "description": "Controls whether and how symbols are shown in the breadcrumbs view.",
      "type": "string",
      "default": "on",
      "enum": [
        "on",
        "off",
        "last"
      ],
      "enumDescriptions": [
        "Show all symbols in the breadcrumbs view.",
        "Do not show symbols in the breadcrumbs view.",
        "Only show the current symbol in the breadcrumbs view."
      ],
      "defaultDefaultValue": "on",
      "scope": 3,
      "restricted": false
    },
    "breadcrumbs.icons": {
      "description": "Render breadcrumb items with icons.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "problems.decorations.enabled": {
      "markdownDescription": "Show Errors & Warnings on files and folder. Overwritten by `#problems.visibility#` when it is off.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.lineNumbers": {
      "type": "string",
      "enum": [
        "off",
        "on"
      ],
      "default": "off",
      "markdownDescription": "Controls the display of line numbers in the cell editor.",
      "defaultDefaultValue": "off",
      "scope": 3,
      "restricted": false
    },
    "workbench.externalUriOpeners": {
      "type": "object",
      "markdownDescription": "Configure the opener to use for external URIs (http, https).",
      "defaultSnippets": [
        {
          "body": {
            "example.com": "$1"
          }
        }
      ],
      "additionalProperties": {
        "anyOf": [
          {
            "type": "string",
            "markdownDescription": "Map URI pattern to an opener id.\nExample patterns: \n\n- `https://microsoft.com`: Matches this specific domain using https\n- `https://microsoft.com:8080`: Matches this specific domain on this port using https\n- `https://microsoft.com:*`: Matches this specific domain on any port using https\n- `https://microsoft.com/foo`: Matches `https://microsoft.com/foo` and `https://microsoft.com/foo/bar`, but not `https://microsoft.com/foobar` or `https://microsoft.com/bar`\n- `https://*.microsoft.com`: Match all domains ending in `microsoft.com` using https\n- `microsoft.com`: Match this specific domain using either http or https\n- `*.microsoft.com`: Match all domains ending in `microsoft.com` using either http or https\n- `http://192.168.0.1`: Matches this specific IP using http\n- `http://192.168.0.*`: Matches all IP's with this prefix using http\n- `*`: Match all domains using either http or https"
          },
          {
            "type": "string",
            "markdownDescription": "Map URI pattern to an opener id.\nExample patterns: \n\n- `https://microsoft.com`: Matches this specific domain using https\n- `https://microsoft.com:8080`: Matches this specific domain on this port using https\n- `https://microsoft.com:*`: Matches this specific domain on any port using https\n- `https://microsoft.com/foo`: Matches `https://microsoft.com/foo` and `https://microsoft.com/foo/bar`, but not `https://microsoft.com/foobar` or `https://microsoft.com/bar`\n- `https://*.microsoft.com`: Match all domains ending in `microsoft.com` using https\n- `microsoft.com`: Match this specific domain using either http or https\n- `*.microsoft.com`: Match all domains ending in `microsoft.com` using either http or https\n- `http://192.168.0.1`: Matches this specific IP using http\n- `http://192.168.0.*`: Matches all IP's with this prefix using http\n- `*`: Match all domains using either http or https",
            "enum": [
              "default"
            ],
            "enumDescriptions": [
              "Open using VS Code's standard opener."
            ]
          },
          {
            "type": "string",
            "enum": []
          }
        ]
      },
      "default": {},
      "scope": 3,
      "restricted": false
    },
    "inlineChat.mode": {
      "description": "Configure if changes crafted with inline chat are applied directly to the document or are previewed first.",
      "default": "live",
      "type": "string",
      "enum": [
        "live",
        "preview"
      ],
      "markdownEnumDescriptions": [
        "Changes are applied directly to the document, can be highlighted via inline diffs, and accepted/discarded by hunks. Ending a session will keep the changes.",
        "Changes are previewed only and need to be accepted via the apply button. Ending a session will discard the changes."
      ],
      "tags": [
        "experimental"
      ],
      "defaultDefaultValue": "live",
      "scope": 3,
      "restricted": false
    },
    "inlineChat.finishOnType": {
      "description": "Whether to finish an inline chat session when typing outside of changed regions.",
      "default": false,
      "type": "boolean",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "inlineChat.acceptedOrDiscardBeforeSave": {
      "description": "Whether pending inline chat sessions prevent saving.",
      "default": true,
      "type": "boolean",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "inlineChat.holdToSpeech": {
      "description": "Whether holding the inline chat keybinding will automatically enable speech recognition.",
      "default": true,
      "type": "boolean",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "inlineChat.accessibleDiffView": {
      "description": "Whether the inline chat also renders an accessible diff viewer for its changes.",
      "default": "auto",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "markdownEnumDescriptions": [
        "The accessible diff viewer is based screen reader mode being enabled.",
        "The accessible diff viewer is always enabled.",
        "The accessible diff viewer is never enabled."
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "remote.extensionKind": {
      "type": "object",
      "markdownDescription": "Override the kind of an extension. `ui` extensions are installed and run on the local machine while `workspace` extensions are run on the remote. By overriding an extension's default kind using this setting, you specify if that extension should be installed and enabled locally or remotely.",
      "patternProperties": {
        "([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ui",
                  "workspace"
                ],
                "enumDescriptions": [
                  "UI extension kind. In a remote window, such extensions are enabled only when available on the local machine.",
                  "Workspace extension kind. In a remote window, such extensions are enabled only when available on the remote."
                ]
              }
            },
            {
              "type": "string",
              "enum": [
                "ui",
                "workspace"
              ],
              "enumDescriptions": [
                "UI extension kind. In a remote window, such extensions are enabled only when available on the local machine.",
                "Workspace extension kind. In a remote window, such extensions are enabled only when available on the remote."
              ]
            }
          ],
          "default": [
            "ui"
          ]
        }
      },
      "default": {
        "pub.name": [
          "ui"
        ]
      },
      "defaultDefaultValue": {
        "pub.name": [
          "ui"
        ]
      },
      "scope": 3,
      "restricted": false
    },
    "remote.restoreForwardedPorts": {
      "type": "boolean",
      "markdownDescription": "Restores the ports you forwarded in a workspace.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "remote.autoForwardPorts": {
      "type": "boolean",
      "markdownDescription": "When enabled, new running processes are detected and ports that they listen on are automatically forwarded. Disabling this setting will not prevent all ports from being forwarded. Even when disabled, extensions will still be able to cause ports to be forwarded, and opening some URLs will still cause ports to forwarded.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "remote.autoForwardPortsSource": {
      "type": "string",
      "markdownDescription": "Sets the source from which ports are automatically forwarded when `#remote.autoForwardPorts#` is true. On Windows and macOS remotes, the `process` and `hybrid` options have no effect and `output` will be used.",
      "enum": [
        "process",
        "output",
        "hybrid"
      ],
      "enumDescriptions": [
        "Ports will be automatically forwarded when discovered by watching for processes that are started and include a port.",
        "Ports will be automatically forwarded when discovered by reading terminal and debug output. Not all processes that use ports will print to the integrated terminal or debug console, so some ports will be missed. Ports forwarded based on output will not be \"un-forwarded\" until reload or until the port is closed by the user in the Ports view.",
        "Ports will be automatically forwarded when discovered by reading terminal and debug output. Not all processes that use ports will print to the integrated terminal or debug console, so some ports will be missed. Ports will be \"un-forwarded\" by watching for processes that listen on that port to be terminated."
      ],
      "default": "process",
      "defaultDefaultValue": "process",
      "scope": 3,
      "restricted": false
    },
    "remote.autoForwardPortsFallback": {
      "type": "number",
      "default": 20,
      "markdownDescription": "The number of auto forwarded ports that will trigger the switch from `process` to `hybrid` when automatically forwarding ports and `remote.autoForwardPortsSource` is set to `process` by default. Set to `0` to disable the fallback. When `remote.autoForwardPortsFallback` hasn't been configured, but `remote.autoForwardPortsSource` has, `remote.autoForwardPortsFallback` will be treated as though it's set to `0`.",
      "defaultDefaultValue": 20,
      "scope": 3,
      "restricted": false
    },
    "remote.forwardOnOpen": {
      "type": "boolean",
      "description": "Controls whether local URLs with a port will be forwarded when opened from the terminal and the debug console.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "remote.portsAttributes": {
      "type": "object",
      "patternProperties": {
        "(^\\d+(-\\d+)?$)|(.+)": {
          "type": "object",
          "description": "A port, range of ports (ex. \"40000-55000\"), host and port (ex. \"db:1234\"), or regular expression (ex. \".+\\\\/server.js\").  For a port number or range, the attributes will apply to that port number or range of port numbers. Attributes which use a regular expression will apply to ports whose associated process command line matches the expression.",
          "properties": {
            "onAutoForward": {
              "type": "string",
              "enum": [
                "notify",
                "openBrowser",
                "openBrowserOnce",
                "openPreview",
                "silent",
                "ignore"
              ],
              "enumDescriptions": [
                "Shows a notification when a port is automatically forwarded.",
                "Opens the browser when the port is automatically forwarded. Depending on your settings, this could open an embedded browser.",
                "Opens the browser when the port is automatically forwarded, but only the first time the port is forward during a session. Depending on your settings, this could open an embedded browser.",
                "Opens a preview in the same window when the port is automatically forwarded.",
                "Shows no notification and takes no action when this port is automatically forwarded.",
                "This port will not be automatically forwarded."
              ],
              "description": "Defines the action that occurs when the port is discovered for automatic forwarding",
              "default": "notify"
            },
            "elevateIfNeeded": {
              "type": "boolean",
              "description": "Automatically prompt for elevation (if needed) when this port is forwarded. Elevate is required if the local port is a privileged port.",
              "default": false
            },
            "label": {
              "type": "string",
              "description": "Label that will be shown in the UI for this port.",
              "default": "Application"
            },
            "requireLocalPort": {
              "type": "boolean",
              "markdownDescription": "When true, a modal dialog will show if the chosen local port isn't used for forwarding.",
              "default": false
            },
            "protocol": {
              "type": "string",
              "enum": [
                "http",
                "https"
              ],
              "description": "The protocol to use when forwarding this port."
            }
          },
          "default": {
            "label": "Application",
            "onAutoForward": "notify"
          }
        }
      },
      "markdownDescription": "Set properties that are applied when a specific port number is forwarded. For example:\n\n```\n\"3000\": {\n  \"label\": \"Application\"\n},\n\"40000-55000\": {\n  \"onAutoForward\": \"ignore\"\n},\n\".+\\\\/server.js\": {\n \"onAutoForward\": \"openPreview\"\n}\n```",
      "defaultSnippets": [
        {
          "body": {
            "${1:3000}": {
              "label": "${2:Application}",
              "onAutoForward": "openPreview"
            }
          }
        }
      ],
      "errorMessage": "Must be a port number, range of port numbers, or regular expression.",
      "additionalProperties": false,
      "default": {
        "443": {
          "protocol": "https"
        },
        "8443": {
          "protocol": "https"
        }
      },
      "defaultDefaultValue": {
        "443": {
          "protocol": "https"
        },
        "8443": {
          "protocol": "https"
        }
      },
      "scope": 3,
      "restricted": false
    },
    "remote.otherPortsAttributes": {
      "type": "object",
      "properties": {
        "onAutoForward": {
          "type": "string",
          "enum": [
            "notify",
            "openBrowser",
            "openPreview",
            "silent",
            "ignore"
          ],
          "enumDescriptions": [
            "Shows a notification when a port is automatically forwarded.",
            "Opens the browser when the port is automatically forwarded. Depending on your settings, this could open an embedded browser.",
            "Opens a preview in the same window when the port is automatically forwarded.",
            "Shows no notification and takes no action when this port is automatically forwarded.",
            "This port will not be automatically forwarded."
          ],
          "description": "Defines the action that occurs when the port is discovered for automatic forwarding",
          "default": "notify"
        },
        "elevateIfNeeded": {
          "type": "boolean",
          "description": "Automatically prompt for elevation (if needed) when this port is forwarded. Elevate is required if the local port is a privileged port.",
          "default": false
        },
        "label": {
          "type": "string",
          "description": "Label that will be shown in the UI for this port.",
          "default": "Application"
        },
        "requireLocalPort": {
          "type": "boolean",
          "markdownDescription": "When true, a modal dialog will show if the chosen local port isn't used for forwarding.",
          "default": false
        },
        "protocol": {
          "type": "string",
          "enum": [
            "http",
            "https"
          ],
          "description": "The protocol to use when forwarding this port."
        }
      },
      "defaultSnippets": [
        {
          "body": {
            "onAutoForward": "ignore"
          }
        }
      ],
      "markdownDescription": "Set default properties that are applied to all ports that don't get properties from the setting `#remote.portsAttributes#`. For example:\n\n```\n{\n  \"onAutoForward\": \"ignore\"\n}\n```",
      "additionalProperties": false,
      "default": {},
      "scope": 3,
      "restricted": false
    },
    "remote.localPortHost": {
      "type": "string",
      "enum": [
        "localhost",
        "allInterfaces"
      ],
      "default": "localhost",
      "description": "Specifies the local host name that will be used for port forwarding.",
      "defaultDefaultValue": "localhost",
      "scope": 3,
      "restricted": false
    },
    "workbench.sash.size": {
      "type": "number",
      "default": 4,
      "minimum": 1,
      "maximum": 20,
      "description": "Controls the feedback area size in pixels of the dragging area in between views/editors. Set it to a larger value if you feel it's hard to resize views using the mouse.",
      "defaultDefaultValue": 4,
      "scope": 3,
      "restricted": false
    },
    "workbench.sash.hoverDelay": {
      "type": "number",
      "default": 300,
      "minimum": 0,
      "maximum": 2000,
      "description": "Controls the hover feedback delay in milliseconds of the dragging area in between views/editors.",
      "defaultDefaultValue": 300,
      "scope": 3,
      "restricted": false
    },
    "workbench.experimental.share.enabled": {
      "type": "boolean",
      "default": false,
      "tags": [
        "experimental"
      ],
      "markdownDescription": "Controls whether to render the Share action next to the command center when `#window.commandCenter#` is `true`.",
      "restricted": false,
      "defaultDefaultValue": false,
      "scope": 3
    },
    "workbench.editorAssociations": {
      "type": "object",
      "markdownDescription": "Configure [glob patterns](https://aka.ms/vscode-glob-patterns) to editors (for example `\"*.hex\": \"hexEditor.hexedit\"`). These have precedence over the default behavior.",
      "patternProperties": {
        ".*": {
          "type": "string",
          "enum": [
            "default",
            "workbench.editor.chatSession",
            "workbench.editorinputs.searchEditorInput",
            "workbench.editors.gettingStartedInput",
            "vscode.markdown.preview.editor",
            "imagePreview.previewEditor",
            "vscode.audioPreview",
            "vscode.videoPreview",
            "jsProfileVisualizer.cpuprofile.table",
            "jsProfileVisualizer.heapprofile.table",
            "jsProfileVisualizer.heapsnapshot.table",
            "decompiled.javaClass",
            "java.formatterSettingsEditor",
            "jupyter-notebook"
          ]
        }
      },
      "default": {},
      "scope": 3,
      "restricted": false
    },
    "remote.downloadExtensionsLocally": {
      "type": "boolean",
      "markdownDescription": "When enabled extensions are downloaded locally and installed on remote.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.remoteIndicator.showExtensionRecommendations": {
      "type": "boolean",
      "markdownDescription": "When enabled, remote extensions recommendations will be shown in the Remote Indicator menu.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.colorTheme": {
      "type": "string",
      "markdownDescription": "Specifies the color theme used in the workbench when `#window.autoDetectColorScheme#` is not enabled.",
      "default": "Default Dark Modern",
      "tags": [
        "colorThemeConfiguration"
      ],
      "enum": [
        "Abyss",
        "Bearded Themanopia (Experimental)",
        "Bearded Theme Altica",
        "Bearded Theme Anthracite",
        "Bearded Theme Aquarelle Cymbidium",
        "Bearded Theme Aquarelle Hydrangea",
        "Bearded Theme Aquarelle Lilac",
        "Bearded Theme Arc",
        "Bearded Theme Arc Blueberry",
        "Bearded Theme Arc Eggplant",
        "Bearded Theme Arc EolStorm",
        "Bearded Theme Arc Reversed",
        "Bearded Theme Black & Amethyst",
        "Bearded Theme Black & Amethyst Soft",
        "Bearded Theme Black & Diamond",
        "Bearded Theme Black & Diamond Soft",
        "Bearded Theme Black & Emerald",
        "Bearded Theme Black & Emerald Soft",
        "Bearded Theme Black & Gold",
        "Bearded Theme Black & Gold Soft",
        "Bearded Theme Black & Ruby",
        "Bearded Theme Black & Ruby Soft",
        "Bearded Theme Coffee",
        "Bearded Theme Coffee Cream",
        "Bearded Theme Coffee Reversed",
        "Bearded Theme Earth",
        "Bearded Theme feat. Gold D Raynh",
        "Bearded Theme feat. Melle Julie",
        "Bearded Theme feat. Melle Julie Light",
        "Bearded Theme feat. Mintshake D Raynh",
        "Bearded Theme feat. Will",
        "Bearded Theme HC Brewing Storm",
        "Bearded Theme HC Chocolate Espresso",
        "Bearded Theme HC Ebony",
        "Bearded Theme HC Flurry",
        "Bearded Theme HC Midnight Void",
        "Bearded Theme HC Minuit",
        "Bearded Theme HC Wonderland Wood",
        "Bearded Theme Light",
        "Bearded Theme Milkshake Blueberry",
        "Bearded Theme Milkshake Mango",
        "Bearded Theme Milkshake Mint",
        "Bearded Theme Milkshake Raspberry",
        "Bearded Theme Milkshake Vanilla Banana",
        "Bearded Theme Monokai Black",
        "Bearded Theme Monokai Metallian",
        "Bearded Theme Monokai Reversed",
        "Bearded Theme Monokai Stone",
        "Bearded Theme Monokai Terra",
        "Bearded Theme Oceanic",
        "Bearded Theme Oceanic Reversed",
        "Bearded Theme Solarized",
        "Bearded Theme Solarized Light",
        "Bearded Theme Solarized Reversed",
        "Bearded Theme Stained Blue",
        "Bearded Theme Stained Purple",
        "Bearded Theme Surprising Blueberry",
        "Bearded Theme Surprising Eggplant",
        "Bearded Theme Surprising Watermelon",
        "Bearded Theme Vivid Black",
        "Bearded Theme Vivid Light",
        "Bearded Theme Vivid Purple",
        "Bearded Theme Void",
        "Visual Studio Dark",
        "Default High Contrast",
        "Default Dark Modern",
        "Default Dark+",
        "Kimbie Dark",
        "Visual Studio Light",
        "Default High Contrast Light",
        "Default Light Modern",
        "Default Light+",
        "Min Dark",
        "Min Light",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "enumItemLabels": [
        "Abyss",
        "Bearded Themanopia (Experimental)",
        "Bearded Theme Altica",
        "Bearded Theme Anthracite",
        "Bearded Theme Aquarelle Cymbidium",
        "Bearded Theme Aquarelle Hydrangea",
        "Bearded Theme Aquarelle Lilac",
        "Bearded Theme Arc",
        "Bearded Theme Arc Blueberry",
        "Bearded Theme Arc Eggplant",
        "Bearded Theme Arc EolStorm",
        "Bearded Theme Arc Reversed",
        "Bearded Theme Black & Amethyst",
        "Bearded Theme Black & Amethyst Soft",
        "Bearded Theme Black & Diamond",
        "Bearded Theme Black & Diamond Soft",
        "Bearded Theme Black & Emerald",
        "Bearded Theme Black & Emerald Soft",
        "Bearded Theme Black & Gold",
        "Bearded Theme Black & Gold Soft",
        "Bearded Theme Black & Ruby",
        "Bearded Theme Black & Ruby Soft",
        "Bearded Theme Coffee",
        "Bearded Theme Coffee Cream",
        "Bearded Theme Coffee Reversed",
        "Bearded Theme Earth",
        "Bearded Theme feat. Gold D Raynh",
        "Bearded Theme feat. Melle Julie",
        "Bearded Theme feat. Melle Julie Light",
        "Bearded Theme feat. Mintshake D Raynh",
        "Bearded Theme feat. Will",
        "Bearded Theme HC Brewing Storm",
        "Bearded Theme HC Chocolate Espresso",
        "Bearded Theme HC Ebony",
        "Bearded Theme HC Flurry",
        "Bearded Theme HC Midnight Void",
        "Bearded Theme HC Minuit",
        "Bearded Theme HC Wonderland Wood",
        "Bearded Theme Light",
        "Bearded Theme Milkshake Blueberry",
        "Bearded Theme Milkshake Mango",
        "Bearded Theme Milkshake Mint",
        "Bearded Theme Milkshake Raspberry",
        "Bearded Theme Milkshake Vanilla Banana",
        "Bearded Theme Monokai Black",
        "Bearded Theme Monokai Metallian",
        "Bearded Theme Monokai Reversed",
        "Bearded Theme Monokai Stone",
        "Bearded Theme Monokai Terra",
        "Bearded Theme Oceanic",
        "Bearded Theme Oceanic Reversed",
        "Bearded Theme Solarized",
        "Bearded Theme Solarized Light",
        "Bearded Theme Solarized Reversed",
        "Bearded Theme Stained Blue",
        "Bearded Theme Stained Purple",
        "Bearded Theme Surprising Blueberry",
        "Bearded Theme Surprising Eggplant",
        "Bearded Theme Surprising Watermelon",
        "Bearded Theme Vivid Black",
        "Bearded Theme Vivid Light",
        "Bearded Theme Vivid Purple",
        "Bearded Theme Void",
        "Dark (Visual Studio)",
        "Dark High Contrast",
        "Dark Modern",
        "Dark+",
        "Kimbie Dark",
        "Light (Visual Studio)",
        "Light High Contrast",
        "Light Modern",
        "Light+",
        "Min Dark",
        "Min Light",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "errorMessage": "Theme is unknown or not installed.",
      "defaultDefaultValue": "Default Dark Modern",
      "scope": 3,
      "restricted": false
    },
    "workbench.preferredDarkColorTheme": {
      "type": "string",
      "markdownDescription": "Specifies the color theme when system color mode is dark and `#window.autoDetectColorScheme#` is enabled.",
      "default": "Default Dark Modern",
      "tags": [
        "colorThemeConfiguration"
      ],
      "enum": [
        "Abyss",
        "Bearded Themanopia (Experimental)",
        "Bearded Theme Altica",
        "Bearded Theme Anthracite",
        "Bearded Theme Aquarelle Cymbidium",
        "Bearded Theme Aquarelle Hydrangea",
        "Bearded Theme Aquarelle Lilac",
        "Bearded Theme Arc",
        "Bearded Theme Arc Blueberry",
        "Bearded Theme Arc Eggplant",
        "Bearded Theme Arc EolStorm",
        "Bearded Theme Arc Reversed",
        "Bearded Theme Black & Amethyst",
        "Bearded Theme Black & Amethyst Soft",
        "Bearded Theme Black & Diamond",
        "Bearded Theme Black & Diamond Soft",
        "Bearded Theme Black & Emerald",
        "Bearded Theme Black & Emerald Soft",
        "Bearded Theme Black & Gold",
        "Bearded Theme Black & Gold Soft",
        "Bearded Theme Black & Ruby",
        "Bearded Theme Black & Ruby Soft",
        "Bearded Theme Coffee",
        "Bearded Theme Coffee Cream",
        "Bearded Theme Coffee Reversed",
        "Bearded Theme Earth",
        "Bearded Theme feat. Gold D Raynh",
        "Bearded Theme feat. Melle Julie",
        "Bearded Theme feat. Melle Julie Light",
        "Bearded Theme feat. Mintshake D Raynh",
        "Bearded Theme feat. Will",
        "Bearded Theme HC Brewing Storm",
        "Bearded Theme HC Chocolate Espresso",
        "Bearded Theme HC Ebony",
        "Bearded Theme HC Flurry",
        "Bearded Theme HC Midnight Void",
        "Bearded Theme HC Minuit",
        "Bearded Theme HC Wonderland Wood",
        "Bearded Theme Light",
        "Bearded Theme Milkshake Blueberry",
        "Bearded Theme Milkshake Mango",
        "Bearded Theme Milkshake Mint",
        "Bearded Theme Milkshake Raspberry",
        "Bearded Theme Milkshake Vanilla Banana",
        "Bearded Theme Monokai Black",
        "Bearded Theme Monokai Metallian",
        "Bearded Theme Monokai Reversed",
        "Bearded Theme Monokai Stone",
        "Bearded Theme Monokai Terra",
        "Bearded Theme Oceanic",
        "Bearded Theme Oceanic Reversed",
        "Bearded Theme Solarized",
        "Bearded Theme Solarized Light",
        "Bearded Theme Solarized Reversed",
        "Bearded Theme Stained Blue",
        "Bearded Theme Stained Purple",
        "Bearded Theme Surprising Blueberry",
        "Bearded Theme Surprising Eggplant",
        "Bearded Theme Surprising Watermelon",
        "Bearded Theme Vivid Black",
        "Bearded Theme Vivid Light",
        "Bearded Theme Vivid Purple",
        "Bearded Theme Void",
        "Visual Studio Dark",
        "Default High Contrast",
        "Default Dark Modern",
        "Default Dark+",
        "Kimbie Dark",
        "Visual Studio Light",
        "Default High Contrast Light",
        "Default Light Modern",
        "Default Light+",
        "Min Dark",
        "Min Light",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "enumItemLabels": [
        "Abyss",
        "Bearded Themanopia (Experimental)",
        "Bearded Theme Altica",
        "Bearded Theme Anthracite",
        "Bearded Theme Aquarelle Cymbidium",
        "Bearded Theme Aquarelle Hydrangea",
        "Bearded Theme Aquarelle Lilac",
        "Bearded Theme Arc",
        "Bearded Theme Arc Blueberry",
        "Bearded Theme Arc Eggplant",
        "Bearded Theme Arc EolStorm",
        "Bearded Theme Arc Reversed",
        "Bearded Theme Black & Amethyst",
        "Bearded Theme Black & Amethyst Soft",
        "Bearded Theme Black & Diamond",
        "Bearded Theme Black & Diamond Soft",
        "Bearded Theme Black & Emerald",
        "Bearded Theme Black & Emerald Soft",
        "Bearded Theme Black & Gold",
        "Bearded Theme Black & Gold Soft",
        "Bearded Theme Black & Ruby",
        "Bearded Theme Black & Ruby Soft",
        "Bearded Theme Coffee",
        "Bearded Theme Coffee Cream",
        "Bearded Theme Coffee Reversed",
        "Bearded Theme Earth",
        "Bearded Theme feat. Gold D Raynh",
        "Bearded Theme feat. Melle Julie",
        "Bearded Theme feat. Melle Julie Light",
        "Bearded Theme feat. Mintshake D Raynh",
        "Bearded Theme feat. Will",
        "Bearded Theme HC Brewing Storm",
        "Bearded Theme HC Chocolate Espresso",
        "Bearded Theme HC Ebony",
        "Bearded Theme HC Flurry",
        "Bearded Theme HC Midnight Void",
        "Bearded Theme HC Minuit",
        "Bearded Theme HC Wonderland Wood",
        "Bearded Theme Light",
        "Bearded Theme Milkshake Blueberry",
        "Bearded Theme Milkshake Mango",
        "Bearded Theme Milkshake Mint",
        "Bearded Theme Milkshake Raspberry",
        "Bearded Theme Milkshake Vanilla Banana",
        "Bearded Theme Monokai Black",
        "Bearded Theme Monokai Metallian",
        "Bearded Theme Monokai Reversed",
        "Bearded Theme Monokai Stone",
        "Bearded Theme Monokai Terra",
        "Bearded Theme Oceanic",
        "Bearded Theme Oceanic Reversed",
        "Bearded Theme Solarized",
        "Bearded Theme Solarized Light",
        "Bearded Theme Solarized Reversed",
        "Bearded Theme Stained Blue",
        "Bearded Theme Stained Purple",
        "Bearded Theme Surprising Blueberry",
        "Bearded Theme Surprising Eggplant",
        "Bearded Theme Surprising Watermelon",
        "Bearded Theme Vivid Black",
        "Bearded Theme Vivid Light",
        "Bearded Theme Vivid Purple",
        "Bearded Theme Void",
        "Dark (Visual Studio)",
        "Dark High Contrast",
        "Dark Modern",
        "Dark+",
        "Kimbie Dark",
        "Light (Visual Studio)",
        "Light High Contrast",
        "Light Modern",
        "Light+",
        "Min Dark",
        "Min Light",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "errorMessage": "Theme is unknown or not installed.",
      "defaultDefaultValue": "Default Dark Modern",
      "scope": 3,
      "restricted": false
    },
    "workbench.preferredLightColorTheme": {
      "type": "string",
      "markdownDescription": "Specifies the color theme when system color mode is light and `#window.autoDetectColorScheme#` is enabled.",
      "default": "Default Light Modern",
      "tags": [
        "colorThemeConfiguration"
      ],
      "enum": [
        "Abyss",
        "Bearded Themanopia (Experimental)",
        "Bearded Theme Altica",
        "Bearded Theme Anthracite",
        "Bearded Theme Aquarelle Cymbidium",
        "Bearded Theme Aquarelle Hydrangea",
        "Bearded Theme Aquarelle Lilac",
        "Bearded Theme Arc",
        "Bearded Theme Arc Blueberry",
        "Bearded Theme Arc Eggplant",
        "Bearded Theme Arc EolStorm",
        "Bearded Theme Arc Reversed",
        "Bearded Theme Black & Amethyst",
        "Bearded Theme Black & Amethyst Soft",
        "Bearded Theme Black & Diamond",
        "Bearded Theme Black & Diamond Soft",
        "Bearded Theme Black & Emerald",
        "Bearded Theme Black & Emerald Soft",
        "Bearded Theme Black & Gold",
        "Bearded Theme Black & Gold Soft",
        "Bearded Theme Black & Ruby",
        "Bearded Theme Black & Ruby Soft",
        "Bearded Theme Coffee",
        "Bearded Theme Coffee Cream",
        "Bearded Theme Coffee Reversed",
        "Bearded Theme Earth",
        "Bearded Theme feat. Gold D Raynh",
        "Bearded Theme feat. Melle Julie",
        "Bearded Theme feat. Melle Julie Light",
        "Bearded Theme feat. Mintshake D Raynh",
        "Bearded Theme feat. Will",
        "Bearded Theme HC Brewing Storm",
        "Bearded Theme HC Chocolate Espresso",
        "Bearded Theme HC Ebony",
        "Bearded Theme HC Flurry",
        "Bearded Theme HC Midnight Void",
        "Bearded Theme HC Minuit",
        "Bearded Theme HC Wonderland Wood",
        "Bearded Theme Light",
        "Bearded Theme Milkshake Blueberry",
        "Bearded Theme Milkshake Mango",
        "Bearded Theme Milkshake Mint",
        "Bearded Theme Milkshake Raspberry",
        "Bearded Theme Milkshake Vanilla Banana",
        "Bearded Theme Monokai Black",
        "Bearded Theme Monokai Metallian",
        "Bearded Theme Monokai Reversed",
        "Bearded Theme Monokai Stone",
        "Bearded Theme Monokai Terra",
        "Bearded Theme Oceanic",
        "Bearded Theme Oceanic Reversed",
        "Bearded Theme Solarized",
        "Bearded Theme Solarized Light",
        "Bearded Theme Solarized Reversed",
        "Bearded Theme Stained Blue",
        "Bearded Theme Stained Purple",
        "Bearded Theme Surprising Blueberry",
        "Bearded Theme Surprising Eggplant",
        "Bearded Theme Surprising Watermelon",
        "Bearded Theme Vivid Black",
        "Bearded Theme Vivid Light",
        "Bearded Theme Vivid Purple",
        "Bearded Theme Void",
        "Visual Studio Dark",
        "Default High Contrast",
        "Default Dark Modern",
        "Default Dark+",
        "Kimbie Dark",
        "Visual Studio Light",
        "Default High Contrast Light",
        "Default Light Modern",
        "Default Light+",
        "Min Dark",
        "Min Light",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "enumItemLabels": [
        "Abyss",
        "Bearded Themanopia (Experimental)",
        "Bearded Theme Altica",
        "Bearded Theme Anthracite",
        "Bearded Theme Aquarelle Cymbidium",
        "Bearded Theme Aquarelle Hydrangea",
        "Bearded Theme Aquarelle Lilac",
        "Bearded Theme Arc",
        "Bearded Theme Arc Blueberry",
        "Bearded Theme Arc Eggplant",
        "Bearded Theme Arc EolStorm",
        "Bearded Theme Arc Reversed",
        "Bearded Theme Black & Amethyst",
        "Bearded Theme Black & Amethyst Soft",
        "Bearded Theme Black & Diamond",
        "Bearded Theme Black & Diamond Soft",
        "Bearded Theme Black & Emerald",
        "Bearded Theme Black & Emerald Soft",
        "Bearded Theme Black & Gold",
        "Bearded Theme Black & Gold Soft",
        "Bearded Theme Black & Ruby",
        "Bearded Theme Black & Ruby Soft",
        "Bearded Theme Coffee",
        "Bearded Theme Coffee Cream",
        "Bearded Theme Coffee Reversed",
        "Bearded Theme Earth",
        "Bearded Theme feat. Gold D Raynh",
        "Bearded Theme feat. Melle Julie",
        "Bearded Theme feat. Melle Julie Light",
        "Bearded Theme feat. Mintshake D Raynh",
        "Bearded Theme feat. Will",
        "Bearded Theme HC Brewing Storm",
        "Bearded Theme HC Chocolate Espresso",
        "Bearded Theme HC Ebony",
        "Bearded Theme HC Flurry",
        "Bearded Theme HC Midnight Void",
        "Bearded Theme HC Minuit",
        "Bearded Theme HC Wonderland Wood",
        "Bearded Theme Light",
        "Bearded Theme Milkshake Blueberry",
        "Bearded Theme Milkshake Mango",
        "Bearded Theme Milkshake Mint",
        "Bearded Theme Milkshake Raspberry",
        "Bearded Theme Milkshake Vanilla Banana",
        "Bearded Theme Monokai Black",
        "Bearded Theme Monokai Metallian",
        "Bearded Theme Monokai Reversed",
        "Bearded Theme Monokai Stone",
        "Bearded Theme Monokai Terra",
        "Bearded Theme Oceanic",
        "Bearded Theme Oceanic Reversed",
        "Bearded Theme Solarized",
        "Bearded Theme Solarized Light",
        "Bearded Theme Solarized Reversed",
        "Bearded Theme Stained Blue",
        "Bearded Theme Stained Purple",
        "Bearded Theme Surprising Blueberry",
        "Bearded Theme Surprising Eggplant",
        "Bearded Theme Surprising Watermelon",
        "Bearded Theme Vivid Black",
        "Bearded Theme Vivid Light",
        "Bearded Theme Vivid Purple",
        "Bearded Theme Void",
        "Dark (Visual Studio)",
        "Dark High Contrast",
        "Dark Modern",
        "Dark+",
        "Kimbie Dark",
        "Light (Visual Studio)",
        "Light High Contrast",
        "Light Modern",
        "Light+",
        "Min Dark",
        "Min Light",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "errorMessage": "Theme is unknown or not installed.",
      "defaultDefaultValue": "Default Light Modern",
      "scope": 3,
      "restricted": false
    },
    "workbench.preferredHighContrastColorTheme": {
      "type": "string",
      "markdownDescription": "Specifies the color theme when in high contrast dark mode and `#window.autoDetectHighContrast#` is enabled.",
      "default": "Default High Contrast",
      "tags": [
        "colorThemeConfiguration"
      ],
      "enum": [
        "Abyss",
        "Bearded Themanopia (Experimental)",
        "Bearded Theme Altica",
        "Bearded Theme Anthracite",
        "Bearded Theme Aquarelle Cymbidium",
        "Bearded Theme Aquarelle Hydrangea",
        "Bearded Theme Aquarelle Lilac",
        "Bearded Theme Arc",
        "Bearded Theme Arc Blueberry",
        "Bearded Theme Arc Eggplant",
        "Bearded Theme Arc EolStorm",
        "Bearded Theme Arc Reversed",
        "Bearded Theme Black & Amethyst",
        "Bearded Theme Black & Amethyst Soft",
        "Bearded Theme Black & Diamond",
        "Bearded Theme Black & Diamond Soft",
        "Bearded Theme Black & Emerald",
        "Bearded Theme Black & Emerald Soft",
        "Bearded Theme Black & Gold",
        "Bearded Theme Black & Gold Soft",
        "Bearded Theme Black & Ruby",
        "Bearded Theme Black & Ruby Soft",
        "Bearded Theme Coffee",
        "Bearded Theme Coffee Cream",
        "Bearded Theme Coffee Reversed",
        "Bearded Theme Earth",
        "Bearded Theme feat. Gold D Raynh",
        "Bearded Theme feat. Melle Julie",
        "Bearded Theme feat. Melle Julie Light",
        "Bearded Theme feat. Mintshake D Raynh",
        "Bearded Theme feat. Will",
        "Bearded Theme HC Brewing Storm",
        "Bearded Theme HC Chocolate Espresso",
        "Bearded Theme HC Ebony",
        "Bearded Theme HC Flurry",
        "Bearded Theme HC Midnight Void",
        "Bearded Theme HC Minuit",
        "Bearded Theme HC Wonderland Wood",
        "Bearded Theme Light",
        "Bearded Theme Milkshake Blueberry",
        "Bearded Theme Milkshake Mango",
        "Bearded Theme Milkshake Mint",
        "Bearded Theme Milkshake Raspberry",
        "Bearded Theme Milkshake Vanilla Banana",
        "Bearded Theme Monokai Black",
        "Bearded Theme Monokai Metallian",
        "Bearded Theme Monokai Reversed",
        "Bearded Theme Monokai Stone",
        "Bearded Theme Monokai Terra",
        "Bearded Theme Oceanic",
        "Bearded Theme Oceanic Reversed",
        "Bearded Theme Solarized",
        "Bearded Theme Solarized Light",
        "Bearded Theme Solarized Reversed",
        "Bearded Theme Stained Blue",
        "Bearded Theme Stained Purple",
        "Bearded Theme Surprising Blueberry",
        "Bearded Theme Surprising Eggplant",
        "Bearded Theme Surprising Watermelon",
        "Bearded Theme Vivid Black",
        "Bearded Theme Vivid Light",
        "Bearded Theme Vivid Purple",
        "Bearded Theme Void",
        "Visual Studio Dark",
        "Default High Contrast",
        "Default Dark Modern",
        "Default Dark+",
        "Kimbie Dark",
        "Visual Studio Light",
        "Default High Contrast Light",
        "Default Light Modern",
        "Default Light+",
        "Min Dark",
        "Min Light",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "enumItemLabels": [
        "Abyss",
        "Bearded Themanopia (Experimental)",
        "Bearded Theme Altica",
        "Bearded Theme Anthracite",
        "Bearded Theme Aquarelle Cymbidium",
        "Bearded Theme Aquarelle Hydrangea",
        "Bearded Theme Aquarelle Lilac",
        "Bearded Theme Arc",
        "Bearded Theme Arc Blueberry",
        "Bearded Theme Arc Eggplant",
        "Bearded Theme Arc EolStorm",
        "Bearded Theme Arc Reversed",
        "Bearded Theme Black & Amethyst",
        "Bearded Theme Black & Amethyst Soft",
        "Bearded Theme Black & Diamond",
        "Bearded Theme Black & Diamond Soft",
        "Bearded Theme Black & Emerald",
        "Bearded Theme Black & Emerald Soft",
        "Bearded Theme Black & Gold",
        "Bearded Theme Black & Gold Soft",
        "Bearded Theme Black & Ruby",
        "Bearded Theme Black & Ruby Soft",
        "Bearded Theme Coffee",
        "Bearded Theme Coffee Cream",
        "Bearded Theme Coffee Reversed",
        "Bearded Theme Earth",
        "Bearded Theme feat. Gold D Raynh",
        "Bearded Theme feat. Melle Julie",
        "Bearded Theme feat. Melle Julie Light",
        "Bearded Theme feat. Mintshake D Raynh",
        "Bearded Theme feat. Will",
        "Bearded Theme HC Brewing Storm",
        "Bearded Theme HC Chocolate Espresso",
        "Bearded Theme HC Ebony",
        "Bearded Theme HC Flurry",
        "Bearded Theme HC Midnight Void",
        "Bearded Theme HC Minuit",
        "Bearded Theme HC Wonderland Wood",
        "Bearded Theme Light",
        "Bearded Theme Milkshake Blueberry",
        "Bearded Theme Milkshake Mango",
        "Bearded Theme Milkshake Mint",
        "Bearded Theme Milkshake Raspberry",
        "Bearded Theme Milkshake Vanilla Banana",
        "Bearded Theme Monokai Black",
        "Bearded Theme Monokai Metallian",
        "Bearded Theme Monokai Reversed",
        "Bearded Theme Monokai Stone",
        "Bearded Theme Monokai Terra",
        "Bearded Theme Oceanic",
        "Bearded Theme Oceanic Reversed",
        "Bearded Theme Solarized",
        "Bearded Theme Solarized Light",
        "Bearded Theme Solarized Reversed",
        "Bearded Theme Stained Blue",
        "Bearded Theme Stained Purple",
        "Bearded Theme Surprising Blueberry",
        "Bearded Theme Surprising Eggplant",
        "Bearded Theme Surprising Watermelon",
        "Bearded Theme Vivid Black",
        "Bearded Theme Vivid Light",
        "Bearded Theme Vivid Purple",
        "Bearded Theme Void",
        "Dark (Visual Studio)",
        "Dark High Contrast",
        "Dark Modern",
        "Dark+",
        "Kimbie Dark",
        "Light (Visual Studio)",
        "Light High Contrast",
        "Light Modern",
        "Light+",
        "Min Dark",
        "Min Light",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "errorMessage": "Theme is unknown or not installed.",
      "defaultDefaultValue": "Default High Contrast",
      "scope": 3,
      "restricted": false
    },
    "workbench.preferredHighContrastLightColorTheme": {
      "type": "string",
      "markdownDescription": "Specifies the color theme when in high contrast light mode and `#window.autoDetectHighContrast#` is enabled.",
      "default": "Default High Contrast Light",
      "tags": [
        "colorThemeConfiguration"
      ],
      "enum": [
        "Abyss",
        "Bearded Themanopia (Experimental)",
        "Bearded Theme Altica",
        "Bearded Theme Anthracite",
        "Bearded Theme Aquarelle Cymbidium",
        "Bearded Theme Aquarelle Hydrangea",
        "Bearded Theme Aquarelle Lilac",
        "Bearded Theme Arc",
        "Bearded Theme Arc Blueberry",
        "Bearded Theme Arc Eggplant",
        "Bearded Theme Arc EolStorm",
        "Bearded Theme Arc Reversed",
        "Bearded Theme Black & Amethyst",
        "Bearded Theme Black & Amethyst Soft",
        "Bearded Theme Black & Diamond",
        "Bearded Theme Black & Diamond Soft",
        "Bearded Theme Black & Emerald",
        "Bearded Theme Black & Emerald Soft",
        "Bearded Theme Black & Gold",
        "Bearded Theme Black & Gold Soft",
        "Bearded Theme Black & Ruby",
        "Bearded Theme Black & Ruby Soft",
        "Bearded Theme Coffee",
        "Bearded Theme Coffee Cream",
        "Bearded Theme Coffee Reversed",
        "Bearded Theme Earth",
        "Bearded Theme feat. Gold D Raynh",
        "Bearded Theme feat. Melle Julie",
        "Bearded Theme feat. Melle Julie Light",
        "Bearded Theme feat. Mintshake D Raynh",
        "Bearded Theme feat. Will",
        "Bearded Theme HC Brewing Storm",
        "Bearded Theme HC Chocolate Espresso",
        "Bearded Theme HC Ebony",
        "Bearded Theme HC Flurry",
        "Bearded Theme HC Midnight Void",
        "Bearded Theme HC Minuit",
        "Bearded Theme HC Wonderland Wood",
        "Bearded Theme Light",
        "Bearded Theme Milkshake Blueberry",
        "Bearded Theme Milkshake Mango",
        "Bearded Theme Milkshake Mint",
        "Bearded Theme Milkshake Raspberry",
        "Bearded Theme Milkshake Vanilla Banana",
        "Bearded Theme Monokai Black",
        "Bearded Theme Monokai Metallian",
        "Bearded Theme Monokai Reversed",
        "Bearded Theme Monokai Stone",
        "Bearded Theme Monokai Terra",
        "Bearded Theme Oceanic",
        "Bearded Theme Oceanic Reversed",
        "Bearded Theme Solarized",
        "Bearded Theme Solarized Light",
        "Bearded Theme Solarized Reversed",
        "Bearded Theme Stained Blue",
        "Bearded Theme Stained Purple",
        "Bearded Theme Surprising Blueberry",
        "Bearded Theme Surprising Eggplant",
        "Bearded Theme Surprising Watermelon",
        "Bearded Theme Vivid Black",
        "Bearded Theme Vivid Light",
        "Bearded Theme Vivid Purple",
        "Bearded Theme Void",
        "Visual Studio Dark",
        "Default High Contrast",
        "Default Dark Modern",
        "Default Dark+",
        "Kimbie Dark",
        "Visual Studio Light",
        "Default High Contrast Light",
        "Default Light Modern",
        "Default Light+",
        "Min Dark",
        "Min Light",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "enumItemLabels": [
        "Abyss",
        "Bearded Themanopia (Experimental)",
        "Bearded Theme Altica",
        "Bearded Theme Anthracite",
        "Bearded Theme Aquarelle Cymbidium",
        "Bearded Theme Aquarelle Hydrangea",
        "Bearded Theme Aquarelle Lilac",
        "Bearded Theme Arc",
        "Bearded Theme Arc Blueberry",
        "Bearded Theme Arc Eggplant",
        "Bearded Theme Arc EolStorm",
        "Bearded Theme Arc Reversed",
        "Bearded Theme Black & Amethyst",
        "Bearded Theme Black & Amethyst Soft",
        "Bearded Theme Black & Diamond",
        "Bearded Theme Black & Diamond Soft",
        "Bearded Theme Black & Emerald",
        "Bearded Theme Black & Emerald Soft",
        "Bearded Theme Black & Gold",
        "Bearded Theme Black & Gold Soft",
        "Bearded Theme Black & Ruby",
        "Bearded Theme Black & Ruby Soft",
        "Bearded Theme Coffee",
        "Bearded Theme Coffee Cream",
        "Bearded Theme Coffee Reversed",
        "Bearded Theme Earth",
        "Bearded Theme feat. Gold D Raynh",
        "Bearded Theme feat. Melle Julie",
        "Bearded Theme feat. Melle Julie Light",
        "Bearded Theme feat. Mintshake D Raynh",
        "Bearded Theme feat. Will",
        "Bearded Theme HC Brewing Storm",
        "Bearded Theme HC Chocolate Espresso",
        "Bearded Theme HC Ebony",
        "Bearded Theme HC Flurry",
        "Bearded Theme HC Midnight Void",
        "Bearded Theme HC Minuit",
        "Bearded Theme HC Wonderland Wood",
        "Bearded Theme Light",
        "Bearded Theme Milkshake Blueberry",
        "Bearded Theme Milkshake Mango",
        "Bearded Theme Milkshake Mint",
        "Bearded Theme Milkshake Raspberry",
        "Bearded Theme Milkshake Vanilla Banana",
        "Bearded Theme Monokai Black",
        "Bearded Theme Monokai Metallian",
        "Bearded Theme Monokai Reversed",
        "Bearded Theme Monokai Stone",
        "Bearded Theme Monokai Terra",
        "Bearded Theme Oceanic",
        "Bearded Theme Oceanic Reversed",
        "Bearded Theme Solarized",
        "Bearded Theme Solarized Light",
        "Bearded Theme Solarized Reversed",
        "Bearded Theme Stained Blue",
        "Bearded Theme Stained Purple",
        "Bearded Theme Surprising Blueberry",
        "Bearded Theme Surprising Eggplant",
        "Bearded Theme Surprising Watermelon",
        "Bearded Theme Vivid Black",
        "Bearded Theme Vivid Light",
        "Bearded Theme Vivid Purple",
        "Bearded Theme Void",
        "Dark (Visual Studio)",
        "Dark High Contrast",
        "Dark Modern",
        "Dark+",
        "Kimbie Dark",
        "Light (Visual Studio)",
        "Light High Contrast",
        "Light Modern",
        "Light+",
        "Min Dark",
        "Min Light",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "errorMessage": "Theme is unknown or not installed.",
      "defaultDefaultValue": "Default High Contrast Light",
      "scope": 3,
      "restricted": false
    },
    "workbench.iconTheme": {
      "type": [
        "string",
        "null"
      ],
      "default": "vs-seti",
      "description": "Specifies the file icon theme used in the workbench or 'null' to not show any file icons.",
      "enum": [
        null,
        "vs-minimal",
        "vs-seti",
        "material-icon-theme"
      ],
      "enumItemLabels": [
        "None",
        "Minimal (Visual Studio Code)",
        "Seti (Visual Studio Code)",
        "Material Icon Theme"
      ],
      "enumDescriptions": [
        "No file icons",
        "",
        "",
        ""
      ],
      "errorMessage": "File icon theme is unknown or not installed.",
      "defaultDefaultValue": "vs-seti",
      "scope": 3,
      "restricted": false
    },
    "workbench.colorCustomizations": {
      "type": "object",
      "description": "Overrides colors from the currently selected color theme.",
      "allOf": [
        {
          "$ref": "vscode://schemas/workbench-colors"
        },
        {
          "properties": {
            "[Abyss]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Themanopia (Experimental)]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Altica]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Anthracite]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Aquarelle Cymbidium]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Aquarelle Hydrangea]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Aquarelle Lilac]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Arc]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Arc Blueberry]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Arc Eggplant]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Arc EolStorm]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Arc Reversed]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Black & Amethyst]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Black & Amethyst Soft]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Black & Diamond]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Black & Diamond Soft]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Black & Emerald]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Black & Emerald Soft]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Black & Gold]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Black & Gold Soft]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Black & Ruby]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Black & Ruby Soft]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Coffee]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Coffee Cream]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Coffee Reversed]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Earth]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme feat. Gold D Raynh]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme feat. Melle Julie]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme feat. Melle Julie Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme feat. Mintshake D Raynh]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme feat. Will]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme HC Brewing Storm]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme HC Chocolate Espresso]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme HC Ebony]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme HC Flurry]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme HC Midnight Void]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme HC Minuit]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme HC Wonderland Wood]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Milkshake Blueberry]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Milkshake Mango]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Milkshake Mint]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Milkshake Raspberry]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Milkshake Vanilla Banana]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Monokai Black]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Monokai Metallian]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Monokai Reversed]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Monokai Stone]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Monokai Terra]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Oceanic]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Oceanic Reversed]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Solarized]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Solarized Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Solarized Reversed]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Stained Blue]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Stained Purple]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Surprising Blueberry]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Surprising Eggplant]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Surprising Watermelon]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Vivid Black]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Vivid Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Vivid Purple]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Bearded Theme Void]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Visual Studio Dark]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Default High Contrast]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Default Dark Modern]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Default Dark+]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Kimbie Dark]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Visual Studio Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Default High Contrast Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Default Light Modern]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Default Light+]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Min Dark]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Min Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Monokai]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Monokai Dimmed]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Quiet Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Red]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Solarized Dark]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Solarized Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Tomorrow Night Blue]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            }
          },
          "patternProperties": {
            "^\\[[^\\]]*(\\]\\s*\\[[^\\]]*)*\\]$": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            }
          }
        }
      ],
      "default": {},
      "defaultSnippets": [
        {
          "body": {}
        }
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "workbench.productIconTheme": {
      "type": [
        "string",
        "null"
      ],
      "default": "Default",
      "description": "Specifies the product icon theme used.",
      "enum": [
        "Default"
      ],
      "enumItemLabels": [
        "Default"
      ],
      "enumDescriptions": [
        "Default"
      ],
      "errorMessage": "Product icon theme is unknown or not installed.",
      "defaultDefaultValue": "Default",
      "scope": 3,
      "restricted": false
    },
    "window.autoDetectColorScheme": {
      "type": "boolean",
      "markdownDescription": "If enabled, will automatically select a color theme based on the system color mode. If the system color mode is dark, `#workbench.preferredDarkColorTheme#` is used, else `#workbench.preferredLightColorTheme#`.",
      "default": false,
      "tags": [
        "colorThemeConfiguration"
      ],
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "editor.tokenColorCustomizations": {
      "description": "Overrides editor syntax colors and font style from the currently selected color theme.",
      "default": {},
      "allOf": [
        {
          "type": "object",
          "properties": {
            "comments": {
              "description": "Sets the colors and styles for comments",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "strings": {
              "description": "Sets the colors and styles for strings literals.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "keywords": {
              "description": "Sets the colors and styles for keywords.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "numbers": {
              "description": "Sets the colors and styles for number literals.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "types": {
              "description": "Sets the colors and styles for type declarations and references.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "functions": {
              "description": "Sets the colors and styles for functions declarations and references.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "variables": {
              "description": "Sets the colors and styles for variables declarations and references.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "textMateRules": {
              "description": "Sets colors and styles using textmate theming rules (advanced).",
              "$ref": "vscode://schemas/textmate-colors"
            },
            "semanticHighlighting": {
              "description": "Whether semantic highlighting should be enabled for this theme.",
              "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
              "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "patternProperties": {
            "^\\[": {}
          }
        },
        {
          "properties": {
            "[Abyss]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Themanopia (Experimental)]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Altica]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Anthracite]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Aquarelle Cymbidium]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Aquarelle Hydrangea]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Aquarelle Lilac]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Arc]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Arc Blueberry]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Arc Eggplant]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Arc EolStorm]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Arc Reversed]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Amethyst]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Amethyst Soft]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Diamond]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Diamond Soft]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Emerald]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Emerald Soft]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Gold]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Gold Soft]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Ruby]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Ruby Soft]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Coffee]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Coffee Cream]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Coffee Reversed]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Earth]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme feat. Gold D Raynh]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme feat. Melle Julie]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme feat. Melle Julie Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme feat. Mintshake D Raynh]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme feat. Will]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme HC Brewing Storm]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme HC Chocolate Espresso]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme HC Ebony]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme HC Flurry]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme HC Midnight Void]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme HC Minuit]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme HC Wonderland Wood]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Milkshake Blueberry]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Milkshake Mango]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Milkshake Mint]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Milkshake Raspberry]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Milkshake Vanilla Banana]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Monokai Black]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Monokai Metallian]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Monokai Reversed]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Monokai Stone]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Monokai Terra]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Oceanic]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Oceanic Reversed]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Solarized]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Solarized Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Solarized Reversed]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Stained Blue]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Stained Purple]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Surprising Blueberry]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Surprising Eggplant]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Surprising Watermelon]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Vivid Black]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Vivid Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Vivid Purple]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Void]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Visual Studio Dark]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Default High Contrast]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Default Dark Modern]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Default Dark+]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Kimbie Dark]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Visual Studio Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Default High Contrast Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Default Light Modern]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Default Light+]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Min Dark]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Min Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Monokai]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Monokai Dimmed]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Quiet Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Red]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Solarized Dark]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Solarized Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Tomorrow Night Blue]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "patternProperties": {
            "^\\[[^\\]]*(\\]\\s*\\[[^\\]]*)*\\]$": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          }
        }
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "editor.semanticTokenColorCustomizations": {
      "description": "Overrides editor semantic token color and styles from the currently selected color theme.",
      "default": {},
      "allOf": [
        {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Whether semantic highlighting is enabled or disabled for this theme",
              "suggestSortText": "0_enabled"
            },
            "rules": {
              "$ref": "vscode://schemas/token-styling",
              "description": "Semantic token styling rules for this theme.",
              "suggestSortText": "0_rules"
            }
          },
          "additionalProperties": false,
          "patternProperties": {
            "^\\[": {}
          }
        },
        {
          "properties": {
            "[Abyss]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Themanopia (Experimental)]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Altica]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Anthracite]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Aquarelle Cymbidium]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Aquarelle Hydrangea]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Aquarelle Lilac]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Arc]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Arc Blueberry]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Arc Eggplant]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Arc EolStorm]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Arc Reversed]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Amethyst]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Amethyst Soft]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Diamond]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Diamond Soft]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Emerald]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Emerald Soft]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Gold]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Gold Soft]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Ruby]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Black & Ruby Soft]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Coffee]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Coffee Cream]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Coffee Reversed]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Earth]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme feat. Gold D Raynh]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme feat. Melle Julie]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme feat. Melle Julie Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme feat. Mintshake D Raynh]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme feat. Will]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme HC Brewing Storm]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme HC Chocolate Espresso]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme HC Ebony]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme HC Flurry]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme HC Midnight Void]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme HC Minuit]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme HC Wonderland Wood]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Milkshake Blueberry]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Milkshake Mango]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Milkshake Mint]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Milkshake Raspberry]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Milkshake Vanilla Banana]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Monokai Black]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Monokai Metallian]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Monokai Reversed]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Monokai Stone]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Monokai Terra]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Oceanic]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Oceanic Reversed]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Solarized]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Solarized Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Solarized Reversed]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Stained Blue]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Stained Purple]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Surprising Blueberry]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Surprising Eggplant]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Surprising Watermelon]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Vivid Black]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Vivid Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Vivid Purple]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Bearded Theme Void]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Visual Studio Dark]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Default High Contrast]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Default Dark Modern]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Default Dark+]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Kimbie Dark]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Visual Studio Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Default High Contrast Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Default Light Modern]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Default Light+]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Min Dark]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Min Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Monokai]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Monokai Dimmed]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Quiet Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Red]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Solarized Dark]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Solarized Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Tomorrow Night Blue]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            }
          },
          "patternProperties": {
            "^\\[[^\\]]*(\\]\\s*\\[[^\\]]*)*\\]$": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            }
          }
        }
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "application.experimental.rendererProfiling": {
      "type": "boolean",
      "default": false,
      "tags": [
        "experimental"
      ],
      "markdownDescription": "When enabled slow renderers are automatically profiled",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.titleScrollbarSizing": {
      "type": "string",
      "enum": [
        "default",
        "large"
      ],
      "enumDescriptions": [
        "The default size.",
        "Increases the size, so it can be grabbed more easily with the mouse."
      ],
      "description": "Controls the height of the scrollbars used for tabs and breadcrumbs in the editor title area.",
      "default": "default",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.showTabs": {
      "type": "string",
      "enum": [
        "multiple",
        "single",
        "none"
      ],
      "enumDescriptions": [
        "Each editor is displayed as a tab in the editor title area.",
        "The active editor is displayed as a single large tab in the editor title area.",
        "The editor title area is not displayed."
      ],
      "description": "Controls whether opened editors should show as individual tabs, one single large tab or if the title area should not be shown.",
      "default": "multiple",
      "defaultDefaultValue": "multiple",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.editorActionsLocation": {
      "type": "string",
      "enum": [
        "default",
        "titleBar",
        "hidden"
      ],
      "markdownEnumDescriptions": [
        "Show editor actions in the window title bar when `#workbench.editor.showTabs#` is set to `none`. Otherwise, editor actions are shown in the editor tab bar.",
        "Show editor actions in the window title bar. If `#window.customTitleBarVisibility#` is set to `never`, editor actions are hidden.",
        "Editor actions are not shown."
      ],
      "markdownDescription": "Controls where the editor actions are shown.",
      "default": "default",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.wrapTabs": {
      "type": "boolean",
      "markdownDescription": "Controls whether tabs should be wrapped over multiple lines when exceeding available space or whether a scrollbar should appear instead. This value is ignored when `#workbench.editor.showTabs#` is not set to '`multiple`'.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.scrollToSwitchTabs": {
      "type": "boolean",
      "markdownDescription": "Controls whether scrolling over tabs will open them or not. By default tabs will only reveal upon scrolling, but not open. You can press and hold the Shift-key while scrolling to change this behavior for that duration. This value is ignored when `#workbench.editor.showTabs#` is not set to `multiple`.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.highlightModifiedTabs": {
      "type": "boolean",
      "markdownDescription": "Controls whether a top border is drawn on tabs for editors that have unsaved changes. This value is ignored when `#workbench.editor.showTabs#` is not set to multiple.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.decorations.badges": {
      "type": "boolean",
      "markdownDescription": "Controls whether editor file decorations should use badges.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.decorations.colors": {
      "type": "boolean",
      "markdownDescription": "Controls whether editor file decorations should use colors.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.customLabels.enabled": {
      "type": "boolean",
      "markdownDescription": "Controls whether the custom workbench editor labels should be applied.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.customLabels.patterns": {
      "type": "object",
      "markdownDescription": "Controls the rendering of the editor label. Each __Item__ is a pattern that matches a file path. Both relative and absolute file paths are supported. In case multiple patterns match, the longest matching path will be picked. Each __Value__ is the template for the rendered editor when the __Item__ matches. Variables are substituted based on the context:\n- `${dirname}`: name of the folder in which the file is located (e.g. `root/folder/file.txt -> folder`).\n- `${dirname(N)}`: name of the nth parent folder in which the file is located (e.g. `N=1: root/folder/file.txt -> root`). Folders can be picked from the start of the path by using negative numbers (e.g. `N=-1: root/folder/file.txt -> root`). If the __Item__ is an absolute pattern path, the first folder (`N=-1`) refers to the first folder in the absoulte path, otherwise it corresponds to the workspace folder.\n- `${filename}`: name of the file without the file extension (e.g. `root/folder/file.txt -> file`).\n- `${extname}`: the file extension (e.g. `root/folder/file.txt -> txt`).\n\nExample: `\"**/static/**/*.html\": \"${filename} - ${dirname} (${extname})\"` will render a file `root/static/folder/file.html` as `file - folder (html)`.",
      "additionalProperties": {
        "type": "string",
        "markdownDescription": "The template which should be rendered when the pattern mtches. May include the variables ${dirname}, ${filename} and ${extname}.",
        "minLength": 1,
        "pattern": ".*[a-zA-Z0-9].*"
      },
      "default": {},
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.labelFormat": {
      "type": "string",
      "enum": [
        "default",
        "short",
        "medium",
        "long"
      ],
      "enumDescriptions": [
        "Show the name of the file. When tabs are enabled and two files have the same name in one group the distinguishing sections of each file's path are added. When tabs are disabled, the path relative to the workspace folder is shown if the editor is active.",
        "Show the name of the file followed by its directory name.",
        "Show the name of the file followed by its path relative to the workspace folder.",
        "Show the name of the file followed by its absolute path."
      ],
      "default": "default",
      "description": "Controls the format of the label for an editor.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.untitled.labelFormat": {
      "type": "string",
      "enum": [
        "content",
        "name"
      ],
      "enumDescriptions": [
        "The name of the untitled file is derived from the contents of its first line unless it has an associated file path. It will fallback to the name in case the line is empty or contains no word characters.",
        "The name of the untitled file is not derived from the contents of the file."
      ],
      "default": "content",
      "description": "Controls the format of the label for an untitled editor.",
      "defaultDefaultValue": "content",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.empty.hint": {
      "type": "string",
      "enum": [
        "text",
        "hidden"
      ],
      "default": "text",
      "markdownDescription": "Controls if the empty editor text hint should be visible in the editor.",
      "defaultDefaultValue": "text",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.historyBasedLanguageDetection": {
      "type": "boolean",
      "default": true,
      "tags": [
        "experimental"
      ],
      "description": "Enables use of editor history in language detection. This causes automatic language detection to favor languages that have been recently opened and allows for automatic language detection to operate with smaller inputs.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.preferHistoryBasedLanguageDetection": {
      "type": "boolean",
      "default": false,
      "tags": [
        "experimental"
      ],
      "description": "When enabled, a language detection model that takes into account editor history will be given higher precedence.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.languageDetectionHints": {
      "type": "object",
      "default": {
        "untitledEditors": true,
        "notebookEditors": true
      },
      "tags": [
        "experimental"
      ],
      "description": "When enabled, shows a Status bar Quick Fix when the editor language doesn't match detected content language.",
      "additionalProperties": false,
      "properties": {
        "untitledEditors": {
          "type": "boolean",
          "description": "Show in untitled text editors"
        },
        "notebookEditors": {
          "type": "boolean",
          "description": "Show in notebook editors"
        }
      },
      "defaultDefaultValue": {
        "untitledEditors": true,
        "notebookEditors": true
      },
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.tabActionLocation": {
      "type": "string",
      "enum": [
        "left",
        "right"
      ],
      "default": "right",
      "markdownDescription": "Controls the position of the editor's tabs action buttons (close, unpin). This value is ignored when `#workbench.editor.showTabs#` is not set to `multiple`.",
      "defaultDefaultValue": "right",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.tabActionCloseVisibility": {
      "type": "boolean",
      "default": true,
      "description": "Controls the visibility of the tab close action button.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.tabActionUnpinVisibility": {
      "type": "boolean",
      "default": true,
      "description": "Controls the visibility of the tab unpin action button.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.tabSizing": {
      "type": "string",
      "enum": [
        "fit",
        "shrink",
        "fixed"
      ],
      "default": "fit",
      "enumDescriptions": [
        "Always keep tabs large enough to show the full editor label.",
        "Allow tabs to get smaller when the available space is not enough to show all tabs at once.",
        "Make all tabs the same size, while allowing them to get smaller when the available space is not enough to show all tabs at once."
      ],
      "markdownDescription": "Controls the size of editor tabs. This value is ignored when `#workbench.editor.showTabs#` is not set to `multiple`.",
      "defaultDefaultValue": "fit",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.tabSizingFixedMinWidth": {
      "type": "number",
      "default": 50,
      "minimum": 38,
      "markdownDescription": "Controls the minimum width of tabs when `#workbench.editor.tabSizing#` size is set to `fixed`.",
      "defaultDefaultValue": 50,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.tabSizingFixedMaxWidth": {
      "type": "number",
      "default": 160,
      "minimum": 38,
      "markdownDescription": "Controls the maximum width of tabs when `#workbench.editor.tabSizing#` size is set to `fixed`.",
      "defaultDefaultValue": 160,
      "scope": 3,
      "restricted": false
    },
    "window.density.editorTabHeight": {
      "type": "string",
      "enum": [
        "default",
        "compact"
      ],
      "default": "default",
      "markdownDescription": "Controls the height of editor tabs. Also applies to the title control bar when `#workbench.editor.showTabs#` is not set to `multiple`.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.pinnedTabSizing": {
      "type": "string",
      "enum": [
        "normal",
        "compact",
        "shrink"
      ],
      "default": "normal",
      "enumDescriptions": [
        "A pinned tab inherits the look of non pinned tabs.",
        "A pinned tab will show in a compact form with only icon or first letter of the editor name.",
        "A pinned tab shrinks to a compact fixed size showing parts of the editor name."
      ],
      "markdownDescription": "Controls the size of pinned editor tabs. Pinned tabs are sorted to the beginning of all opened tabs and typically do not close until unpinned. This value is ignored when `#workbench.editor.showTabs#` is not set to `multiple`.",
      "defaultDefaultValue": "normal",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.pinnedTabsOnSeparateRow": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled, displays pinned tabs in a separate row above all other tabs. This value is ignored when `#workbench.editor.showTabs#` is not set to `multiple`.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.preventPinnedEditorClose": {
      "type": "string",
      "enum": [
        "keyboardAndMouse",
        "keyboard",
        "mouse",
        "never"
      ],
      "default": "keyboardAndMouse",
      "enumDescriptions": [
        "Always prevent closing the pinned editor when using mouse middle click or keyboard.",
        "Prevent closing the pinned editor when using the keyboard.",
        "Prevent closing the pinned editor when using mouse middle click.",
        "Never prevent closing a pinned editor."
      ],
      "description": "Controls whether pinned editors should close when keyboard or middle mouse click is used for closing.",
      "defaultDefaultValue": "keyboardAndMouse",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.splitSizing": {
      "type": "string",
      "enum": [
        "auto",
        "distribute",
        "split"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Splits the active editor group to equal parts, unless all editor groups are already in equal parts. In that case, splits all the editor groups to equal parts.",
        "Splits all the editor groups to equal parts.",
        "Splits the active editor group to equal parts."
      ],
      "description": "Controls the size of editor groups when splitting them.",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.splitOnDragAndDrop": {
      "type": "boolean",
      "default": true,
      "description": "Controls if editor groups can be split from drag and drop operations by dropping an editor or file on the edges of the editor area.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.dragToOpenWindow": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls if editors can be dragged out of the window to open them in a new window. Press and hold the `Alt` key while dragging to toggle this dynamically.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.focusRecentEditorAfterClose": {
      "type": "boolean",
      "description": "Controls whether editors are closed in most recently used order or from left to right.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.showIcons": {
      "type": "boolean",
      "description": "Controls whether opened editors should show with an icon or not. This requires a file icon theme to be enabled as well.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.enablePreview": {
      "type": "boolean",
      "description": "Controls whether opened editors show as preview editors. Preview editors do not stay open, are reused until explicitly set to be kept open (via double-click or editing), and show file names in italics.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.enablePreviewFromQuickOpen": {
      "type": "boolean",
      "markdownDescription": "Controls whether editors opened from Quick Open show as preview editors. Preview editors do not stay open, and are reused until explicitly set to be kept open (via double-click or editing). When enabled, hold Ctrl before selection to open an editor as a non-preview. This value is ignored when `#workbench.editor.showTabs#` is not set to `multiple`.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.enablePreviewFromCodeNavigation": {
      "type": "boolean",
      "markdownDescription": "Controls whether editors remain in preview when a code navigation is started from them. Preview editors do not stay open, and are reused until explicitly set to be kept open (via double-click or editing). This value is ignored when `#workbench.editor.showTabs#` is not set to `multiple`.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.closeOnFileDelete": {
      "type": "boolean",
      "description": "Controls whether editors showing a file that was opened during the session should close automatically when getting deleted or renamed by some other process. Disabling this will keep the editor open  on such an event. Note that deleting from within the application will always close the editor and that editors with unsaved changes will never close to preserve your data.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.openPositioning": {
      "type": "string",
      "enum": [
        "left",
        "right",
        "first",
        "last"
      ],
      "default": "right",
      "markdownDescription": "Controls where editors open. Select `left` or `right` to open editors to the left or right of the currently active one. Select `first` or `last` to open editors independently from the currently active one.",
      "defaultDefaultValue": "right",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.openSideBySideDirection": {
      "type": "string",
      "enum": [
        "right",
        "down"
      ],
      "default": "right",
      "markdownDescription": "Controls the default direction of editors that are opened side by side (for example, from the Explorer). By default, editors will open on the right hand side of the currently active one. If changed to `down`, the editors will open below the currently active one.",
      "defaultDefaultValue": "right",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.closeEmptyGroups": {
      "type": "boolean",
      "description": "Controls the behavior of empty editor groups when the last tab in the group is closed. When enabled, empty groups will automatically close. When disabled, empty groups will remain part of the grid.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.revealIfOpen": {
      "type": "boolean",
      "description": "Controls whether an editor is revealed in any of the visible groups if opened. If disabled, an editor will prefer to open in the currently active editor group. If enabled, an already opened editor will be revealed instead of opened again in the currently active editor group. Note that there are some cases where this setting is ignored, such as when forcing an editor to open in a specific group or to the side of the currently active group.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.mouseBackForwardToNavigate": {
      "type": "boolean",
      "description": "Enables the use of mouse buttons four and five for commands 'Go Back' and 'Go Forward'.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.navigationScope": {
      "type": "string",
      "enum": [
        "default",
        "editorGroup",
        "editor"
      ],
      "default": "default",
      "markdownDescription": "Controls the scope of history navigation in editors for commands such as 'Go Back' and 'Go Forward'.",
      "enumDescriptions": [
        "Navigate across all opened editors and editor groups.",
        "Navigate only in editors of the active editor group.",
        "Navigate only in the active editor."
      ],
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.sharedViewState": {
      "type": "boolean",
      "description": "Preserves the most recent editor view state (such as scroll position) across all editor groups and restores that if no specific editor view state is found for the editor group.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.splitInGroupLayout": {
      "type": "string",
      "enum": [
        "vertical",
        "horizontal"
      ],
      "default": "horizontal",
      "markdownDescription": "Controls the layout for when an editor is split in an editor group to be either vertical or horizontal.",
      "enumDescriptions": [
        "Editors are positioned from top to bottom.",
        "Editors are positioned from left to right."
      ],
      "defaultDefaultValue": "horizontal",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.centeredLayoutAutoResize": {
      "type": "boolean",
      "default": true,
      "description": "Controls if the centered layout should automatically resize to maximum width when more than one group is open. Once only one group is open it will resize back to the original centered width.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.centeredLayoutFixedWidth": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether the centered layout tries to maintain constant width when the window is resized.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.doubleClickTabToToggleEditorGroupSizes": {
      "type": "string",
      "enum": [
        "maximize",
        "expand",
        "off"
      ],
      "default": "expand",
      "markdownDescription": "Controls how the editor group is resized when double clicking on a tab. This value is ignored when `#workbench.editor.showTabs#` is not set to `multiple`.",
      "enumDescriptions": [
        "All other editor groups are hidden and the current editor group is maximized to take up the entire editor area.",
        "The editor group takes as much space as possible by making all other editor groups as small as possible.",
        "No editor group is resized when double clicking on a tab."
      ],
      "defaultDefaultValue": "expand",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.limit.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Controls if the number of opened editors should be limited or not. When enabled, less recently used editors will close to make space for newly opening editors.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.limit.value": {
      "type": "number",
      "default": 10,
      "exclusiveMinimum": 0,
      "markdownDescription": "Controls the maximum number of opened editors. Use the `#workbench.editor.limit.perEditorGroup#` setting to control this limit per editor group or across all groups.",
      "defaultDefaultValue": 10,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.limit.excludeDirty": {
      "type": "boolean",
      "default": false,
      "description": "Controls if the maximum number of opened editors should exclude dirty editors for counting towards the configured limit.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.limit.perEditorGroup": {
      "type": "boolean",
      "default": false,
      "description": "Controls if the limit of maximum opened editors should apply per editor group or across all editor groups.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.commandPalette.history": {
      "type": "number",
      "description": "Controls the number of recently used commands to keep in history for the command palette. Set to 0 to disable command history.",
      "default": 50,
      "minimum": 0,
      "defaultDefaultValue": 50,
      "scope": 3,
      "restricted": false
    },
    "workbench.commandPalette.preserveInput": {
      "type": "boolean",
      "description": "Controls whether the last typed input to the command palette should be restored when opening it the next time.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.commandPalette.experimental.suggestCommands": {
      "type": "boolean",
      "tags": [
        "experimental"
      ],
      "description": "Controls whether the command palette should have a list of commonly used commands.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.commandPalette.experimental.askChatLocation": {
      "type": "string",
      "tags": [
        "experimental"
      ],
      "description": "Controls where the command palette should ask chat questions.",
      "default": "chatView",
      "enum": [
        "chatView",
        "quickChat"
      ],
      "enumDescriptions": [
        "Ask chat questions in the Chat view.",
        "Ask chat questions in Quick Chat."
      ],
      "defaultDefaultValue": "chatView",
      "scope": 3,
      "restricted": false
    },
    "workbench.commandPalette.experimental.enableNaturalLanguageSearch": {
      "type": "boolean",
      "tags": [
        "experimental"
      ],
      "description": "Controls whether the command palette should include similar commands. You must have an extension installed that provides Natural Language support.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.quickOpen.closeOnFocusLost": {
      "type": "boolean",
      "description": "Controls whether Quick Open should close automatically once it loses focus.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.quickOpen.preserveInput": {
      "type": "boolean",
      "description": "Controls whether the last typed input to Quick Open should be restored when opening it the next time.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.settings.openDefaultSettings": {
      "type": "boolean",
      "description": "Controls whether opening settings also opens an editor showing all default settings.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.settings.useSplitJSON": {
      "type": "boolean",
      "markdownDescription": "Controls whether to use the split JSON editor when editing settings as JSON.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.settings.openDefaultKeybindings": {
      "type": "boolean",
      "description": "Controls whether opening keybinding settings also opens an editor showing all default keybindings.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.sideBar.location": {
      "type": "string",
      "enum": [
        "left",
        "right"
      ],
      "default": "left",
      "description": "Controls the location of the primary side bar and activity bar. They can either show on the left or right of the workbench. The secondary side bar will show on the opposite side of the workbench.",
      "defaultDefaultValue": "left",
      "scope": 3,
      "restricted": false
    },
    "workbench.panel.defaultLocation": {
      "type": "string",
      "enum": [
        "left",
        "bottom",
        "right"
      ],
      "default": "bottom",
      "description": "Controls the default location of the panel (Terminal, Debug Console, Output, Problems) in a new workspace. It can either show at the bottom, right, or left of the editor area.",
      "defaultDefaultValue": "bottom",
      "scope": 3,
      "restricted": false
    },
    "workbench.panel.opensMaximized": {
      "type": "string",
      "enum": [
        "always",
        "never",
        "preserve"
      ],
      "default": "preserve",
      "description": "Controls whether the panel opens maximized. It can either always open maximized, never open maximized, or open to the last state it was in before being closed.",
      "enumDescriptions": [
        "Always maximize the panel when opening it.",
        "Never maximize the panel when opening it. The panel will open un-maximized.",
        "Open the panel to the state that it was in, before it was closed."
      ],
      "defaultDefaultValue": "preserve",
      "scope": 3,
      "restricted": false
    },
    "workbench.statusBar.visible": {
      "type": "boolean",
      "default": true,
      "description": "Controls the visibility of the status bar at the bottom of the workbench.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.activityBar.location": {
      "type": "string",
      "enum": [
        "default",
        "top",
        "bottom",
        "hidden"
      ],
      "default": "default",
      "markdownDescription": "Controls the location of the Activity Bar relative to the Primary and Secondary Side Bars.",
      "enumDescriptions": [
        "Show the Activity Bar on the side of the Primary Side Bar and on top of the Secondary Side Bar.",
        "Show the Activity Bar on top of the Primary and Secondary Side Bars.",
        "Show the Activity Bar at the bottom of the Primary and Secondary Side Bars.",
        "Hide the Activity Bar in the Primary and Secondary Side Bars."
      ],
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "workbench.activityBar.iconClickBehavior": {
      "type": "string",
      "enum": [
        "toggle",
        "focus"
      ],
      "default": "toggle",
      "markdownDescription": "Controls the behavior of clicking an Activity Bar icon in the workbench. This value is ignored when `#workbench.activityBar.location#` is not set to `default`.",
      "enumDescriptions": [
        "Hide the Primary Side Bar if the clicked item is already visible.",
        "Focus the Primary Side Bar if the clicked item is already visible."
      ],
      "defaultDefaultValue": "toggle",
      "scope": 3,
      "restricted": false
    },
    "workbench.view.alwaysShowHeaderActions": {
      "type": "boolean",
      "default": false,
      "description": "Controls the visibility of view header actions. View header actions may either be always visible, or only visible when that view is focused or hovered over.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.settings.editor": {
      "type": "string",
      "enum": [
        "ui",
        "json"
      ],
      "enumDescriptions": [
        "Use the settings UI editor.",
        "Use the JSON file editor."
      ],
      "description": "Determines which settings editor to use by default.",
      "default": "ui",
      "scope": 3,
      "defaultDefaultValue": "ui",
      "restricted": false
    },
    "workbench.hover.delay": {
      "type": "number",
      "description": "Controls the delay in milliseconds after which the hover is shown for workbench items (ex. some extension provided tree view items). Already visible items may require a refresh before reflecting this setting change.",
      "default": 500,
      "minimum": 0,
      "defaultDefaultValue": 500,
      "scope": 3,
      "restricted": false
    },
    "workbench.reduceMotion": {
      "type": "string",
      "description": "Controls whether the workbench should render with fewer animations.",
      "enumDescriptions": [
        "Always render with reduced motion.",
        "Do not render with reduced motion",
        "Render with reduced motion based on OS configuration."
      ],
      "default": "auto",
      "tags": [
        "accessibility"
      ],
      "enum": [
        "on",
        "off",
        "auto"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "workbench.layoutControl.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether the layout control is shown in the custom title bar. This setting only has an effect when `#window.customTitleBarVisibility#` is not set to `never`.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.layoutControl.type": {
      "type": "string",
      "enum": [
        "menu",
        "toggles",
        "both"
      ],
      "enumDescriptions": [
        "Shows a single button with a dropdown of layout options.",
        "Shows several buttons for toggling the visibility of the panels and side bar.",
        "Shows both the dropdown and toggle buttons."
      ],
      "default": "both",
      "description": "Controls whether the layout control in the custom title bar is displayed as a single menu button or with multiple UI toggles.",
      "defaultDefaultValue": "both",
      "scope": 3,
      "restricted": false
    },
    "workbench.tips.enabled": {
      "type": "boolean",
      "default": true,
      "description": "When enabled, will show the watermark tips when no editor is open.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "window.title": {
      "type": "string",
      "default": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${profileName}${separator}${appName}",
      "markdownDescription": "Controls the window title based on the current context such as the opened workspace or active editor. Variables are substituted based on the context:\n- `${activeEditorShort}`: the file name (e.g. myFile.txt).\n- `${activeEditorMedium}`: the path of the file relative to the workspace folder (e.g. myFolder/myFileFolder/myFile.txt).\n- `${activeEditorLong}`: the full path of the file (e.g. /Users/Development/myFolder/myFileFolder/myFile.txt).\n- `${activeFolderShort}`: the name of the folder the file is contained in (e.g. myFileFolder).\n- `${activeFolderMedium}`: the path of the folder the file is contained in, relative to the workspace folder (e.g. myFolder/myFileFolder).\n- `${activeFolderLong}`: the full path of the folder the file is contained in (e.g. /Users/Development/myFolder/myFileFolder).\n- `${folderName}`: name of the workspace folder the file is contained in (e.g. myFolder).\n- `${folderPath}`: file path of the workspace folder the file is contained in (e.g. /Users/Development/myFolder).\n- `${rootName}`: name of the workspace with optional remote name and workspace indicator if applicable (e.g. myFolder, myRemoteFolder [SSH] or myWorkspace (Workspace)).\n- `${rootNameShort}`: shortened name of the workspace without suffixes (e.g. myFolder, myRemoteFolder or myWorkspace).\n- `${rootPath}`: file path of the opened workspace or folder (e.g. /Users/Development/myWorkspace).\n- `${profileName}`: name of the profile in which the workspace is opened (e.g. Data Science (Profile)). Ignored if default profile is used.\n- `${appName}`: e.g. VS Code.\n- `${remoteName}`: e.g. SSH\n- `${dirty}`: an indicator for when the active editor has unsaved changes.\n- `${focusedView}`: the name of the view that is currently focused.\n- `${activeRepositoryName}`: the name of the active repository (e.g. vscode).\n- `${activeRepositoryBranchName}`: the name of the active branch in the active repository (e.g. main).\n- `${separator}`: a conditional separator (\" - \") that only shows when surrounded by variables with values or static text.",
      "defaultDefaultValue": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${profileName}${separator}${appName}",
      "scope": 3,
      "restricted": false
    },
    "window.titleSeparator": {
      "type": "string",
      "default": " - ",
      "markdownDescription": "Separator used by `#window.title#`.",
      "defaultDefaultValue": " - ",
      "scope": 3,
      "restricted": false
    },
    "window.commandCenter": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Show command launcher together with the window title. This setting only has an effect when `#window.customTitleBarVisibility#` is not set to `never`.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "problems.visibility": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the problems are visible throughout the editor and workbench.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.fullScreen": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also puts the workbench into full screen mode.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.centerLayout": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also centers the layout.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.showTabs": {
      "type": "string",
      "enum": [
        "multiple",
        "single",
        "none"
      ],
      "description": "Controls whether turning on Zen Mode should show multiple editor tabs, a single editor tab, or hide the editor title area completely.",
      "enumDescriptions": [
        "Each editor is displayed as a tab in the editor title area.",
        "The active editor is displayed as a single large tab in the editor title area.",
        "The editor title area is not displayed."
      ],
      "default": "multiple",
      "defaultDefaultValue": "multiple",
      "scope": 3,
      "restricted": false
    },
    "zenMode.hideStatusBar": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also hides the status bar at the bottom of the workbench.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.hideActivityBar": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also hides the activity bar either at the left or right of the workbench.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.hideLineNumbers": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also hides the editor line numbers.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.restore": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether a window should restore to Zen Mode if it was exited in Zen Mode.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.silentNotifications": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether notifications do not disturb mode should be enabled while in Zen Mode. If true, only error notifications will pop out.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "comments.openPanel": {
      "enum": [
        "neverOpen",
        "openOnSessionStart",
        "openOnSessionStartWithComments"
      ],
      "default": "openOnSessionStartWithComments",
      "description": "Controls when the comments panel should open.",
      "restricted": false,
      "markdownDeprecationMessage": "This setting is deprecated in favor of `comments.openView`.",
      "defaultDefaultValue": "openOnSessionStartWithComments",
      "scope": 3,
      "deprecationMessage": "This setting is deprecated in favor of `comments.openView`."
    },
    "comments.openView": {
      "enum": [
        "never",
        "file",
        "firstFile",
        "firstFileUnresolved"
      ],
      "enumDescriptions": [
        "The comments view will never be opened.",
        "The comments view will open when a file with comments is active.",
        "If the comments view has not been opened yet during this session it will open the first time during a session that a file with comments is active.",
        "If the comments view has not been opened yet during this session and the comment is not resolved, it will open the first time during a session that a file with comments is active."
      ],
      "default": "firstFile",
      "description": "Controls when the comments view should open.",
      "restricted": false,
      "defaultDefaultValue": "firstFile",
      "scope": 3
    },
    "comments.useRelativeTime": {
      "type": "boolean",
      "default": true,
      "description": "Determines if relative time will be used in comment timestamps (ex. '1 day ago').",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "comments.visible": {
      "type": "boolean",
      "default": true,
      "description": "Controls the visibility of the comments bar and comment threads in editors that have commenting ranges and comments. Comments are still accessible via the Comments view and will cause commenting to be toggled on in the same way running the command \"Comments: Toggle Editor Commenting\" toggles comments.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "comments.maxHeight": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the comments widget scrolls or expands.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "comments.collapseOnResolve": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the comment thread should collapse when the thread is resolved.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "task.problemMatchers.neverPrompt": {
      "markdownDescription": "Configures whether to show the problem matcher prompt when running a task. Set to `true` to never prompt, or use a dictionary of task types to turn off prompting only for specific task types.",
      "oneOf": [
        {
          "type": "boolean",
          "markdownDescription": "Sets problem matcher prompting behavior for all tasks."
        },
        {
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "boolean"
            }
          },
          "markdownDescription": "An object containing task type-boolean pairs to never prompt for problem matchers on.",
          "default": {
            "shell": true
          }
        }
      ],
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "task.autoDetect": {
      "markdownDescription": "Controls enablement of `provideTasks` for all task provider extension. If the Tasks: Run Task command is slow, disabling auto detect for task providers may help. Individual extensions may also provide settings that disable auto detection.",
      "type": "string",
      "enum": [
        "on",
        "off"
      ],
      "default": "on",
      "defaultDefaultValue": "on",
      "scope": 3,
      "restricted": false
    },
    "task.slowProviderWarning": {
      "markdownDescription": "Configures whether a warning is shown when a provider is slow",
      "oneOf": [
        {
          "type": "boolean",
          "markdownDescription": "Sets the slow provider warning for all tasks."
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "An array of task types to never show the slow provider warning."
          }
        }
      ],
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "task.quickOpen.history": {
      "markdownDescription": "Controls the number of recent items tracked in task quick open dialog.",
      "type": "number",
      "default": 30,
      "minimum": 0,
      "maximum": 30,
      "defaultDefaultValue": 30,
      "scope": 3,
      "restricted": false
    },
    "task.quickOpen.detail": {
      "markdownDescription": "Controls whether to show the task detail for tasks that have a detail in task quick picks, such as Run Task.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "task.quickOpen.skip": {
      "type": "boolean",
      "description": "Controls whether the task quick pick is skipped when there is only one task to pick from.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "task.quickOpen.showAll": {
      "type": "boolean",
      "description": "Causes the Tasks: Run Task command to use the slower \"show all\" behavior instead of the faster two level picker where tasks are grouped by provider.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "task.allowAutomaticTasks": {
      "type": "string",
      "enum": [
        "on",
        "off"
      ],
      "enumDescriptions": [
        "Always",
        "Never"
      ],
      "description": "Enable automatic tasks - note that tasks won't run in an untrusted workspace.",
      "default": "on",
      "restricted": true,
      "defaultDefaultValue": "on",
      "scope": 3
    },
    "task.reconnection": {
      "type": "boolean",
      "description": "On window reload, reconnect to tasks that have problem matchers.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "task.saveBeforeRun": {
      "markdownDescription": "Save all dirty editors before running a task.",
      "type": "string",
      "enum": [
        "always",
        "never",
        "prompt"
      ],
      "enumDescriptions": [
        "Always saves all editors before running.",
        "Never saves editors before running.",
        "Prompts whether to save editors before running."
      ],
      "default": "always",
      "defaultDefaultValue": "always",
      "scope": 3,
      "restricted": false
    },
    "task.verboseLogging": {
      "type": "boolean",
      "description": "Enable verbose logging for tasks.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "screencastMode.verticalOffset": {
      "type": "number",
      "default": 20,
      "minimum": 0,
      "maximum": 90,
      "description": "Controls the vertical offset of the screencast mode overlay from the bottom as a percentage of the workbench height.",
      "defaultDefaultValue": 20,
      "scope": 3,
      "restricted": false
    },
    "screencastMode.fontSize": {
      "type": "number",
      "default": 56,
      "minimum": 20,
      "maximum": 100,
      "description": "Controls the font size (in pixels) of the screencast mode keyboard.",
      "defaultDefaultValue": 56,
      "scope": 3,
      "restricted": false
    },
    "screencastMode.keyboardOptions": {
      "type": "object",
      "description": "Options for customizing the keyboard overlay in screencast mode.",
      "properties": {
        "showKeys": {
          "type": "boolean",
          "default": true,
          "description": "Show raw keys."
        },
        "showKeybindings": {
          "type": "boolean",
          "default": true,
          "description": "Show keyboard shortcuts."
        },
        "showCommands": {
          "type": "boolean",
          "default": true,
          "description": "Show command names."
        },
        "showCommandGroups": {
          "type": "boolean",
          "default": false,
          "description": "Show command group names, when commands are also shown."
        },
        "showSingleEditorCursorMoves": {
          "type": "boolean",
          "default": true,
          "description": "Show single editor cursor move commands."
        }
      },
      "default": {
        "showKeys": true,
        "showKeybindings": true,
        "showCommands": true,
        "showCommandGroups": false,
        "showSingleEditorCursorMoves": true
      },
      "additionalProperties": false,
      "defaultDefaultValue": {
        "showKeys": true,
        "showKeybindings": true,
        "showCommands": true,
        "showCommandGroups": false,
        "showSingleEditorCursorMoves": true
      },
      "scope": 3,
      "restricted": false
    },
    "screencastMode.keyboardOverlayTimeout": {
      "type": "number",
      "default": 800,
      "minimum": 500,
      "maximum": 5000,
      "description": "Controls how long (in milliseconds) the keyboard overlay is shown in screencast mode.",
      "defaultDefaultValue": 800,
      "scope": 3,
      "restricted": false
    },
    "screencastMode.mouseIndicatorColor": {
      "type": "string",
      "format": "color-hex",
      "default": "#FF0000",
      "description": "Controls the color in hex (#RGB, #RGBA, #RRGGBB or #RRGGBBAA) of the mouse indicator in screencast mode.",
      "defaultDefaultValue": "#FF0000",
      "scope": 3,
      "restricted": false
    },
    "screencastMode.mouseIndicatorSize": {
      "type": "number",
      "default": 20,
      "minimum": 20,
      "maximum": 100,
      "description": "Controls the size (in pixels) of the mouse indicator in screencast mode.",
      "defaultDefaultValue": 20,
      "scope": 3,
      "restricted": false
    },
    "accessibility.hideAccessibleView": {
      "description": "Controls whether the Accessible View is hidden.",
      "type": "boolean",
      "default": false,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "mergeEditor.diffAlgorithm": {
      "type": "string",
      "enum": [
        "legacy",
        "advanced"
      ],
      "default": "advanced",
      "markdownEnumDescriptions": [
        "Uses the legacy diffing algorithm.",
        "Uses the advanced diffing algorithm."
      ],
      "defaultDefaultValue": "advanced",
      "scope": 3,
      "restricted": false
    },
    "mergeEditor.showDeletionMarkers": {
      "type": "boolean",
      "default": true,
      "description": "Controls if deletions in base or one of the inputs should be indicated by a vertical bar.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "multiDiffEditor.experimental.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable experimental multi diff editor.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.settings.enableNaturalLanguageSearch": {
      "type": "boolean",
      "description": "Controls whether to enable the natural language search mode for settings. The natural language search is provided by a Microsoft online service.",
      "default": true,
      "scope": 3,
      "tags": [
        "usesOnlineServices"
      ],
      "defaultDefaultValue": true,
      "restricted": false
    },
    "workbench.settings.settingsSearchTocBehavior": {
      "type": "string",
      "enum": [
        "hide",
        "filter"
      ],
      "enumDescriptions": [
        "Hide the Table of Contents while searching.",
        "Filter the Table of Contents to just categories that have matching settings. Clicking on a category will filter the results to that category."
      ],
      "description": "Controls the behavior of the Settings editor Table of Contents while searching. If this setting is being changed in the Settings editor, the setting will take effect after the search query is modified.",
      "default": "filter",
      "scope": 3,
      "defaultDefaultValue": "filter",
      "restricted": false
    },
    "files.refactoring.autoSave": {
      "description": "Controls if files that were part of a refactoring are saved automatically",
      "default": true,
      "type": "boolean",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.allowBreakpointsEverywhere": {
      "type": "boolean",
      "description": "Allow setting breakpoints in any file.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.gutterMiddleClickAction": {
      "type": "string",
      "enum": [
        "logpoint",
        "conditionalBreakpoint",
        "triggeredBreakpoint",
        "none"
      ],
      "description": "Controls the action to perform when clicking the editor gutter with the middle mouse button.",
      "enumDescriptions": [
        "Add Logpoint.",
        "Add Conditional Breakpoint.",
        "Add Triggered Breakpoint.",
        "Don't perform any action."
      ],
      "default": "logpoint",
      "defaultDefaultValue": "logpoint",
      "scope": 3,
      "restricted": false
    },
    "debug.openExplorerOnEnd": {
      "type": "boolean",
      "description": "Automatically open the explorer view at the end of a debug session.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.closeReadonlyTabsOnEnd": {
      "type": "boolean",
      "description": "At the end of a debug session, all the read-only tabs associated with that session will be closed",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.inlineValues": {
      "type": "string",
      "enum": [
        "on",
        "off",
        "auto"
      ],
      "description": "Show variable values inline in editor while debugging.",
      "enumDescriptions": [
        "Always show variable values inline in editor while debugging.",
        "Never show variable values inline in editor while debugging.",
        "Show variable values inline in editor while debugging when the language supports inline value locations."
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "debug.toolBarLocation": {
      "enum": [
        "floating",
        "docked",
        "commandCenter",
        "hidden"
      ],
      "markdownDescription": "Controls the location of the debug toolbar. Either `floating` in all views, `docked` in the debug view, `commandCenter` (requires `#window.commandCenter#`), or `hidden`.",
      "default": "floating",
      "markdownEnumDescriptions": [
        "Show debug toolbar in all views.",
        "Show debug toolbar only in debug views.",
        "`(Experimental)` Show debug toolbar in the command center.",
        "Do not show debug toolbar."
      ],
      "defaultDefaultValue": "floating",
      "scope": 3,
      "restricted": false
    },
    "debug.showInStatusBar": {
      "enum": [
        "never",
        "always",
        "onFirstSessionStart"
      ],
      "enumDescriptions": [
        "Never show debug in Status bar",
        "Always show debug in Status bar",
        "Show debug in Status bar only after debug was started for the first time"
      ],
      "description": "Controls when the debug Status bar should be visible.",
      "default": "onFirstSessionStart",
      "defaultDefaultValue": "onFirstSessionStart",
      "scope": 3,
      "restricted": false
    },
    "debug.internalConsoleOptions": {
      "enum": [
        "neverOpen",
        "openOnSessionStart",
        "openOnFirstSessionStart"
      ],
      "default": "openOnFirstSessionStart",
      "description": "Controls when the internal Debug Console should open.",
      "defaultDefaultValue": "openOnFirstSessionStart",
      "scope": 3,
      "restricted": false
    },
    "debug.console.closeOnEnd": {
      "type": "boolean",
      "description": "Controls if the Debug Console should be automatically closed when the debug session ends.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.terminal.clearBeforeReusing": {
      "type": "boolean",
      "description": "Before starting a new debug session in an integrated or external terminal, clear the terminal.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.openDebug": {
      "enum": [
        "neverOpen",
        "openOnSessionStart",
        "openOnFirstSessionStart",
        "openOnDebugBreak"
      ],
      "default": "openOnDebugBreak",
      "description": "Controls when the debug view should open.",
      "defaultDefaultValue": "openOnDebugBreak",
      "scope": 3,
      "restricted": false
    },
    "debug.showSubSessionsInToolBar": {
      "type": "boolean",
      "description": "Controls whether the debug sub-sessions are shown in the debug tool bar. When this setting is false the stop command on a sub-session will also stop the parent session.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.console.fontSize": {
      "type": "number",
      "description": "Controls the font size in pixels in the Debug Console.",
      "default": 14,
      "defaultDefaultValue": 14,
      "scope": 3,
      "restricted": false
    },
    "debug.console.fontFamily": {
      "type": "string",
      "description": "Controls the font family in the Debug Console.",
      "default": "default",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "debug.console.lineHeight": {
      "type": "number",
      "description": "Controls the line height in pixels in the Debug Console. Use 0 to compute the line height from the font size.",
      "default": 0,
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "debug.console.wordWrap": {
      "type": "boolean",
      "description": "Controls if the lines should wrap in the Debug Console.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.console.historySuggestions": {
      "type": "boolean",
      "description": "Controls if the Debug Console should suggest previously typed input.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.console.collapseIdenticalLines": {
      "type": "boolean",
      "description": "Controls if the Debug Console should collapse identical lines and show a number of occurrences with a badge.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.console.acceptSuggestionOnEnter": {
      "enum": [
        "off",
        "on"
      ],
      "description": "Controls whether suggestions should be accepted on Enter in the Debug Console. Enter is also used to evaluate whatever is typed in the Debug Console.",
      "default": "off",
      "defaultDefaultValue": "off",
      "scope": 3,
      "restricted": false
    },
    "launch": {
      "type": "object",
      "description": "Global debug launch configuration. Should be used as an alternative to 'launch.json' that is shared across workspaces.",
      "default": {
        "configurations": [],
        "compounds": []
      },
      "$ref": "vscode://schemas/launch",
      "defaultDefaultValue": {
        "configurations": [],
        "compounds": []
      },
      "scope": 3,
      "restricted": false
    },
    "debug.focusWindowOnBreak": {
      "type": "boolean",
      "description": "Controls whether the workbench window should be focused when the debugger breaks.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.focusEditorOnBreak": {
      "type": "boolean",
      "description": "Controls whether the editor should be focused when the debugger breaks.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.onTaskErrors": {
      "enum": [
        "debugAnyway",
        "showErrors",
        "prompt",
        "abort"
      ],
      "enumDescriptions": [
        "Ignore task errors and start debugging.",
        "Show the Problems view and do not start debugging.",
        "Prompt user.",
        "Cancel debugging."
      ],
      "description": "Controls what to do when errors are encountered after running a preLaunchTask.",
      "default": "prompt",
      "defaultDefaultValue": "prompt",
      "scope": 3,
      "restricted": false
    },
    "debug.showBreakpointsInOverviewRuler": {
      "type": "boolean",
      "description": "Controls whether breakpoints should be shown in the overview ruler.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.showInlineBreakpointCandidates": {
      "type": "boolean",
      "description": "Controls whether inline breakpoints candidate decorations should be shown in the editor while debugging.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.confirmOnExit": {
      "description": "Controls whether to confirm when the window closes if there are active debug sessions.",
      "type": "string",
      "enum": [
        "never",
        "always"
      ],
      "enumDescriptions": [
        "Never confirm.",
        "Always confirm if there are debug sessions."
      ],
      "default": "never",
      "defaultDefaultValue": "never",
      "scope": 3,
      "restricted": false
    },
    "debug.disassemblyView.showSourceCode": {
      "type": "boolean",
      "default": true,
      "description": "Show Source Code in Disassembly View.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.autoExpandLazyVariables": {
      "type": "boolean",
      "default": false,
      "description": "Automatically show values for variables that are lazily resolved by the debugger, such as getters.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.enableStatusBarColor": {
      "type": "boolean",
      "description": "Color of the Status bar when debugger is active.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.hideLauncherWhileDebugging": {
      "type": "boolean",
      "markdownDescription": "Hide 'Start Debugging' control in title bar of 'Run and Debug' view while debugging is active. Only relevant when `#debug.toolBarLocation#` is not `docked`.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "files.associations": {
      "type": "object",
      "markdownDescription": "Configure [glob patterns](https://aka.ms/vscode-glob-patterns) of file associations to languages (for example `\"*.extension\": \"html\"`). Patterns will match on the absolute path of a file if they contain a path separator and will match on the name of the file otherwise. These have precedence over the default associations of the languages installed.",
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "scope": 3,
      "restricted": false
    },
    "files.enableTrash": {
      "type": "boolean",
      "default": true,
      "description": "Moves files/folders to the OS trash (recycle bin on Windows) when deleting. Disabling this will delete files/folders permanently.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "files.defaultLanguage": {
      "type": "string",
      "markdownDescription": "The default language identifier that is assigned to new files. If configured to `${activeEditorLanguage}`, will use the language identifier of the currently active text editor if any.",
      "default": "",
      "scope": 3,
      "restricted": false
    },
    "files.readonlyFromPermissions": {
      "type": "boolean",
      "markdownDescription": "Marks files as read-only when their file permissions indicate as such. This can be overridden via `#files.readonlyInclude#` and `#files.readonlyExclude#` settings.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "files.restoreUndoStack": {
      "type": "boolean",
      "description": "Restore the undo stack when a file is reopened.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "files.simpleDialog.enable": {
      "type": "boolean",
      "description": "Enables the simple file dialog for opening and saving files and folders. The simple file dialog replaces the system file dialog when enabled.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "files.participants.timeout": {
      "type": "number",
      "default": 60000,
      "markdownDescription": "Timeout in milliseconds after which file participants for create, rename, and delete are cancelled. Use `0` to disable participants.",
      "defaultDefaultValue": 60000,
      "scope": 3,
      "restricted": false
    },
    "explorer.openEditors.visible": {
      "type": "number",
      "description": "The initial maximum number of editors shown in the Open Editors pane. Exceeding this limit will show a scroll bar and allow resizing the pane to display more items.",
      "default": 9,
      "minimum": 1,
      "defaultDefaultValue": 9,
      "scope": 3,
      "restricted": false
    },
    "explorer.openEditors.minVisible": {
      "type": "number",
      "description": "The minimum number of editor slots pre-allocated in the Open Editors pane. If set to 0 the Open Editors pane will dynamically resize based on the number of editors.",
      "default": 0,
      "minimum": 0,
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "explorer.openEditors.sortOrder": {
      "type": "string",
      "enum": [
        "editorOrder",
        "alphabetical",
        "fullPath"
      ],
      "description": "Controls the sorting order of editors in the Open Editors pane.",
      "enumDescriptions": [
        "Editors are ordered in the same order editor tabs are shown.",
        "Editors are ordered alphabetically by tab name inside each editor group.",
        "Editors are ordered alphabetically by full path inside each editor group."
      ],
      "default": "editorOrder",
      "defaultDefaultValue": "editorOrder",
      "scope": 3,
      "restricted": false
    },
    "explorer.autoReveal": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "focusNoScroll"
      ],
      "default": true,
      "enumDescriptions": [
        "Files will be revealed and selected.",
        "Files will not be revealed and selected.",
        "Files will not be scrolled into view, but will still be focused."
      ],
      "description": "Controls whether the Explorer should automatically reveal and select files when opening them.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.autoRevealExclude": {
      "type": "object",
      "markdownDescription": "Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) for excluding files and folders from being revealed and selected in the Explorer when they are opened. Glob patterns are always evaluated relative to the path of the workspace folder unless they are absolute paths.",
      "default": {
        "**/node_modules": true,
        "**/bower_components": true
      },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "boolean",
            "description": "The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."
          },
          {
            "type": "object",
            "properties": {
              "when": {
                "type": "string",
                "pattern": "\\w*\\$\\(basename\\)\\w*",
                "default": "$(basename).ext",
                "description": "Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name."
              }
            }
          }
        ]
      },
      "defaultDefaultValue": {
        "**/node_modules": true,
        "**/bower_components": true
      },
      "scope": 3,
      "restricted": false
    },
    "explorer.enableDragAndDrop": {
      "type": "boolean",
      "description": "Controls whether the Explorer should allow to move files and folders via drag and drop. This setting only effects drag and drop from inside the Explorer.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.confirmDragAndDrop": {
      "type": "boolean",
      "description": "Controls whether the Explorer should ask for confirmation to move files and folders via drag and drop.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.confirmPasteNative": {
      "type": "boolean",
      "description": "Controls whether the Explorer should ask for confirmation when pasting native files and folders.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.confirmDelete": {
      "type": "boolean",
      "description": "Controls whether the Explorer should ask for confirmation when deleting a file via the trash.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.enableUndo": {
      "type": "boolean",
      "description": "Controls whether the Explorer should support undoing file and folder operations.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.confirmUndo": {
      "type": "string",
      "enum": [
        "verbose",
        "default",
        "light"
      ],
      "description": "Controls whether the Explorer should ask for confirmation when undoing.",
      "default": "default",
      "enumDescriptions": [
        "Explorer will prompt before all undo operations.",
        "Explorer will prompt before destructive undo operations.",
        "Explorer will not prompt before undo operations when focused."
      ],
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "explorer.expandSingleFolderWorkspaces": {
      "type": "boolean",
      "description": "Controls whether the Explorer should expand multi-root workspaces containing only one folder during initialization",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.sortOrder": {
      "type": "string",
      "enum": [
        "default",
        "mixed",
        "filesFirst",
        "type",
        "modified",
        "foldersNestsFiles"
      ],
      "default": "default",
      "enumDescriptions": [
        "Files and folders are sorted by their names. Folders are displayed before files.",
        "Files and folders are sorted by their names. Files are interwoven with folders.",
        "Files and folders are sorted by their names. Files are displayed before folders.",
        "Files and folders are grouped by extension type then sorted by their names. Folders are displayed before files.",
        "Files and folders are sorted by last modified date in descending order. Folders are displayed before files.",
        "Files and folders are sorted by their names. Folders are displayed before files. Files with nested children are displayed before other files."
      ],
      "markdownDescription": "Controls the property-based sorting of files and folders in the Explorer. When `#explorer.fileNesting.enabled#` is enabled, also controls sorting of nested files.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "explorer.sortOrderLexicographicOptions": {
      "type": "string",
      "enum": [
        "default",
        "upper",
        "lower",
        "unicode"
      ],
      "default": "default",
      "enumDescriptions": [
        "Uppercase and lowercase names are mixed together.",
        "Uppercase names are grouped together before lowercase names.",
        "Lowercase names are grouped together before uppercase names.",
        "Names are sorted in Unicode order."
      ],
      "description": "Controls the lexicographic sorting of file and folder names in the Explorer.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "explorer.decorations.colors": {
      "type": "boolean",
      "description": "Controls whether file decorations should use colors.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.decorations.badges": {
      "type": "boolean",
      "description": "Controls whether file decorations should use badges.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.incrementalNaming": {
      "type": "string",
      "enum": [
        "simple",
        "smart",
        "disabled"
      ],
      "enumDescriptions": [
        "Appends the word \"copy\" at the end of the duplicated name potentially followed by a number.",
        "Adds a number at the end of the duplicated name. If some number is already part of the name, tries to increase that number.",
        "Disables incremental naming. If two files with the same name exist you will be prompted to overwrite the existing file."
      ],
      "description": "Controls which naming strategy to use when giving a new name to a duplicated Explorer item on paste.",
      "default": "simple",
      "defaultDefaultValue": "simple",
      "scope": 3,
      "restricted": false
    },
    "explorer.compactFolders": {
      "type": "boolean",
      "description": "Controls whether the Explorer should render folders in a compact form. In such a form, single child folders will be compressed in a combined tree element. Useful for Java package structures, for example.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.copyRelativePathSeparator": {
      "type": "string",
      "enum": [
        "/",
        "\\",
        "auto"
      ],
      "enumDescriptions": [
        "Use slash as path separation character.",
        "Use backslash as path separation character.",
        "Uses operating system specific path separation character."
      ],
      "description": "The path separation character used when copying relative file paths.",
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "explorer.fileNesting.expand": {
      "type": "boolean",
      "markdownDescription": "Controls whether file nests are automatically expanded. `#explorer.fileNesting.enabled#` must be set for this to take effect.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "problems.autoReveal": {
      "description": "Controls whether Problems view should automatically reveal files when opening them.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "problems.defaultViewMode": {
      "description": "Controls the default view mode of the Problems view.",
      "type": "string",
      "default": "tree",
      "enum": [
        "table",
        "tree"
      ],
      "defaultDefaultValue": "tree",
      "scope": 3,
      "restricted": false
    },
    "problems.showCurrentInStatus": {
      "description": "When enabled shows the current problem in the status bar.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "problems.sortOrder": {
      "description": "Controls the order in which problems are navigated.",
      "type": "string",
      "default": "severity",
      "enum": [
        "severity",
        "position"
      ],
      "enumDescriptions": [
        "Navigate problems ordered by severity",
        "Navigate problems ordered by position"
      ],
      "defaultDefaultValue": "severity",
      "scope": 3,
      "restricted": false
    },
    "outline.icons": {
      "description": "Render Outline elements with icons.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "outline.problems.enabled": {
      "markdownDescription": "Show errors and warnings on Outline elements. Overwritten by `#problems.visibility#` when it is off.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "outline.problems.colors": {
      "markdownDescription": "Use colors for errors and warnings on Outline elements. Overwritten by `#problems.visibility#` when it is off.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "outline.problems.badges": {
      "markdownDescription": "Use badges for errors and warnings on Outline elements. Overwritten by `#problems.visibility#` when it is off.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "output.smartScroll.enabled": {
      "type": "boolean",
      "description": "Enable/disable the ability of smart scrolling in the output view. Smart scrolling allows you to lock scrolling automatically when you click in the output view and unlocks when you click in the last line.",
      "default": true,
      "scope": 3,
      "tags": [
        "output"
      ],
      "defaultDefaultValue": true,
      "restricted": false
    },
    "testing.autoRun.delay": {
      "type": "integer",
      "minimum": 0,
      "description": "How long to wait, in milliseconds, after a test is marked as outdated and starting a new run.",
      "default": 1000,
      "defaultDefaultValue": 1000,
      "scope": 3,
      "restricted": false
    },
    "testing.automaticallyOpenPeekView": {
      "description": "Configures when the error Peek view is automatically opened.",
      "enum": [
        "failureAnywhere",
        "failureInVisibleDocument",
        "never"
      ],
      "default": "failureInVisibleDocument",
      "enumDescriptions": [
        "Open automatically no matter where the failure is.",
        "Open automatically when a test fails in a visible document.",
        "Never automatically open."
      ],
      "defaultDefaultValue": "failureInVisibleDocument",
      "scope": 3,
      "restricted": false
    },
    "testing.showAllMessages": {
      "description": "Controls whether to show messages from all test runs.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "testing.automaticallyOpenPeekViewDuringAutoRun": {
      "description": "Controls whether to automatically open the Peek view during continuous run mode.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "testing.countBadge": {
      "description": "Controls the count badge on the Testing icon on the Activity Bar.",
      "enum": [
        "failed",
        "off",
        "passed",
        "skipped"
      ],
      "enumDescriptions": [
        "Show the number of failed tests",
        "Disable the testing count badge",
        "Show the number of passed tests",
        "Show the number of skipped tests"
      ],
      "default": "failed",
      "defaultDefaultValue": "failed",
      "scope": 3,
      "restricted": false
    },
    "testing.followRunningTest": {
      "description": "Controls whether the running test should be followed in the Test Explorer view.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "testing.defaultGutterClickAction": {
      "description": "Controls the action to take when left-clicking on a test decoration in the gutter.",
      "enum": [
        "run",
        "debug",
        "runWithCoverage",
        "contextMenu"
      ],
      "enumDescriptions": [
        "Run the test.",
        "Debug the test.",
        "Run the test with coverage.",
        "Open the context menu for more options."
      ],
      "default": "run",
      "defaultDefaultValue": "run",
      "scope": 3,
      "restricted": false
    },
    "testing.gutterEnabled": {
      "description": "Controls whether test decorations are shown in the editor gutter.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "testing.saveBeforeTest": {
      "description": "Control whether save all dirty editors before running a test.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "testing.openTesting": {
      "enum": [
        "neverOpen",
        "openOnTestStart",
        "openOnTestFailure",
        "openExplorerOnTestStart"
      ],
      "enumDescriptions": [
        "Never automatically open the testing views",
        "Open the test results view when tests start",
        "Open the test result view on any test failure",
        "Open the test explorer when tests start"
      ],
      "default": "openOnTestStart",
      "description": "Controls when the testing view should open.",
      "defaultDefaultValue": "openOnTestStart",
      "scope": 3,
      "restricted": false
    },
    "testing.alwaysRevealTestOnStateChange": {
      "markdownDescription": "Always reveal the executed test when `#testing.followRunningTest#` is on. If this setting is turned off, only failed tests will be revealed.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "testing.showCoverageInExplorer": {
      "description": "Whether test coverage should be down in the File Explorer view.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "testing.displayedCoveragePercent": {
      "markdownDescription": "Configures what percentage is displayed by default for test coverage.",
      "default": "totalCoverage",
      "enum": [
        "totalCoverage",
        "statement",
        "minimum"
      ],
      "enumDescriptions": [
        "A calculation of the combined statement, function, and branch coverage.",
        "The statement coverage.",
        "The minimum of statement, function, and branch coverage."
      ],
      "defaultDefaultValue": "totalCoverage",
      "scope": 3,
      "restricted": false
    },
    "testing.coverageBarThresholds": {
      "markdownDescription": "Configures the colors used for percentages in test coverage bars.",
      "default": {
        "red": 0,
        "yellow": 60,
        "green": 90
      },
      "properties": {
        "red": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "default": 0
        },
        "yellow": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "default": 60
        },
        "green": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "default": 90
        }
      },
      "defaultDefaultValue": {
        "red": 0,
        "yellow": 60,
        "green": 90
      },
      "scope": 3,
      "restricted": false
    },
    "timeline.pageSize": {
      "type": [
        "number",
        "null"
      ],
      "default": null,
      "markdownDescription": "The number of items to show in the Timeline view by default and when loading more items. Setting to `null` (the default) will automatically choose a page size based on the visible area of the Timeline view.",
      "defaultDefaultValue": null,
      "scope": 3,
      "restricted": false
    },
    "timeline.pageOnScroll": {
      "type": "boolean",
      "default": false,
      "description": "Experimental. Controls whether the Timeline view will load the next page of items when you scroll to the end of the list.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "window.confirmSaveUntitledWorkspace": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether a confirmation dialog shows asking to save or discard an opened untitled workspace in the window when switching to another workspace. Disabling the confirmation dialog will always discard the untitled workspace.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "window.zoomLevel": {
      "type": "number",
      "default": 0,
      "minimum": -8,
      "maximum": 8,
      "markdownDescription": "Adjust the default zoom level for all windows. Each increment above `0` (e.g. `1`) or below (e.g. `-1`) represents zooming `20%` larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity. See `#window.zoomPerWindow#` for configuring if the 'Zoom In' and 'Zoom Out' commands apply the zoom level to all windows or only the active window.",
      "ignoreSync": true,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "window.zoomPerWindow": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls if the 'Zoom In' and 'Zoom Out' commands apply the zoom level to all windows or only the active window. See `#window.zoomLevel#` for configuring a default zoom level for all windows.",
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "window.closeWhenEmpty": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether closing the last editor should also close the window. This setting only applies for windows that do not show folders.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "telemetry.enableCrashReporter": {
      "type": "boolean",
      "description": "Enable crash reports to be collected. This helps us improve stability. \nThis option requires restart to take effect.",
      "default": true,
      "tags": [
        "usesOnlineServices",
        "telemetry"
      ],
      "markdownDeprecationMessage": "If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated due to being combined into the `#telemetry.telemetryLevel#` setting.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false,
      "deprecationMessage": "If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated due to being combined into the `#telemetry.telemetryLevel#` setting."
    },
    "workbench.experimental.cloudChanges.autoStore": {
      "enum": [
        "onShutdown",
        "off"
      ],
      "enumDescriptions": [
        "Automatically store current working changes in the cloud on window close.",
        "Never attempt to automatically store working changes in the cloud."
      ],
      "type": "string",
      "tags": [
        "experimental",
        "usesOnlineServices"
      ],
      "default": "off",
      "markdownDescription": "Controls whether to automatically store available working changes in the cloud for the current workspace. This setting has no effect in the web.",
      "defaultDefaultValue": "off",
      "scope": 3,
      "restricted": false
    },
    "workbench.cloudChanges.autoResume": {
      "enum": [
        "onReload",
        "off"
      ],
      "enumDescriptions": [
        "Automatically resume available working changes from the cloud on window reload.",
        "Never attempt to resume working changes from the cloud."
      ],
      "type": "string",
      "tags": [
        "usesOnlineServices"
      ],
      "default": "onReload",
      "markdownDescription": "Controls whether to automatically resume available working changes stored in the cloud for the current workspace.",
      "defaultDefaultValue": "onReload",
      "scope": 3,
      "restricted": false
    },
    "workbench.cloudChanges.continueOn": {
      "enum": [
        "prompt",
        "off"
      ],
      "enumDescriptions": [
        "Prompt the user to sign in to store working changes in the cloud with Continue Working On.",
        "Do not store working changes in the cloud with Continue Working On unless the user has already turned on Cloud Changes."
      ],
      "type": "string",
      "tags": [
        "usesOnlineServices"
      ],
      "default": "prompt",
      "markdownDescription": "Controls whether to prompt the user to store working changes in the cloud when using Continue Working On.",
      "defaultDefaultValue": "prompt",
      "scope": 3,
      "restricted": false
    },
    "workbench.experimental.cloudChanges.partialMatches.enabled": {
      "type": "boolean",
      "tags": [
        "experimental",
        "usesOnlineServices"
      ],
      "default": false,
      "markdownDescription": "Controls whether to surface cloud changes which partially match the current session.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "extensions.ignoreRecommendations": {
      "type": "boolean",
      "description": "When enabled, the notifications for extension recommendations will not be shown.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "extensions.showRecommendationsOnlyOnDemand": {
      "type": "boolean",
      "deprecationMessage": "This setting is deprecated. Use extensions.ignoreRecommendations setting to control recommendation notifications. Use Extensions view's visibility actions to hide Recommended view by default.",
      "default": false,
      "tags": [
        "usesOnlineServices"
      ],
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "extensions.closeExtensionDetailsOnViewChange": {
      "type": "boolean",
      "description": "When enabled, editors with extension details will be automatically closed upon navigating away from the Extensions View.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "extensions.webWorker": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "auto"
      ],
      "enumDescriptions": [
        "The Web Worker Extension Host will always be launched.",
        "The Web Worker Extension Host will never be launched.",
        "The Web Worker Extension Host will be launched when a web extension needs it."
      ],
      "description": "Enable web worker extension host.",
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "extensions.supportVirtualWorkspaces": {
      "type": "object",
      "markdownDescription": "Override the virtual workspaces support of an extension.",
      "patternProperties": {
        "([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false,
      "default": {},
      "defaultSnippets": [
        {
          "body": {
            "pub.name": false
          }
        }
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "extensions.experimental.affinity": {
      "type": "object",
      "markdownDescription": "Configure an extension to execute in a different extension host process.",
      "patternProperties": {
        "([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$": {
          "type": "integer",
          "default": 1
        }
      },
      "additionalProperties": false,
      "default": {},
      "defaultSnippets": [
        {
          "body": {
            "pub.name": 1
          }
        }
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "extensions.experimental.deferredStartupFinishedActivation": {
      "type": "boolean",
      "description": "When enabled, extensions which declare the `onStartupFinished` activation event will be activated after a timeout.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "extensions.experimental.issueQuickAccess": {
      "type": "boolean",
      "description": "When enabled, extensions can be searched for via Quick Access and report issues from there.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "chat.editor.fontSize": {
      "type": "number",
      "description": "Controls the font size in pixels in chat codeblocks.",
      "default": 14,
      "defaultDefaultValue": 14,
      "scope": 3,
      "restricted": false
    },
    "chat.editor.fontFamily": {
      "type": "string",
      "description": "Controls the font family in chat codeblocks.",
      "default": "default",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "chat.editor.fontWeight": {
      "type": "string",
      "description": "Controls the font weight in chat codeblocks.",
      "default": "default",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "chat.editor.wordWrap": {
      "type": "string",
      "description": "Controls whether lines should wrap in chat codeblocks.",
      "default": "off",
      "enum": [
        "on",
        "off"
      ],
      "defaultDefaultValue": "off",
      "scope": 3,
      "restricted": false
    },
    "chat.editor.lineHeight": {
      "type": "number",
      "description": "Controls the line height in pixels in chat codeblocks. Use 0 to compute the line height from the font size.",
      "default": 0,
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "chat.experimental.implicitContext": {
      "type": "boolean",
      "description": "Controls whether a checkbox is shown to allow the user to determine which implicit context is included with a chat participant's prompt.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.navigation.allowNavigateToSurroundingCells": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled cursor can navigate to the next/previous cell when the current cursor in the cell editor is at the first/last line.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.outline.showMarkdownHeadersOnly": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled, notebook outline will show only markdown cells containing a header.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.outline.showCodeCells": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled, notebook outline shows code cells.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.outline.showCodeCellSymbols": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled, notebook outline shows code cell symbols. Relies on `notebook.outline.showCodeCells` being enabled.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.breadcrumbs.showCodeCells": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled, notebook breadcrumbs contain code cells.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.gotoSymbols.showAllSymbols": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled, the Go to Symbol Quick Pick will display full code symbols from the notebook, as well as Markdown headers.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "interactiveWindow.alwaysScrollOnNewCell": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Automatically scroll the interactive window to show the output of the last statement executed. If this value is false, the window will only scroll if the last cell was already the one scrolled to.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "interactiveWindow.promptToSaveOnClose": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Prompt to save the interactive window when it is closed. Only new interactive windows will be affected by this setting change.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.diff.ignoreMetadata": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Hide Metadata Differences",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.diff.ignoreOutputs": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Hide Outputs Differences",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.displayOrder": {
      "description": "Priority list for output mime types",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "defaultDefaultValue": [],
      "scope": 3,
      "restricted": false
    },
    "notebook.cellToolbarLocation": {
      "description": "Where the cell toolbar should be shown, or whether it should be hidden.",
      "type": "object",
      "additionalProperties": {
        "markdownDescription": "Configure the cell toolbar position for for specific file types",
        "type": "string",
        "enum": [
          "left",
          "right",
          "hidden"
        ]
      },
      "default": {
        "default": "right"
      },
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": {
        "default": "right"
      },
      "scope": 3,
      "restricted": false
    },
    "notebook.showCellStatusBar": {
      "description": "Whether the cell status bar should be shown.",
      "type": "string",
      "enum": [
        "hidden",
        "visible",
        "visibleAfterExecute"
      ],
      "enumDescriptions": [
        "The cell Status bar is always hidden.",
        "The cell Status bar is always visible.",
        "The cell Status bar is hidden until the cell has executed. Then it becomes visible to show the execution status."
      ],
      "default": "visible",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "visible",
      "scope": 3,
      "restricted": false
    },
    "notebook.diff.enablePreview": {
      "description": "Whether to use the enhanced text diff editor for notebook.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.diff.overviewRuler": {
      "description": "Whether to render the overview ruler in the diff editor for notebook.",
      "type": "boolean",
      "default": false,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.cellToolbarVisibility": {
      "markdownDescription": "Whether the cell toolbar should appear on hover or click.",
      "type": "string",
      "enum": [
        "hover",
        "click"
      ],
      "default": "click",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "click",
      "scope": 3,
      "restricted": false
    },
    "notebook.undoRedoPerCell": {
      "description": "Whether to use separate undo/redo stack for each cell.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.compactView": {
      "description": "Control whether the notebook editor should be rendered in a compact form. For example, when turned on, it will decrease the left margin width.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.cellFocusIndicator": {
      "description": "Controls where the focus indicator is rendered, either along the cell borders or on the left gutter.",
      "type": "string",
      "enum": [
        "border",
        "gutter"
      ],
      "default": "gutter",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "gutter",
      "scope": 3,
      "restricted": false
    },
    "notebook.insertToolbarLocation": {
      "description": "Control where the insert cell actions should appear.",
      "type": "string",
      "enum": [
        "betweenCells",
        "notebookToolbar",
        "both",
        "hidden"
      ],
      "enumDescriptions": [
        "A toolbar that appears on hover between cells.",
        "The toolbar at the top of the notebook editor.",
        "Both toolbars.",
        "The insert actions don't appear anywhere."
      ],
      "default": "both",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "both",
      "scope": 3,
      "restricted": false
    },
    "notebook.globalToolbar": {
      "description": "Control whether to render a global toolbar inside the notebook editor.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.stickyScroll.enabled": {
      "description": "Experimental. Control whether to render notebook Sticky Scroll headers in the notebook editor.",
      "type": "boolean",
      "default": false,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.stickyScroll.mode": {
      "description": "Control whether nested sticky lines appear to stack flat or indented.",
      "type": "string",
      "enum": [
        "flat",
        "indented"
      ],
      "enumDescriptions": [
        "Nested sticky lines appear flat.",
        "Nested sticky lines appear indented."
      ],
      "default": "indented",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "indented",
      "scope": 3,
      "restricted": false
    },
    "notebook.consolidatedOutputButton": {
      "description": "Control whether outputs action should be rendered in the output toolbar.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.showFoldingControls": {
      "description": "Controls when the Markdown header folding arrow is shown.",
      "type": "string",
      "enum": [
        "always",
        "never",
        "mouseover"
      ],
      "enumDescriptions": [
        "The folding controls are always visible.",
        "Never show the folding controls and reduce the gutter size.",
        "The folding controls are visible only on mouseover."
      ],
      "default": "mouseover",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "mouseover",
      "scope": 3,
      "restricted": false
    },
    "notebook.dragAndDropEnabled": {
      "description": "Control whether the notebook editor should allow moving cells through drag and drop.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.consolidatedRunButton": {
      "description": "Control whether extra actions are shown in a dropdown next to the run button.",
      "type": "boolean",
      "default": false,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.globalToolbarShowLabel": {
      "description": "Control whether the actions on the notebook toolbar should render label or not.",
      "type": "string",
      "enum": [
        "always",
        "never",
        "dynamic"
      ],
      "default": "always",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "always",
      "scope": 3,
      "restricted": false
    },
    "notebook.output.textLineLimit": {
      "markdownDescription": "Controls how many lines of text are displayed in a text output. If `#notebook.output.scrolling#` is enabled, this setting is used to determine the scroll height of the output.",
      "type": "number",
      "default": 30,
      "tags": [
        "notebookLayout",
        "notebookOutputLayout"
      ],
      "minimum": 1,
      "defaultDefaultValue": 30,
      "scope": 3,
      "restricted": false
    },
    "notebook.output.linkifyFilePaths": {
      "description": "Control whether to disable filepath links in the output of notebook cells.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookOutputLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.output.minimalErrorRendering": {
      "description": "Control whether to render error output in a minimal style.",
      "type": "boolean",
      "default": false,
      "tags": [
        "notebookOutputLayout"
      ],
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.markup.fontSize": {
      "markdownDescription": "Controls the font size in pixels of rendered markup in notebooks. When set to `0`, 120% of `#editor.fontSize#` is used.",
      "type": "number",
      "default": 0,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "notebook.editorOptionsCustomizations": {
      "description": "Settings for code editors used in notebooks. This can be used to customize most editor.* settings.",
      "default": {},
      "allOf": [
        {
          "properties": {
            "editor.acceptSuggestionOnCommitCharacter": {
              "markdownDescription": "Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.acceptSuggestionOnEnter": {
              "markdownEnumDescriptions": [
                "",
                "Only accept a suggestion with `Enter` when it makes a textual change.",
                ""
              ],
              "markdownDescription": "Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
              "type": "string",
              "enum": [
                "on",
                "smart",
                "off"
              ],
              "default": "on",
              "defaultDefaultValue": "on",
              "scope": 5,
              "restricted": false
            },
            "editor.accessibilitySupport": {
              "type": "string",
              "enum": [
                "auto",
                "on",
                "off"
              ],
              "enumDescriptions": [
                "Use platform APIs to detect when a Screen Reader is attached.",
                "Optimize for usage with a Screen Reader.",
                "Assume a screen reader is not attached."
              ],
              "default": "auto",
              "tags": [
                "accessibility"
              ],
              "description": "Controls if the UI should run in a mode where it is optimized for screen readers.",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.accessibilityPageSize": {
              "description": "Controls the number of lines in the editor that can be read out by a screen reader at once. When we detect a screen reader we automatically set the default to be 500. Warning: this has a performance implication for numbers larger than the default.",
              "tags": [
                "accessibility"
              ],
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 1073741824,
              "defaultDefaultValue": 10,
              "scope": 5,
              "restricted": false
            },
            "editor.autoClosingBrackets": {
              "enumDescriptions": [
                "",
                "Use language configurations to determine when to autoclose brackets.",
                "Autoclose brackets only when the cursor is to the left of whitespace.",
                ""
              ],
              "description": "Controls whether the editor should automatically close brackets after the user adds an opening bracket.",
              "type": "string",
              "enum": [
                "always",
                "languageDefined",
                "beforeWhitespace",
                "never"
              ],
              "default": "languageDefined",
              "defaultDefaultValue": "languageDefined",
              "scope": 5,
              "restricted": false
            },
            "editor.autoClosingComments": {
              "enumDescriptions": [
                "",
                "Use language configurations to determine when to autoclose comments.",
                "Autoclose comments only when the cursor is to the left of whitespace.",
                ""
              ],
              "description": "Controls whether the editor should automatically close comments after the user adds an opening comment.",
              "type": "string",
              "enum": [
                "always",
                "languageDefined",
                "beforeWhitespace",
                "never"
              ],
              "default": "languageDefined",
              "defaultDefaultValue": "languageDefined",
              "scope": 5,
              "restricted": false
            },
            "editor.screenReaderAnnounceInlineSuggestion": {
              "description": "Control whether inline suggestions are announced by a screen reader.",
              "tags": [
                "accessibility"
              ],
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.autoClosingDelete": {
              "enumDescriptions": [
                "",
                "Remove adjacent closing quotes or brackets only if they were automatically inserted.",
                ""
              ],
              "description": "Controls whether the editor should remove adjacent closing quotes or brackets when deleting.",
              "type": "string",
              "enum": [
                "always",
                "auto",
                "never"
              ],
              "default": "auto",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.autoClosingOvertype": {
              "enumDescriptions": [
                "",
                "Type over closing quotes or brackets only if they were automatically inserted.",
                ""
              ],
              "description": "Controls whether the editor should type over closing quotes or brackets.",
              "type": "string",
              "enum": [
                "always",
                "auto",
                "never"
              ],
              "default": "auto",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.autoClosingQuotes": {
              "enumDescriptions": [
                "",
                "Use language configurations to determine when to autoclose quotes.",
                "Autoclose quotes only when the cursor is to the left of whitespace.",
                ""
              ],
              "description": "Controls whether the editor should automatically close quotes after the user adds an opening quote.",
              "type": "string",
              "enum": [
                "always",
                "languageDefined",
                "beforeWhitespace",
                "never"
              ],
              "default": "languageDefined",
              "defaultDefaultValue": "languageDefined",
              "scope": 5,
              "restricted": false
            },
            "editor.autoIndent": {
              "enumDescriptions": [
                "The editor will not insert indentation automatically.",
                "The editor will keep the current line's indentation.",
                "The editor will keep the current line's indentation and honor language defined brackets.",
                "The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.",
                "The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages."
              ],
              "description": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.",
              "type": "string",
              "enum": [
                "none",
                "keep",
                "brackets",
                "advanced",
                "full"
              ],
              "default": "full",
              "defaultDefaultValue": "full",
              "scope": 5,
              "restricted": false
            },
            "editor.autoSurround": {
              "enumDescriptions": [
                "Use language configurations to determine when to automatically surround selections.",
                "Surround with quotes but not brackets.",
                "Surround with brackets but not quotes.",
                ""
              ],
              "description": "Controls whether the editor should automatically surround selections when typing quotes or brackets.",
              "type": "string",
              "enum": [
                "languageDefined",
                "quotes",
                "brackets",
                "never"
              ],
              "default": "languageDefined",
              "defaultDefaultValue": "languageDefined",
              "scope": 5,
              "restricted": false
            },
            "editor.bracketPairColorization.enabled": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "Controls whether bracket pair colorization is enabled or not. Use `#workbench.colorCustomizations#` to override the bracket highlight colors.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.bracketPairColorization.independentColorPoolPerBracketType": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether each bracket type has its own independent color pool.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.guides.bracketPairs": {
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                "active",
                false
              ],
              "enumDescriptions": [
                "Enables bracket pair guides.",
                "Enables bracket pair guides only for the active bracket pair.",
                "Disables bracket pair guides."
              ],
              "default": false,
              "description": "Controls whether bracket pair guides are enabled or not.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.guides.bracketPairsHorizontal": {
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                "active",
                false
              ],
              "enumDescriptions": [
                "Enables horizontal guides as addition to vertical bracket pair guides.",
                "Enables horizontal guides only for the active bracket pair.",
                "Disables horizontal bracket pair guides."
              ],
              "default": "active",
              "description": "Controls whether horizontal bracket pair guides are enabled or not.",
              "defaultDefaultValue": "active",
              "scope": 5,
              "restricted": false
            },
            "editor.guides.highlightActiveBracketPair": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the editor should highlight the active bracket pair.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.guides.indentation": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the editor should render indent guides.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.guides.highlightActiveIndentation": {
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                "always",
                false
              ],
              "enumDescriptions": [
                "Highlights the active indent guide.",
                "Highlights the active indent guide even if bracket guides are highlighted.",
                "Do not highlight the active indent guide."
              ],
              "default": true,
              "description": "Controls whether the editor should highlight the active indent guide.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.codeLens": {
              "description": "Controls whether the editor shows CodeLens.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.codeLensFontFamily": {
              "description": "Controls the font family for CodeLens.",
              "type": "string",
              "default": "",
              "defaultDefaultValue": "",
              "scope": 5,
              "restricted": false
            },
            "editor.codeLensFontSize": {
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 100,
              "markdownDescription": "Controls the font size in pixels for CodeLens. When set to 0, 90% of `#editor.fontSize#` is used.",
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.colorDecorators": {
              "description": "Controls whether the editor should render the inline color decorators and color picker.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.colorDecoratorsLimit": {
              "markdownDescription": "Controls the max number of color decorators that can be rendered in an editor at once.",
              "type": "integer",
              "default": 500,
              "minimum": 1,
              "maximum": 1000000,
              "defaultDefaultValue": 500,
              "scope": 5,
              "restricted": false
            },
            "editor.columnSelection": {
              "description": "Enable that the selection with the mouse and keys is doing column selection.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.comments.insertSpace": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether a space character is inserted when commenting.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.comments.ignoreEmptyLines": {
              "type": "boolean",
              "default": true,
              "description": "Controls if empty lines should be ignored with toggle, add or remove actions for line comments.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.copyWithSyntaxHighlighting": {
              "description": "Controls whether syntax highlighting should be copied into the clipboard.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.cursorBlinking": {
              "description": "Control the cursor animation style.",
              "type": "string",
              "enum": [
                "blink",
                "smooth",
                "phase",
                "expand",
                "solid"
              ],
              "default": "blink",
              "defaultDefaultValue": "blink",
              "scope": 5,
              "restricted": false
            },
            "editor.cursorSmoothCaretAnimation": {
              "enumDescriptions": [
                "Smooth caret animation is disabled.",
                "Smooth caret animation is enabled only when the user moves the cursor with an explicit gesture.",
                "Smooth caret animation is always enabled."
              ],
              "description": "Controls whether the smooth caret animation should be enabled.",
              "type": "string",
              "enum": [
                "off",
                "explicit",
                "on"
              ],
              "default": "off",
              "defaultDefaultValue": "off",
              "scope": 5,
              "restricted": false
            },
            "editor.cursorStyle": {
              "description": "Controls the cursor style.",
              "type": "string",
              "enum": [
                "line",
                "block",
                "underline",
                "line-thin",
                "block-outline",
                "underline-thin"
              ],
              "default": "line",
              "defaultDefaultValue": "line",
              "scope": 5,
              "restricted": false
            },
            "editor.cursorSurroundingLines": {
              "description": "Controls the minimal number of visible leading lines (minimum 0) and trailing lines (minimum 1) surrounding the cursor. Known as 'scrollOff' or 'scrollOffset' in some other editors.",
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 1073741824,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.cursorSurroundingLinesStyle": {
              "enumDescriptions": [
                "`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.",
                "`cursorSurroundingLines` is enforced always."
              ],
              "markdownDescription": "Controls when `#editor.cursorSurroundingLines#` should be enforced.",
              "type": "string",
              "enum": [
                "default",
                "all"
              ],
              "default": "default",
              "defaultDefaultValue": "default",
              "scope": 5,
              "restricted": false
            },
            "editor.cursorWidth": {
              "markdownDescription": "Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.",
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 1073741824,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.dragAndDrop": {
              "description": "Controls whether the editor should allow moving selections via drag and drop.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.dropIntoEditor.enabled": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "Controls whether you can drag and drop a file into a text editor by holding down the `Shift` key (instead of opening the file in an editor).",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.dropIntoEditor.showDropSelector": {
              "type": "string",
              "markdownDescription": "Controls if a widget is shown when dropping files into the editor. This widget lets you control how the file is dropped.",
              "enum": [
                "afterDrop",
                "never"
              ],
              "enumDescriptions": [
                "Show the drop selector widget after a file is dropped into the editor.",
                "Never show the drop selector widget. Instead the default drop provider is always used."
              ],
              "default": "afterDrop",
              "defaultDefaultValue": "afterDrop",
              "scope": 5,
              "restricted": false
            },
            "editor.emptySelectionClipboard": {
              "description": "Controls whether copying without a selection copies the current line.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.experimentalWhitespaceRendering": {
              "enumDescriptions": [
                "Use a new rendering method with svgs.",
                "Use a new rendering method with font characters.",
                "Use the stable rendering method."
              ],
              "description": "Controls whether whitespace is rendered with a new, experimental method.",
              "type": "string",
              "enum": [
                "svg",
                "font",
                "off"
              ],
              "default": "svg",
              "defaultDefaultValue": "svg",
              "scope": 5,
              "restricted": false
            },
            "editor.fastScrollSensitivity": {
              "markdownDescription": "Scrolling speed multiplier when pressing `Alt`.",
              "type": "number",
              "default": 5,
              "defaultDefaultValue": 5,
              "scope": 5,
              "restricted": false
            },
            "editor.find.cursorMoveOnType": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the cursor should jump to find matches while typing.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.find.seedSearchStringFromSelection": {
              "type": "string",
              "enum": [
                "never",
                "always",
                "selection"
              ],
              "default": "always",
              "enumDescriptions": [
                "Never seed search string from the editor selection.",
                "Always seed search string from the editor selection, including word at cursor position.",
                "Only seed search string from the editor selection."
              ],
              "description": "Controls whether the search string in the Find Widget is seeded from the editor selection.",
              "defaultDefaultValue": "always",
              "scope": 5,
              "restricted": false
            },
            "editor.find.autoFindInSelection": {
              "type": "string",
              "enum": [
                "never",
                "always",
                "multiline"
              ],
              "default": "never",
              "enumDescriptions": [
                "Never turn on Find in Selection automatically (default).",
                "Always turn on Find in Selection automatically.",
                "Turn on Find in Selection automatically when multiple lines of content are selected."
              ],
              "description": "Controls the condition for turning on Find in Selection automatically.",
              "defaultDefaultValue": "never",
              "scope": 5,
              "restricted": false
            },
            "editor.find.globalFindClipboard": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether the Find Widget should read or modify the shared find clipboard on macOS.",
              "included": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.find.addExtraSpaceOnTop": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.find.loop": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.folding": {
              "description": "Controls whether the editor has code folding enabled.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.foldingStrategy": {
              "enumDescriptions": [
                "Use a language-specific folding strategy if available, else the indentation-based one.",
                "Use the indentation-based folding strategy."
              ],
              "description": "Controls the strategy for computing folding ranges.",
              "type": "string",
              "enum": [
                "auto",
                "indentation"
              ],
              "default": "auto",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.foldingHighlight": {
              "description": "Controls whether the editor should highlight folded ranges.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.foldingImportsByDefault": {
              "description": "Controls whether the editor automatically collapses import ranges.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.foldingMaximumRegions": {
              "description": "The maximum number of foldable regions. Increasing this value may result in the editor becoming less responsive when the current source has a large number of foldable regions.",
              "type": "integer",
              "default": 5000,
              "minimum": 10,
              "maximum": 65000,
              "defaultDefaultValue": 5000,
              "scope": 5,
              "restricted": false
            },
            "editor.unfoldOnClickAfterEndOfLine": {
              "description": "Controls whether clicking on the empty content after a folded line will unfold the line.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.fontFamily": {
              "description": "Controls the font family.",
              "type": "string",
              "default": "Fira Code",
              "defaultDefaultValue": "Consolas, 'Courier New', monospace",
              "scope": 5,
              "restricted": false
            },
            "editor.fontLigatures": {
              "anyOf": [
                {
                  "type": "boolean",
                  "description": "Enables/Disables font ligatures ('calt' and 'liga' font features). Change this to a string for fine-grained control of the 'font-feature-settings' CSS property."
                },
                {
                  "type": "string",
                  "description": "Explicit 'font-feature-settings' CSS property. A boolean can be passed instead if one only needs to turn on/off ligatures."
                }
              ],
              "description": "Configures font ligatures or font features. Can be either a boolean to enable/disable ligatures or a string for the value of the CSS 'font-feature-settings' property.",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.fontSize": {
              "type": "number",
              "minimum": 6,
              "maximum": 100,
              "default": 14,
              "description": "Controls the font size in pixels.",
              "defaultDefaultValue": 14,
              "scope": 5,
              "restricted": false
            },
            "editor.fontWeight": {
              "anyOf": [
                {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 1000,
                  "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
                },
                {
                  "type": "string",
                  "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
                },
                {
                  "enum": [
                    "normal",
                    "bold",
                    "100",
                    "200",
                    "300",
                    "400",
                    "500",
                    "600",
                    "700",
                    "800",
                    "900"
                  ]
                }
              ],
              "default": "normal",
              "description": "Controls the font weight. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
              "defaultDefaultValue": "normal",
              "scope": 5,
              "restricted": false
            },
            "editor.fontVariations": {
              "anyOf": [
                {
                  "type": "boolean",
                  "description": "Enables/Disables the translation from font-weight to font-variation-settings. Change this to a string for fine-grained control of the 'font-variation-settings' CSS property."
                },
                {
                  "type": "string",
                  "description": "Explicit 'font-variation-settings' CSS property. A boolean can be passed instead if one only needs to translate font-weight to font-variation-settings."
                }
              ],
              "description": "Configures font variations. Can be either a boolean to enable/disable the translation from font-weight to font-variation-settings or a string for the value of the CSS 'font-variation-settings' property.",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.formatOnPaste": {
              "description": "Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.formatOnType": {
              "description": "Controls whether the editor should automatically format the line after typing.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.glyphMargin": {
              "description": "Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multiple": {
              "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.",
              "default": null,
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multipleDefinitions": {
              "description": "Controls the behavior the 'Go to Definition'-command when multiple target locations exist.",
              "type": "string",
              "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
              ],
              "default": "peek",
              "enumDescriptions": [
                "Show Peek view of the results (default)",
                "Go to the primary result and show a Peek view",
                "Go to the primary result and enable Peek-less navigation to others"
              ],
              "defaultDefaultValue": "peek",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multipleTypeDefinitions": {
              "description": "Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.",
              "type": "string",
              "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
              ],
              "default": "peek",
              "enumDescriptions": [
                "Show Peek view of the results (default)",
                "Go to the primary result and show a Peek view",
                "Go to the primary result and enable Peek-less navigation to others"
              ],
              "defaultDefaultValue": "peek",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multipleDeclarations": {
              "description": "Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.",
              "type": "string",
              "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
              ],
              "default": "peek",
              "enumDescriptions": [
                "Show Peek view of the results (default)",
                "Go to the primary result and show a Peek view",
                "Go to the primary result and enable Peek-less navigation to others"
              ],
              "defaultDefaultValue": "peek",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multipleImplementations": {
              "description": "Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.",
              "type": "string",
              "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
              ],
              "default": "peek",
              "enumDescriptions": [
                "Show Peek view of the results (default)",
                "Go to the primary result and show a Peek view",
                "Go to the primary result and enable Peek-less navigation to others"
              ],
              "defaultDefaultValue": "peek",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multipleReferences": {
              "description": "Controls the behavior the 'Go to References'-command when multiple target locations exist.",
              "type": "string",
              "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
              ],
              "default": "peek",
              "enumDescriptions": [
                "Show Peek view of the results (default)",
                "Go to the primary result and show a Peek view",
                "Go to the primary result and enable Peek-less navigation to others"
              ],
              "defaultDefaultValue": "peek",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.alternativeDefinitionCommand": {
              "type": "string",
              "default": "editor.action.goToReferences",
              "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
              ],
              "description": "Alternative command id that is being executed when the result of 'Go to Definition' is the current location.",
              "defaultDefaultValue": "editor.action.goToReferences",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.alternativeTypeDefinitionCommand": {
              "type": "string",
              "default": "editor.action.goToReferences",
              "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
              ],
              "description": "Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.",
              "defaultDefaultValue": "editor.action.goToReferences",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.alternativeDeclarationCommand": {
              "type": "string",
              "default": "editor.action.goToReferences",
              "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
              ],
              "description": "Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.",
              "defaultDefaultValue": "editor.action.goToReferences",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.alternativeImplementationCommand": {
              "type": "string",
              "default": "",
              "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
              ],
              "description": "Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.",
              "defaultDefaultValue": "",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.alternativeReferenceCommand": {
              "type": "string",
              "default": "",
              "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
              ],
              "description": "Alternative command id that is being executed when the result of 'Go to Reference' is the current location.",
              "defaultDefaultValue": "",
              "scope": 5,
              "restricted": false
            },
            "editor.hideCursorInOverviewRuler": {
              "description": "Controls whether the cursor should be hidden in the overview ruler.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.hover.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the hover is shown.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.hover.delay": {
              "type": "number",
              "default": 300,
              "minimum": 0,
              "maximum": 10000,
              "description": "Controls the delay in milliseconds after which the hover is shown.",
              "defaultDefaultValue": 300,
              "scope": 5,
              "restricted": false
            },
            "editor.hover.sticky": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the hover should remain visible when mouse is moved over it.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.hover.hidingDelay": {
              "type": "integer",
              "minimum": 0,
              "default": 300,
              "description": "Controls the delay in milliseconds after which the hover is hidden. Requires `editor.hover.sticky` to be enabled.",
              "defaultDefaultValue": 300,
              "scope": 5,
              "restricted": false
            },
            "editor.hover.above": {
              "type": "boolean",
              "default": true,
              "description": "Prefer showing hovers above the line, if there's space.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.inlineSuggest.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether to automatically show inline suggestions in the editor.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.inlineSuggest.showToolbar": {
              "type": "string",
              "default": "onHover",
              "enum": [
                "always",
                "onHover",
                "never"
              ],
              "enumDescriptions": [
                "Show the inline suggestion toolbar whenever an inline suggestion is shown.",
                "Show the inline suggestion toolbar when hovering over an inline suggestion.",
                "Never show the inline suggestion toolbar."
              ],
              "description": "Controls when to show the inline suggestion toolbar.",
              "defaultDefaultValue": "onHover",
              "scope": 5,
              "restricted": false
            },
            "editor.inlineSuggest.suppressSuggestions": {
              "type": "boolean",
              "default": false,
              "description": "Controls how inline suggestions interact with the suggest widget. If enabled, the suggest widget is not shown automatically when inline suggestions are available.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.inlineSuggest.fontFamily": {
              "type": "string",
              "default": "default",
              "description": "Controls the font family of the inline suggestions.",
              "defaultDefaultValue": "default",
              "scope": 5,
              "restricted": false
            },
            "editor.experimentalInlineEdit.enabled": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether to show inline edits in the editor.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.experimentalInlineEdit.showToolbar": {
              "type": "string",
              "default": "onHover",
              "enum": [
                "always",
                "onHover",
                "never"
              ],
              "enumDescriptions": [
                "Show the inline edit toolbar whenever an inline suggestion is shown.",
                "Show the inline edit toolbar when hovering over an inline suggestion.",
                "Never show the inline edit toolbar."
              ],
              "description": "Controls when to show the inline edit toolbar.",
              "defaultDefaultValue": "onHover",
              "scope": 5,
              "restricted": false
            },
            "editor.experimentalInlineEdit.fontFamily": {
              "type": "string",
              "default": "default",
              "description": "Controls the font family of the inline edit.",
              "defaultDefaultValue": "default",
              "scope": 5,
              "restricted": false
            },
            "editor.experimentalInlineEdit.backgroundColoring": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether to color the background of inline edits.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.letterSpacing": {
              "description": "Controls the letter spacing in pixels.",
              "type": "number",
              "default": 0,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.lightbulb.enabled": {
              "type": "string",
              "tags": [
                "experimental"
              ],
              "enum": [
                "off",
                "onCode",
                "on"
              ],
              "default": "on",
              "enumDescriptions": [
                "Disable the code action menu.",
                "Show the code action menu when the cursor is on lines with code.",
                "Show the code action menu when the cursor is on lines with code or on empty lines."
              ],
              "description": "Enables the Code Action lightbulb in the editor.",
              "defaultDefaultValue": "on",
              "scope": 5,
              "restricted": false
            },
            "editor.lineHeight": {
              "markdownDescription": "Controls the line height. \n - Use 0 to automatically compute the line height from the font size.\n - Values between 0 and 8 will be used as a multiplier with the font size.\n - Values greater than or equal to 8 will be used as effective values.",
              "type": "number",
              "default": 0,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.lineNumbers": {
              "type": "string",
              "enum": [
                "off",
                "on",
                "relative",
                "interval"
              ],
              "enumDescriptions": [
                "Line numbers are not rendered.",
                "Line numbers are rendered as absolute number.",
                "Line numbers are rendered as distance in lines to cursor position.",
                "Line numbers are rendered every 10 lines."
              ],
              "default": "on",
              "description": "Controls the display of line numbers.",
              "defaultDefaultValue": "on",
              "scope": 5,
              "restricted": false
            },
            "editor.linkedEditing": {
              "description": "Controls whether the editor has linked editing enabled. Depending on the language, related symbols such as HTML tags, are updated while editing.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.links": {
              "description": "Controls whether the editor should detect links and make them clickable.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.matchBrackets": {
              "description": "Highlight matching brackets.",
              "type": "string",
              "enum": [
                "always",
                "near",
                "never"
              ],
              "default": "always",
              "defaultDefaultValue": "always",
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the minimap is shown.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.autohide": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether the minimap is hidden automatically.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.size": {
              "type": "string",
              "enum": [
                "proportional",
                "fill",
                "fit"
              ],
              "enumDescriptions": [
                "The minimap has the same size as the editor contents (and might scroll).",
                "The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).",
                "The minimap will shrink as necessary to never be larger than the editor (no scrolling)."
              ],
              "default": "proportional",
              "description": "Controls the size of the minimap.",
              "defaultDefaultValue": "proportional",
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.side": {
              "type": "string",
              "enum": [
                "left",
                "right"
              ],
              "default": "right",
              "description": "Controls the side where to render the minimap.",
              "defaultDefaultValue": "right",
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.showSlider": {
              "type": "string",
              "enum": [
                "always",
                "mouseover"
              ],
              "default": "mouseover",
              "description": "Controls when the minimap slider is shown.",
              "defaultDefaultValue": "mouseover",
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.scale": {
              "type": "number",
              "default": 1,
              "minimum": 1,
              "maximum": 3,
              "enum": [
                1,
                2,
                3
              ],
              "description": "Scale of content drawn in the minimap: 1, 2 or 3.",
              "defaultDefaultValue": 1,
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.renderCharacters": {
              "type": "boolean",
              "default": true,
              "description": "Render the actual characters on a line as opposed to color blocks.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.maxColumn": {
              "type": "number",
              "default": 120,
              "description": "Limit the width of the minimap to render at most a certain number of columns.",
              "defaultDefaultValue": 120,
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.showRegionSectionHeaders": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether named regions are shown as section headers in the minimap.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.showMarkSectionHeaders": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether MARK: comments are shown as section headers in the minimap.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.sectionHeaderFontSize": {
              "type": "number",
              "default": 9,
              "description": "Controls the font size of section headers in the minimap.",
              "defaultDefaultValue": 9,
              "scope": 5,
              "restricted": false
            },
            "editor.mouseWheelScrollSensitivity": {
              "markdownDescription": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
              "type": "number",
              "default": 1,
              "defaultDefaultValue": 1,
              "scope": 5,
              "restricted": false
            },
            "editor.mouseWheelZoom": {
              "markdownDescription": "Zoom the font of the editor when using mouse wheel and holding `Ctrl`.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.multiCursorMergeOverlapping": {
              "description": "Merge multiple cursors when they are overlapping.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.multiCursorModifier": {
              "markdownEnumDescriptions": [
                "Maps to `Control` on Windows and Linux and to `Command` on macOS.",
                "Maps to `Alt` on Windows and Linux and to `Option` on macOS."
              ],
              "markdownDescription": "The modifier to be used to add multiple cursors with the mouse. The Go to Definition and Open Link mouse gestures will adapt such that they do not conflict with the [multicursor modifier](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).",
              "type": "string",
              "enum": [
                "ctrlCmd",
                "alt"
              ],
              "default": "alt",
              "defaultDefaultValue": "alt",
              "scope": 5,
              "restricted": false
            },
            "editor.multiCursorPaste": {
              "markdownEnumDescriptions": [
                "Each cursor pastes a single line of the text.",
                "Each cursor pastes the full text."
              ],
              "markdownDescription": "Controls pasting when the line count of the pasted text matches the cursor count.",
              "type": "string",
              "enum": [
                "spread",
                "full"
              ],
              "default": "spread",
              "defaultDefaultValue": "spread",
              "scope": 5,
              "restricted": false
            },
            "editor.multiCursorLimit": {
              "markdownDescription": "Controls the max number of cursors that can be in an active editor at once.",
              "type": "integer",
              "default": 10000,
              "minimum": 1,
              "maximum": 100000,
              "defaultDefaultValue": 10000,
              "scope": 5,
              "restricted": false
            },
            "editor.occurrencesHighlight": {
              "markdownEnumDescriptions": [
                "Does not highlight occurrences.",
                "Highlights occurrences only in the current file.",
                "Experimental: Highlights occurrences across all valid open files."
              ],
              "markdownDescription": "Controls whether occurrences should be highlighted across open files.",
              "type": "string",
              "enum": [
                "off",
                "singleFile",
                "multiFile"
              ],
              "default": "singleFile",
              "defaultDefaultValue": "singleFile",
              "scope": 5,
              "restricted": false
            },
            "editor.overviewRulerBorder": {
              "description": "Controls whether a border should be drawn around the overview ruler.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.padding.top": {
              "type": "number",
              "default": 0,
              "minimum": 0,
              "maximum": 1000,
              "description": "Controls the amount of space between the top edge of the editor and the first line.",
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.padding.bottom": {
              "type": "number",
              "default": 0,
              "minimum": 0,
              "maximum": 1000,
              "description": "Controls the amount of space between the bottom edge of the editor and the last line.",
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.pasteAs.enabled": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "Controls whether you can paste content in different ways.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.pasteAs.showPasteSelector": {
              "type": "string",
              "markdownDescription": "Controls if a widget is shown when pasting content in to the editor. This widget lets you control how the file is pasted.",
              "enum": [
                "afterPaste",
                "never"
              ],
              "enumDescriptions": [
                "Show the paste selector widget after content is pasted into the editor.",
                "Never show the paste selector widget. Instead the default pasting behavior is always used."
              ],
              "default": "afterPaste",
              "defaultDefaultValue": "afterPaste",
              "scope": 5,
              "restricted": false
            },
            "editor.parameterHints.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Enables a pop-up that shows parameter documentation and type information as you type.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.parameterHints.cycle": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the parameter hints menu cycles or closes when reaching the end of the list.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.peekWidgetDefaultFocus": {
              "enumDescriptions": [
                "Focus the tree when opening peek",
                "Focus the editor when opening peek"
              ],
              "description": "Controls whether to focus the inline editor or the tree in the peek widget.",
              "type": "string",
              "enum": [
                "tree",
                "editor"
              ],
              "default": "tree",
              "defaultDefaultValue": "tree",
              "scope": 5,
              "restricted": false
            },
            "editor.definitionLinkOpensInPeek": {
              "description": "Controls whether the Go to Definition mouse gesture always opens the peek widget.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.quickSuggestions": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "strings": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string",
                      "enum": [
                        "on",
                        "inline",
                        "off"
                      ],
                      "enumDescriptions": [
                        "Quick suggestions show inside the suggest widget",
                        "Quick suggestions show as ghost text",
                        "Quick suggestions are disabled"
                      ]
                    }
                  ],
                  "default": "off",
                  "description": "Enable quick suggestions inside strings."
                },
                "comments": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string",
                      "enum": [
                        "on",
                        "inline",
                        "off"
                      ],
                      "enumDescriptions": [
                        "Quick suggestions show inside the suggest widget",
                        "Quick suggestions show as ghost text",
                        "Quick suggestions are disabled"
                      ]
                    }
                  ],
                  "default": "off",
                  "description": "Enable quick suggestions inside comments."
                },
                "other": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string",
                      "enum": [
                        "on",
                        "inline",
                        "off"
                      ],
                      "enumDescriptions": [
                        "Quick suggestions show inside the suggest widget",
                        "Quick suggestions show as ghost text",
                        "Quick suggestions are disabled"
                      ]
                    }
                  ],
                  "default": "on",
                  "description": "Enable quick suggestions outside of strings and comments."
                }
              },
              "default": {
                "other": "on",
                "comments": "off",
                "strings": "off"
              },
              "markdownDescription": "Controls whether suggestions should automatically show up while typing. This can be controlled for typing in comments, strings, and other code. Quick suggestion can be configured to show as ghost text or with the suggest widget. Also be aware of the '#editor.suggestOnTriggerCharacters#'-setting which controls if suggestions are triggered by special characters.",
              "defaultDefaultValue": {
                "other": "on",
                "comments": "off",
                "strings": "off"
              },
              "scope": 5,
              "restricted": false
            },
            "editor.quickSuggestionsDelay": {
              "description": "Controls the delay in milliseconds after which quick suggestions will show up.",
              "type": "integer",
              "default": 10,
              "minimum": 0,
              "maximum": 1073741824,
              "defaultDefaultValue": 10,
              "scope": 5,
              "restricted": false
            },
            "editor.renameOnType": {
              "description": "Controls whether the editor auto renames on type.",
              "markdownDeprecationMessage": "Deprecated, use `editor.linkedEditing` instead.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false,
              "deprecationMessage": "Deprecated, use `editor.linkedEditing` instead."
            },
            "editor.renderControlCharacters": {
              "description": "Controls whether the editor should render control characters.",
              "restricted": true,
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5
            },
            "editor.renderFinalNewline": {
              "description": "Render last line number when the file ends with a newline.",
              "type": "string",
              "enum": [
                "off",
                "on",
                "dimmed"
              ],
              "default": "on",
              "defaultDefaultValue": "on",
              "scope": 5,
              "restricted": false
            },
            "editor.renderLineHighlight": {
              "enumDescriptions": [
                "",
                "",
                "",
                "Highlights both the gutter and the current line."
              ],
              "description": "Controls how the editor should render the current line highlight.",
              "type": "string",
              "enum": [
                "none",
                "gutter",
                "line",
                "all"
              ],
              "default": "line",
              "defaultDefaultValue": "line",
              "scope": 5,
              "restricted": false
            },
            "editor.renderLineHighlightOnlyWhenFocus": {
              "description": "Controls if the editor should render the current line highlight only when the editor is focused.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.renderWhitespace": {
              "enumDescriptions": [
                "",
                "Render whitespace characters except for single spaces between words.",
                "Render whitespace characters only on selected text.",
                "Render only trailing whitespace characters.",
                ""
              ],
              "description": "Controls how the editor should render whitespace characters.",
              "type": "string",
              "enum": [
                "none",
                "boundary",
                "selection",
                "trailing",
                "all"
              ],
              "default": "selection",
              "defaultDefaultValue": "selection",
              "scope": 5,
              "restricted": false
            },
            "editor.roundedSelection": {
              "description": "Controls whether selections should have rounded corners.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.rulers": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "number",
                    "description": "Number of monospace characters at which this editor ruler will render."
                  },
                  {
                    "type": [
                      "object"
                    ],
                    "properties": {
                      "column": {
                        "type": "number",
                        "description": "Number of monospace characters at which this editor ruler will render."
                      },
                      "color": {
                        "type": "string",
                        "description": "Color of this editor ruler.",
                        "format": "color-hex"
                      }
                    }
                  }
                ]
              },
              "default": [],
              "description": "Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
              "defaultDefaultValue": [],
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.vertical": {
              "type": "string",
              "enum": [
                "auto",
                "visible",
                "hidden"
              ],
              "enumDescriptions": [
                "The vertical scrollbar will be visible only when necessary.",
                "The vertical scrollbar will always be visible.",
                "The vertical scrollbar will always be hidden."
              ],
              "default": "auto",
              "description": "Controls the visibility of the vertical scrollbar.",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.horizontal": {
              "type": "string",
              "enum": [
                "auto",
                "visible",
                "hidden"
              ],
              "enumDescriptions": [
                "The horizontal scrollbar will be visible only when necessary.",
                "The horizontal scrollbar will always be visible.",
                "The horizontal scrollbar will always be hidden."
              ],
              "default": "auto",
              "description": "Controls the visibility of the horizontal scrollbar.",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.verticalScrollbarSize": {
              "type": "number",
              "default": 14,
              "description": "The width of the vertical scrollbar.",
              "defaultDefaultValue": 14,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.horizontalScrollbarSize": {
              "type": "number",
              "default": 12,
              "description": "The height of the horizontal scrollbar.",
              "defaultDefaultValue": 12,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.scrollByPage": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether clicks scroll by page or jump to click position.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.ignoreHorizontalScrollbarInContentHeight": {
              "type": "boolean",
              "default": false,
              "description": "When set, the horizontal scrollbar will not increase the size of the editor's content.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollBeyondLastColumn": {
              "description": "Controls the number of extra characters beyond which the editor will scroll horizontally.",
              "type": "integer",
              "default": 4,
              "minimum": 0,
              "maximum": 1073741824,
              "defaultDefaultValue": 4,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollBeyondLastLine": {
              "description": "Controls whether the editor will scroll beyond the last line.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollPredominantAxis": {
              "description": "Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.selectionClipboard": {
              "description": "Controls whether the Linux primary clipboard should be supported.",
              "included": false,
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.selectionHighlight": {
              "description": "Controls whether the editor should highlight matches similar to the selection.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.showFoldingControls": {
              "enumDescriptions": [
                "Always show the folding controls.",
                "Never show the folding controls and reduce the gutter size.",
                "Only show the folding controls when the mouse is over the gutter."
              ],
              "description": "Controls when the folding controls on the gutter are shown.",
              "type": "string",
              "enum": [
                "always",
                "never",
                "mouseover"
              ],
              "default": "mouseover",
              "defaultDefaultValue": "mouseover",
              "scope": 5,
              "restricted": false
            },
            "editor.showUnused": {
              "description": "Controls fading out of unused code.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.snippetSuggestions": {
              "enumDescriptions": [
                "Show snippet suggestions on top of other suggestions.",
                "Show snippet suggestions below other suggestions.",
                "Show snippets suggestions with other suggestions.",
                "Do not show snippet suggestions."
              ],
              "description": "Controls whether snippets are shown with other suggestions and how they are sorted.",
              "type": "string",
              "enum": [
                "top",
                "bottom",
                "inline",
                "none"
              ],
              "default": "inline",
              "defaultDefaultValue": "inline",
              "scope": 5,
              "restricted": false
            },
            "editor.smartSelect.selectLeadingAndTrailingWhitespace": {
              "description": "Whether leading and trailing whitespace should always be selected.",
              "default": true,
              "type": "boolean",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.smartSelect.selectSubwords": {
              "description": "Whether subwords (like 'foo' in 'fooBar' or 'foo_bar') should be selected.",
              "default": true,
              "type": "boolean",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.smoothScrolling": {
              "description": "Controls whether the editor will scroll using an animation.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.stickyScroll.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Shows the nested current scopes during the scroll at the top of the editor.",
              "tags": [
                "experimental"
              ],
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.stickyScroll.maxLineCount": {
              "type": "number",
              "default": 5,
              "minimum": 1,
              "maximum": 20,
              "description": "Defines the maximum number of sticky lines to show.",
              "defaultDefaultValue": 5,
              "scope": 5,
              "restricted": false
            },
            "editor.stickyScroll.defaultModel": {
              "type": "string",
              "enum": [
                "outlineModel",
                "foldingProviderModel",
                "indentationModel"
              ],
              "default": "outlineModel",
              "description": "Defines the model to use for determining which lines to stick. If the outline model does not exist, it will fall back on the folding provider model which falls back on the indentation model. This order is respected in all three cases.",
              "defaultDefaultValue": "outlineModel",
              "scope": 5,
              "restricted": false
            },
            "editor.stickyScroll.scrollWithEditor": {
              "type": "boolean",
              "default": true,
              "description": "Enable scrolling of Sticky Scroll with the editor's horizontal scrollbar.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.stickyTabStops": {
              "description": "Emulate selection behavior of tab characters when using spaces for indentation. Selection will stick to tab stops.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.insertMode": {
              "type": "string",
              "enum": [
                "insert",
                "replace"
              ],
              "enumDescriptions": [
                "Insert suggestion without overwriting text right of the cursor.",
                "Insert suggestion and overwrite text right of the cursor."
              ],
              "default": "insert",
              "description": "Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.",
              "defaultDefaultValue": "insert",
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.filterGraceful": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether filtering and sorting suggestions accounts for small typos.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.localityBonus": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether sorting favors words that appear close to the cursor.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.shareSuggestSelections": {
              "type": "boolean",
              "default": false,
              "markdownDescription": "Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.selectionMode": {
              "type": "string",
              "enum": [
                "always",
                "never",
                "whenTriggerCharacter",
                "whenQuickSuggestion"
              ],
              "enumDescriptions": [
                "Always select a suggestion when automatically triggering IntelliSense.",
                "Never select a suggestion when automatically triggering IntelliSense.",
                "Select a suggestion only when triggering IntelliSense from a trigger character.",
                "Select a suggestion only when triggering IntelliSense as you type."
              ],
              "default": "always",
              "markdownDescription": "Controls whether a suggestion is selected when the widget shows. Note that this only applies to automatically triggered suggestions (`#editor.quickSuggestions#` and `#editor.suggestOnTriggerCharacters#`) and that a suggestion is always selected when explicitly invoked, e.g via `Ctrl+Space`.",
              "defaultDefaultValue": "always",
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.snippetsPreventQuickSuggestions": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether an active snippet prevents quick suggestions.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showIcons": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether to show or hide icons in suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showStatusBar": {
              "type": "boolean",
              "default": false,
              "description": "Controls the visibility of the status bar at the bottom of the suggest widget.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.preview": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether to preview the suggestion outcome in the editor.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showInlineDetails": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether suggest details show inline with the label or only in the details widget.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.maxVisibleSuggestions": {
              "type": "number",
              "deprecationMessage": "This setting is deprecated. The suggest widget can now be resized.",
              "default": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.filteredTypes": {
              "type": "object",
              "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.",
              "default": {},
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showMethods": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `method`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showFunctions": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `function`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showConstructors": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `constructor`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showDeprecated": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `deprecated`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.matchOnWordStartOnly": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense filtering requires that the first character matches on a word start. For example, `c` on `Console` or `WebContext` but _not_ on `description`. When disabled IntelliSense will show more results but still sorts them by match quality.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showFields": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `field`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showVariables": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `variable`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showClasses": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `class`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showStructs": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `struct`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showInterfaces": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `interface`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showModules": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `module`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showProperties": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `property`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showEvents": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `event`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showOperators": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `operator`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showUnits": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `unit`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showValues": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `value`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showConstants": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `constant`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showEnums": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `enum`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showEnumMembers": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `enumMember`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showKeywords": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `keyword`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showWords": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `text`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showColors": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `color`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showFiles": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `file`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showReferences": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `reference`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showCustomcolors": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `customcolor`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showFolders": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `folder`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showTypeParameters": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `typeParameter`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showSnippets": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `snippet`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showUsers": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `user`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showIssues": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `issues`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggestFontSize": {
              "markdownDescription": "Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.",
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 1000,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.suggestLineHeight": {
              "markdownDescription": "Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used. The minimum value is 8.",
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 1000,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.suggestOnTriggerCharacters": {
              "description": "Controls whether suggestions should automatically show up when typing trigger characters.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggestSelection": {
              "markdownEnumDescriptions": [
                "Always select the first suggestion.",
                "Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.",
                "Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`."
              ],
              "description": "Controls how suggestions are pre-selected when showing the suggest list.",
              "type": "string",
              "enum": [
                "first",
                "recentlyUsed",
                "recentlyUsedByPrefix"
              ],
              "default": "first",
              "defaultDefaultValue": "first",
              "scope": 5,
              "restricted": false
            },
            "editor.tabCompletion": {
              "enumDescriptions": [
                "Tab complete will insert the best matching suggestion when pressing tab.",
                "Disable tab completions.",
                "Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled."
              ],
              "description": "Enables tab completions.",
              "type": "string",
              "enum": [
                "on",
                "off",
                "onlySnippets"
              ],
              "default": "off",
              "defaultDefaultValue": "off",
              "scope": 5,
              "restricted": false
            },
            "editor.unicodeHighlight.nonBasicASCII": {
              "restricted": true,
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                false,
                "inUntrustedWorkspace"
              ],
              "default": "inUntrustedWorkspace",
              "description": "Controls whether all non-basic ASCII characters are highlighted. Only characters between U+0020 and U+007E, tab, line-feed and carriage-return are considered basic ASCII.",
              "defaultDefaultValue": "inUntrustedWorkspace",
              "scope": 5
            },
            "editor.unicodeHighlight.invisibleCharacters": {
              "restricted": true,
              "type": "boolean",
              "default": true,
              "description": "Controls whether characters that just reserve space or have no width at all are highlighted.",
              "defaultDefaultValue": true,
              "scope": 5
            },
            "editor.unicodeHighlight.ambiguousCharacters": {
              "restricted": true,
              "type": "boolean",
              "default": true,
              "description": "Controls whether characters are highlighted that can be confused with basic ASCII characters, except those that are common in the current user locale.",
              "defaultDefaultValue": true,
              "scope": 5
            },
            "editor.unicodeHighlight.includeComments": {
              "restricted": true,
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                false,
                "inUntrustedWorkspace"
              ],
              "default": "inUntrustedWorkspace",
              "description": "Controls whether characters in comments should also be subject to Unicode highlighting.",
              "defaultDefaultValue": "inUntrustedWorkspace",
              "scope": 5
            },
            "editor.unicodeHighlight.includeStrings": {
              "restricted": true,
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                false,
                "inUntrustedWorkspace"
              ],
              "default": true,
              "description": "Controls whether characters in strings should also be subject to Unicode highlighting.",
              "defaultDefaultValue": true,
              "scope": 5
            },
            "editor.unicodeHighlight.allowedCharacters": {
              "restricted": true,
              "type": "object",
              "default": {},
              "description": "Defines allowed characters that are not being highlighted.",
              "additionalProperties": {
                "type": "boolean"
              },
              "defaultDefaultValue": {},
              "scope": 5
            },
            "editor.unicodeHighlight.allowedLocales": {
              "restricted": true,
              "type": "object",
              "additionalProperties": {
                "type": "boolean"
              },
              "default": {
                "_os": true,
                "_vscode": true
              },
              "description": "Unicode characters that are common in allowed locales are not being highlighted.",
              "defaultDefaultValue": {
                "_os": true,
                "_vscode": true
              },
              "scope": 5
            },
            "editor.unusualLineTerminators": {
              "enumDescriptions": [
                "Unusual line terminators are automatically removed.",
                "Unusual line terminators are ignored.",
                "Unusual line terminators prompt to be removed."
              ],
              "description": "Remove unusual line terminators that might cause problems.",
              "type": "string",
              "enum": [
                "auto",
                "off",
                "prompt"
              ],
              "default": "prompt",
              "defaultDefaultValue": "prompt",
              "scope": 5,
              "restricted": false
            },
            "editor.useTabStops": {
              "description": "Spaces and tabs are inserted and deleted in alignment with tab stops.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.wordBreak": {
              "markdownEnumDescriptions": [
                "Use the default line break rule.",
                "Word breaks should not be used for Chinese/Japanese/Korean (CJK) text. Non-CJK text behavior is the same as for normal."
              ],
              "description": "Controls the word break rules used for Chinese/Japanese/Korean (CJK) text.",
              "type": "string",
              "enum": [
                "normal",
                "keepAll"
              ],
              "default": "normal",
              "defaultDefaultValue": "normal",
              "scope": 5,
              "restricted": false
            },
            "editor.wordSegmenterLocales": {
              "anyOf": [
                {
                  "description": "Locales to be used for word segmentation when doing word related navigations or operations. Specify the BCP 47 language tag of the word you wish to recognize (e.g., ja, zh-CN, zh-Hant-TW, etc.).",
                  "type": "string"
                },
                {
                  "description": "Locales to be used for word segmentation when doing word related navigations or operations. Specify the BCP 47 language tag of the word you wish to recognize (e.g., ja, zh-CN, zh-Hant-TW, etc.).",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ],
              "default": null,
              "scope": 5,
              "restricted": false
            },
            "editor.wordSeparators": {
              "description": "Characters that will be used as word separators when doing word related navigations or operations.",
              "type": "string",
              "default": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
              "defaultDefaultValue": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
              "scope": 5,
              "restricted": false
            },
            "editor.wordWrap": {
              "markdownEnumDescriptions": [
                "Lines will never wrap.",
                "Lines will wrap at the viewport width.",
                "Lines will wrap at `#editor.wordWrapColumn#`.",
                "Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`."
              ],
              "description": "Controls how lines should wrap.",
              "type": "string",
              "enum": [
                "off",
                "on",
                "wordWrapColumn",
                "bounded"
              ],
              "default": "off",
              "defaultDefaultValue": "off",
              "scope": 5,
              "restricted": false
            },
            "editor.wordWrapColumn": {
              "markdownDescription": "Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.",
              "type": "integer",
              "default": 80,
              "minimum": 1,
              "maximum": 1073741824,
              "defaultDefaultValue": 80,
              "scope": 5,
              "restricted": false
            },
            "editor.wrappingIndent": {
              "type": "string",
              "enum": [
                "none",
                "same",
                "indent",
                "deepIndent"
              ],
              "enumDescriptions": [
                "No indentation. Wrapped lines begin at column 1.",
                "Wrapped lines get the same indentation as the parent.",
                "Wrapped lines get +1 indentation toward the parent.",
                "Wrapped lines get +2 indentation toward the parent."
              ],
              "description": "Controls the indentation of wrapped lines.",
              "default": "same",
              "defaultDefaultValue": "same",
              "scope": 5,
              "restricted": false
            },
            "editor.wrappingStrategy": {
              "enumDescriptions": [
                "Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.",
                "Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases."
              ],
              "type": "string",
              "enum": [
                "simple",
                "advanced"
              ],
              "default": "simple",
              "description": "Controls the algorithm that computes wrapping points. Note that when in accessibility mode, advanced will be used for the best experience.",
              "defaultDefaultValue": "simple",
              "scope": 5,
              "restricted": false
            },
            "editor.showDeprecated": {
              "description": "Controls strikethrough deprecated variables.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.inlayHints.enabled": {
              "type": "string",
              "default": "on",
              "description": "Enables the inlay hints in the editor.",
              "enum": [
                "on",
                "onUnlessPressed",
                "offUnlessPressed",
                "off"
              ],
              "markdownEnumDescriptions": [
                "Inlay hints are enabled",
                "Inlay hints are showing by default and hide when holding Ctrl+Alt",
                "Inlay hints are hidden by default and show when holding Ctrl+Alt",
                "Inlay hints are disabled"
              ],
              "defaultDefaultValue": "on",
              "scope": 5,
              "restricted": false
            },
            "editor.inlayHints.fontSize": {
              "type": "number",
              "default": 0,
              "markdownDescription": "Controls font size of inlay hints in the editor. As default the `#editor.fontSize#` is used when the configured value is less than `5` or greater than the editor font size.",
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.inlayHints.fontFamily": {
              "type": "string",
              "default": "",
              "markdownDescription": "Controls font family of inlay hints in the editor. When set to empty, the `#editor.fontFamily#` is used.",
              "defaultDefaultValue": "",
              "scope": 5,
              "restricted": false
            },
            "editor.inlayHints.padding": {
              "type": "boolean",
              "default": false,
              "description": "Enables the padding around the inlay hints in the editor.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.tabFocusMode": {
              "markdownDescription": "Controls whether the editor receives tabs or defers them to the workbench for navigation.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.defaultColorDecorators": {
              "markdownDescription": "Controls whether inline color decorations should be shown using the default document color provider",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.colorDecoratorsActivatedOn": {
              "enumDescriptions": [
                "Make the color picker appear both on click and hover of the color decorator",
                "Make the color picker appear on hover of the color decorator",
                "Make the color picker appear on click of the color decorator"
              ],
              "description": "Controls the condition to make a color picker appear from a color decorator",
              "type": "string",
              "enum": [
                "clickAndHover",
                "hover",
                "click"
              ],
              "default": "clickAndHover",
              "defaultDefaultValue": "clickAndHover",
              "scope": 5,
              "restricted": false
            },
            "editor.inlineCompletionsAccessibilityVerbose": {
              "description": "Controls whether the accessibility hint should be provided to screen reader users when an inline completion is shown.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            }
          }
        }
      ],
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "interactiveWindow.collapseCellInputCode": {
      "markdownDescription": "Controls whether code cells in the interactive window are collapsed by default.",
      "type": "string",
      "enum": [
        "always",
        "never",
        "fromEditor"
      ],
      "default": "fromEditor",
      "defaultDefaultValue": "fromEditor",
      "scope": 3,
      "restricted": false
    },
    "notebook.output.lineHeight": {
      "markdownDescription": "Line height of the output text within notebook cells.\n - When set to 0, editor line height is used.\n - Values between 0 and 8 will be used as a multiplier with the font size.\n - Values greater than or equal to 8 will be used as effective values.",
      "type": "number",
      "default": 0,
      "tags": [
        "notebookLayout",
        "notebookOutputLayout"
      ],
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "notebook.output.fontSize": {
      "markdownDescription": "Font size for the output text within notebook cells. When set to 0, `#editor.fontSize#` is used.",
      "type": "number",
      "default": 0,
      "tags": [
        "notebookLayout",
        "notebookOutputLayout"
      ],
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "notebook.output.fontFamily": {
      "markdownDescription": "The font family of the output text within notebook cells. When set to empty, the `#editor.fontFamily#` is used.",
      "type": "string",
      "tags": [
        "notebookLayout",
        "notebookOutputLayout"
      ],
      "default": "",
      "scope": 3,
      "restricted": false
    },
    "notebook.output.scrolling": {
      "markdownDescription": "Initially render notebook outputs in a scrollable region when longer than the limit.",
      "type": "boolean",
      "tags": [
        "notebookLayout",
        "notebookOutputLayout"
      ],
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.output.wordWrap": {
      "markdownDescription": "Controls whether the lines in output should wrap.",
      "type": "boolean",
      "tags": [
        "notebookLayout",
        "notebookOutputLayout"
      ],
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.formatOnSave.enabled": {
      "markdownDescription": "Format a notebook on save. A formatter must be available, the file must not be saved after delay, and the editor must not be shutting down.",
      "type": "boolean",
      "tags": [
        "notebookLayout"
      ],
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.insertFinalNewline": {
      "markdownDescription": "When enabled, insert a final new line into the end of code cells when saving a notebook.",
      "type": "boolean",
      "tags": [
        "notebookLayout"
      ],
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.codeActionsOnSave": {
      "markdownDescription": "Run a series of Code Actions for a notebook on save. Code Actions must be specified, the file must not be saved after delay, and the editor must not be shutting down. Example: `\"notebook.source.organizeImports\": \"explicit\"`",
      "type": "object",
      "additionalProperties": {
        "type": [
          "string",
          "boolean"
        ],
        "enum": [
          "explicit",
          "never",
          true,
          false
        ],
        "enumDescriptions": [
          "Triggers Code Actions only when explicitly saved.",
          "Never triggers Code Actions on save.",
          "Triggers Code Actions only when explicitly saved. This value will be deprecated in favor of \"explicit\".",
          "Triggers Code Actions only when explicitly saved. This value will be deprecated in favor of \"never\"."
        ]
      },
      "default": {},
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "notebook.formatOnCellExecution": {
      "markdownDescription": "Format a notebook cell upon execution. A formatter must be available.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.confirmDeleteRunningCell": {
      "markdownDescription": "Control whether a confirmation prompt is required to delete a running cell.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.find.scope": {
      "markdownDescription": "Customize the Find Widget behavior for searching within notebook cells. When both markup source and markup preview are enabled, the Find Widget will search either the source code or preview based on the current state of the cell.",
      "type": "object",
      "properties": {
        "markupSource": {
          "type": "boolean",
          "default": true
        },
        "markupPreview": {
          "type": "boolean",
          "default": true
        },
        "codeSource": {
          "type": "boolean",
          "default": true
        },
        "codeOutput": {
          "type": "boolean",
          "default": true
        }
      },
      "default": {
        "markupSource": true,
        "markupPreview": true,
        "codeSource": true,
        "codeOutput": true
      },
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": {
        "markupSource": true,
        "markupPreview": true,
        "codeSource": true,
        "codeOutput": true
      },
      "scope": 3,
      "restricted": false
    },
    "notebook.experimental.remoteSave": {
      "markdownDescription": "Enables the incremental saving of notebooks in Remote environment. When enabled, only the changes to the notebook are sent to the extension host, improving performance for large notebooks and slow network connections.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.scrolling.revealNextCellOnExecute": {
      "markdownDescription": "How far to scroll when revealing the next cell upon running notebook.cell.executeAndSelectBelow.",
      "type": "string",
      "enum": [
        "fullCell",
        "firstLine",
        "none"
      ],
      "markdownEnumDescriptions": [
        "Scroll to fully reveal the next cell.",
        "Scroll to reveal the first line of the next cell.",
        "Do not scroll."
      ],
      "default": "fullCell",
      "defaultDefaultValue": "fullCell",
      "scope": 3,
      "restricted": false
    },
    "notebook.experimental.cellChat": {
      "markdownDescription": "Enable experimental floating chat widget in notebooks.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.experimental.generate": {
      "markdownDescription": "Enable experimental generate action to create code cell with inline chat enabled.",
      "type": "boolean",
      "default": false,
      "tags": [
        "experimental"
      ],
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.experimental.variablesView": {
      "markdownDescription": "Enable the experimental notebook variables view within the debug panel.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.cellFailureDiagnostics": {
      "markdownDescription": "Show available diagnostics for cell failures.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.backup.sizeLimit": {
      "markdownDescription": "The limit of notebook output size in kilobytes (KB) where notebook files will no longer be backed up for hot reload. Use 0 for unlimited.",
      "type": "number",
      "default": 10000,
      "defaultDefaultValue": 10000,
      "scope": 3,
      "restricted": false
    },
    "search.mode": {
      "type": "string",
      "enum": [
        "view",
        "reuseEditor",
        "newEditor"
      ],
      "default": "view",
      "markdownDescription": "Controls where new `Search: Find in Files` and `Find in Folder` operations occur: either in the search view, or in a search editor.",
      "enumDescriptions": [
        "Search in the search view, either in the panel or side bars.",
        "Search in an existing search editor if present, otherwise in a new search editor.",
        "Search in a new search editor."
      ],
      "defaultDefaultValue": "view",
      "scope": 3,
      "restricted": false
    },
    "search.useRipgrep": {
      "type": "boolean",
      "description": "This setting is deprecated and now falls back on \"search.usePCRE2\".",
      "deprecationMessage": "Deprecated. Consider \"search.usePCRE2\" for advanced regex feature support.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.maintainFileSearchCache": {
      "type": "boolean",
      "deprecationMessage": "The search cache is kept in the extension host which never shuts down, so this setting is no longer needed.",
      "description": "When enabled, the searchService process will be kept alive instead of being shut down after an hour of inactivity. This will keep the file search cache in memory.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.quickOpen.includeSymbols": {
      "type": "boolean",
      "description": "Whether to include results from a global symbol search in the file results for Quick Open.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.quickOpen.includeHistory": {
      "type": "boolean",
      "description": "Whether to include results from recently opened files in the file results for Quick Open.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.quickOpen.history.filterSortOrder": {
      "type": "string",
      "enum": [
        "default",
        "recency"
      ],
      "default": "default",
      "enumDescriptions": [
        "History entries are sorted by relevance based on the filter value used. More relevant entries appear first.",
        "History entries are sorted by recency. More recently opened entries appear first."
      ],
      "description": "Controls sorting order of editor history in quick open when filtering.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "search.followSymlinks": {
      "type": "boolean",
      "description": "Controls whether to follow symlinks while searching.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.smartCase": {
      "type": "boolean",
      "description": "Search case-insensitively if the pattern is all lowercase, otherwise, search case-sensitively.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.location": {
      "type": "string",
      "enum": [
        "sidebar",
        "panel"
      ],
      "default": "sidebar",
      "description": "Controls whether the search will be shown as a view in the sidebar or as a panel in the panel area for more horizontal space.",
      "deprecationMessage": "This setting is deprecated. You can drag the search icon to a new location instead.",
      "defaultDefaultValue": "sidebar",
      "scope": 3,
      "restricted": false
    },
    "search.maxResults": {
      "type": [
        "number",
        "null"
      ],
      "default": 20000,
      "markdownDescription": "Controls the maximum number of search results, this can be set to `null` (empty) to return unlimited results.",
      "defaultDefaultValue": 20000,
      "scope": 3,
      "restricted": false
    },
    "search.collapseResults": {
      "type": "string",
      "enum": [
        "auto",
        "alwaysCollapse",
        "alwaysExpand"
      ],
      "enumDescriptions": [
        "Files with less than 10 results are expanded. Others are collapsed.",
        "",
        ""
      ],
      "default": "alwaysExpand",
      "description": "Controls whether the search results will be collapsed or expanded.",
      "defaultDefaultValue": "alwaysExpand",
      "scope": 3,
      "restricted": false
    },
    "search.useReplacePreview": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to open Replace Preview when selecting or replacing a match.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.showLineNumbers": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether to show line numbers for search results.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.usePCRE2": {
      "type": "boolean",
      "default": false,
      "description": "Whether to use the PCRE2 regex engine in text search. This enables using some advanced regex features like lookahead and backreferences. However, not all PCRE2 features are supported - only features that are also supported by JavaScript.",
      "deprecationMessage": "Deprecated. PCRE2 will be used automatically when using regex features that are only supported by PCRE2.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.actionsPosition": {
      "type": "string",
      "enum": [
        "auto",
        "right"
      ],
      "enumDescriptions": [
        "Position the actionbar to the right when the search view is narrow, and immediately after the content when the search view is wide.",
        "Always position the actionbar to the right."
      ],
      "default": "right",
      "description": "Controls the positioning of the actionbar on rows in the search view.",
      "defaultDefaultValue": "right",
      "scope": 3,
      "restricted": false
    },
    "search.searchOnType": {
      "type": "boolean",
      "default": true,
      "description": "Search all files as you type.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.seedWithNearestWord": {
      "type": "boolean",
      "default": false,
      "description": "Enable seeding search from the word nearest the cursor when the active editor has no selection.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.seedOnFocus": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Update the search query to the editor's selected text when focusing the search view. This happens either on click or when triggering the `workbench.views.search.focus` command.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.searchOnTypeDebouncePeriod": {
      "type": "number",
      "default": 300,
      "markdownDescription": "When `#search.searchOnType#` is enabled, controls the timeout in milliseconds between a character being typed and the search starting. Has no effect when `#search.searchOnType#` is disabled.",
      "defaultDefaultValue": 300,
      "scope": 3,
      "restricted": false
    },
    "search.searchEditor.doubleClickBehaviour": {
      "type": "string",
      "enum": [
        "selectWord",
        "goToLocation",
        "openLocationToSide"
      ],
      "default": "goToLocation",
      "enumDescriptions": [
        "Double-clicking selects the word under the cursor.",
        "Double-clicking opens the result in the active editor group.",
        "Double-clicking opens the result in the editor group to the side, creating one if it does not yet exist."
      ],
      "markdownDescription": "Configure effect of double-clicking a result in a search editor.",
      "defaultDefaultValue": "goToLocation",
      "scope": 3,
      "restricted": false
    },
    "search.searchEditor.singleClickBehaviour": {
      "type": "string",
      "enum": [
        "default",
        "peekDefinition"
      ],
      "default": "default",
      "enumDescriptions": [
        "Single-clicking does nothing.",
        "Single-clicking opens a Peek Definition window."
      ],
      "markdownDescription": "Configure effect of single-clicking a result in a search editor.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "search.searchEditor.reusePriorSearchConfiguration": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled, new Search Editors will reuse the includes, excludes, and flags of the previously opened Search Editor.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.searchEditor.defaultNumberOfContextLines": {
      "type": [
        "number",
        "null"
      ],
      "default": 1,
      "markdownDescription": "The default number of surrounding context lines to use when creating new Search Editors. If using `#search.searchEditor.reusePriorSearchConfiguration#`, this can be set to `null` (empty) to use the prior Search Editor's configuration.",
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "search.sortOrder": {
      "type": "string",
      "enum": [
        "default",
        "fileNames",
        "type",
        "modified",
        "countDescending",
        "countAscending"
      ],
      "default": "default",
      "enumDescriptions": [
        "Results are sorted by folder and file names, in alphabetical order.",
        "Results are sorted by file names ignoring folder order, in alphabetical order.",
        "Results are sorted by file extensions, in alphabetical order.",
        "Results are sorted by file last modified date, in descending order.",
        "Results are sorted by count per file, in descending order.",
        "Results are sorted by count per file, in ascending order."
      ],
      "description": "Controls sorting order of search results.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "search.decorations.colors": {
      "type": "boolean",
      "description": "Controls whether search file decorations should use colors.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.decorations.badges": {
      "type": "boolean",
      "description": "Controls whether search file decorations should use badges.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.defaultViewMode": {
      "type": "string",
      "enum": [
        "tree",
        "list"
      ],
      "default": "list",
      "enumDescriptions": [
        "Shows search results as a tree.",
        "Shows search results as a list."
      ],
      "description": "Controls the default search result view mode.",
      "defaultDefaultValue": "list",
      "scope": 3,
      "restricted": false
    },
    "search.quickAccess.preserveInput": {
      "type": "boolean",
      "description": "Controls whether the last typed input to Quick Search should be restored when opening it the next time.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.experimental.closedNotebookRichContentResults": {
      "type": "boolean",
      "description": "Show notebook editor rich content results for closed notebooks. Please refresh your search results after changing this setting.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.automationProfile.linux": {
      "restricted": true,
      "markdownDescription": "The terminal profile to use on Linux for automation-related terminal usage like tasks and debug.",
      "type": [
        "object",
        "null"
      ],
      "default": null,
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "object",
          "required": [
            "path"
          ],
          "properties": {
            "path": {
              "description": "A single path to a shell executable.",
              "type": [
                "string"
              ],
              "items": {
                "type": "string"
              }
            },
            "args": {
              "description": "An optional set of arguments to run the shell executable with.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "overrideName": {
              "description": "Whether or not to replace the dynamic terminal title that detects what program is running with the static profile name.",
              "type": "boolean"
            },
            "icon": {
              "description": "A codicon ID to associate with the terminal icon.",
              "type": "string",
              "enum": [
                "add",
                "plus",
                "gist-new",
                "repo-create",
                "lightbulb",
                "light-bulb",
                "repo",
                "repo-delete",
                "gist-fork",
                "repo-forked",
                "git-pull-request",
                "git-pull-request-abandoned",
                "record-keys",
                "keyboard",
                "tag",
                "git-pull-request-label",
                "tag-add",
                "tag-remove",
                "person",
                "person-follow",
                "person-outline",
                "person-filled",
                "git-branch",
                "git-branch-create",
                "git-branch-delete",
                "source-control",
                "mirror",
                "mirror-public",
                "star",
                "star-add",
                "star-delete",
                "star-empty",
                "comment",
                "comment-add",
                "alert",
                "warning",
                "search",
                "search-save",
                "log-out",
                "sign-out",
                "log-in",
                "sign-in",
                "eye",
                "eye-unwatch",
                "eye-watch",
                "circle-filled",
                "primitive-dot",
                "close-dirty",
                "debug-breakpoint",
                "debug-breakpoint-disabled",
                "debug-hint",
                "terminal-decoration-success",
                "primitive-square",
                "edit",
                "pencil",
                "info",
                "issue-opened",
                "gist-private",
                "git-fork-private",
                "lock",
                "mirror-private",
                "close",
                "remove-close",
                "x",
                "repo-sync",
                "sync",
                "clone",
                "desktop-download",
                "beaker",
                "microscope",
                "vm",
                "device-desktop",
                "file",
                "file-text",
                "more",
                "ellipsis",
                "kebab-horizontal",
                "mail-reply",
                "reply",
                "organization",
                "organization-filled",
                "organization-outline",
                "new-file",
                "file-add",
                "new-folder",
                "file-directory-create",
                "trash",
                "trashcan",
                "history",
                "clock",
                "folder",
                "file-directory",
                "symbol-folder",
                "logo-github",
                "mark-github",
                "github",
                "terminal",
                "console",
                "repl",
                "zap",
                "symbol-event",
                "error",
                "stop",
                "variable",
                "symbol-variable",
                "array",
                "symbol-array",
                "symbol-module",
                "symbol-package",
                "symbol-namespace",
                "symbol-object",
                "symbol-method",
                "symbol-function",
                "symbol-constructor",
                "symbol-boolean",
                "symbol-null",
                "symbol-numeric",
                "symbol-number",
                "symbol-structure",
                "symbol-struct",
                "symbol-parameter",
                "symbol-type-parameter",
                "symbol-key",
                "symbol-text",
                "symbol-reference",
                "go-to-file",
                "symbol-enum",
                "symbol-value",
                "symbol-ruler",
                "symbol-unit",
                "activate-breakpoints",
                "archive",
                "arrow-both",
                "arrow-down",
                "arrow-left",
                "arrow-right",
                "arrow-small-down",
                "arrow-small-left",
                "arrow-small-right",
                "arrow-small-up",
                "arrow-up",
                "bell",
                "bold",
                "book",
                "bookmark",
                "debug-breakpoint-conditional-unverified",
                "debug-breakpoint-conditional",
                "debug-breakpoint-conditional-disabled",
                "debug-breakpoint-data-unverified",
                "debug-breakpoint-data",
                "debug-breakpoint-data-disabled",
                "debug-breakpoint-log-unverified",
                "debug-breakpoint-log",
                "debug-breakpoint-log-disabled",
                "briefcase",
                "broadcast",
                "browser",
                "bug",
                "calendar",
                "case-sensitive",
                "check",
                "checklist",
                "chevron-down",
                "chevron-left",
                "chevron-right",
                "chevron-up",
                "chrome-close",
                "chrome-maximize",
                "chrome-minimize",
                "chrome-restore",
                "circle-outline",
                "circle",
                "debug-breakpoint-unverified",
                "terminal-decoration-incomplete",
                "circle-slash",
                "circuit-board",
                "clear-all",
                "clippy",
                "close-all",
                "cloud-download",
                "cloud-upload",
                "code",
                "collapse-all",
                "color-mode",
                "comment-discussion",
                "credit-card",
                "dash",
                "dashboard",
                "database",
                "debug-continue",
                "debug-disconnect",
                "debug-pause",
                "debug-restart",
                "debug-start",
                "debug-step-into",
                "debug-step-out",
                "debug-step-over",
                "debug-stop",
                "debug",
                "device-camera-video",
                "device-camera",
                "device-mobile",
                "diff-added",
                "diff-ignored",
                "diff-modified",
                "diff-removed",
                "diff-renamed",
                "diff",
                "diff-sidebyside",
                "discard",
                "editor-layout",
                "empty-window",
                "exclude",
                "extensions",
                "eye-closed",
                "file-binary",
                "file-code",
                "file-media",
                "file-pdf",
                "file-submodule",
                "file-symlink-directory",
                "file-symlink-file",
                "file-zip",
                "files",
                "filter",
                "flame",
                "fold-down",
                "fold-up",
                "fold",
                "folder-active",
                "folder-opened",
                "gear",
                "gift",
                "gist-secret",
                "gist",
                "git-commit",
                "git-compare",
                "compare-changes",
                "git-merge",
                "github-action",
                "github-alt",
                "globe",
                "grabber",
                "graph",
                "gripper",
                "heart",
                "home",
                "horizontal-rule",
                "hubot",
                "inbox",
                "issue-reopened",
                "issues",
                "italic",
                "jersey",
                "json",
                "kebab-vertical",
                "key",
                "law",
                "lightbulb-autofix",
                "link-external",
                "link",
                "list-ordered",
                "list-unordered",
                "live-share",
                "loading",
                "location",
                "mail-read",
                "mail",
                "markdown",
                "megaphone",
                "mention",
                "milestone",
                "git-pull-request-milestone",
                "mortar-board",
                "move",
                "multiple-windows",
                "mute",
                "no-newline",
                "note",
                "octoface",
                "open-preview",
                "package",
                "paintcan",
                "pin",
                "play",
                "run",
                "plug",
                "preserve-case",
                "preview",
                "project",
                "pulse",
                "question",
                "quote",
                "radio-tower",
                "reactions",
                "references",
                "refresh",
                "regex",
                "remote-explorer",
                "remote",
                "remove",
                "replace-all",
                "replace",
                "repo-clone",
                "repo-force-push",
                "repo-pull",
                "repo-push",
                "report",
                "request-changes",
                "rocket",
                "root-folder-opened",
                "root-folder",
                "rss",
                "ruby",
                "save-all",
                "save-as",
                "save",
                "screen-full",
                "screen-normal",
                "search-stop",
                "server",
                "settings-gear",
                "settings",
                "shield",
                "smiley",
                "sort-precedence",
                "split-horizontal",
                "split-vertical",
                "squirrel",
                "star-full",
                "star-half",
                "symbol-class",
                "symbol-color",
                "symbol-constant",
                "symbol-enum-member",
                "symbol-field",
                "symbol-file",
                "symbol-interface",
                "symbol-keyword",
                "symbol-misc",
                "symbol-operator",
                "symbol-property",
                "wrench",
                "wrench-subaction",
                "symbol-snippet",
                "tasklist",
                "telescope",
                "text-size",
                "three-bars",
                "thumbsdown",
                "thumbsup",
                "tools",
                "triangle-down",
                "triangle-left",
                "triangle-right",
                "triangle-up",
                "twitter",
                "unfold",
                "unlock",
                "unmute",
                "unverified",
                "verified",
                "versions",
                "vm-active",
                "vm-outline",
                "vm-running",
                "watch",
                "whitespace",
                "whole-word",
                "window",
                "word-wrap",
                "zoom-in",
                "zoom-out",
                "list-filter",
                "list-flat",
                "list-selection",
                "selection",
                "list-tree",
                "debug-breakpoint-function-unverified",
                "debug-breakpoint-function",
                "debug-breakpoint-function-disabled",
                "debug-stackframe-active",
                "circle-small-filled",
                "debug-stackframe-dot",
                "terminal-decoration-mark",
                "debug-stackframe",
                "debug-stackframe-focused",
                "debug-breakpoint-unsupported",
                "symbol-string",
                "debug-reverse-continue",
                "debug-step-back",
                "debug-restart-frame",
                "debug-alt",
                "call-incoming",
                "call-outgoing",
                "menu",
                "expand-all",
                "feedback",
                "git-pull-request-reviewer",
                "group-by-ref-type",
                "ungroup-by-ref-type",
                "account",
                "git-pull-request-assignee",
                "bell-dot",
                "debug-console",
                "library",
                "output",
                "run-all",
                "sync-ignored",
                "pinned",
                "github-inverted",
                "server-process",
                "server-environment",
                "pass",
                "issue-closed",
                "stop-circle",
                "play-circle",
                "record",
                "debug-alt-small",
                "vm-connect",
                "cloud",
                "merge",
                "export",
                "graph-left",
                "magnet",
                "notebook",
                "redo",
                "check-all",
                "pinned-dirty",
                "pass-filled",
                "circle-large-filled",
                "circle-large",
                "circle-large-outline",
                "combine",
                "gather",
                "table",
                "variable-group",
                "type-hierarchy",
                "type-hierarchy-sub",
                "type-hierarchy-super",
                "git-pull-request-create",
                "run-above",
                "run-below",
                "notebook-template",
                "debug-rerun",
                "workspace-trusted",
                "workspace-untrusted",
                "workspace-unknown",
                "terminal-cmd",
                "terminal-debian",
                "terminal-linux",
                "terminal-powershell",
                "terminal-tmux",
                "terminal-ubuntu",
                "terminal-bash",
                "arrow-swap",
                "copy",
                "person-add",
                "filter-filled",
                "wand",
                "debug-line-by-line",
                "inspect",
                "layers",
                "layers-dot",
                "layers-active",
                "compass",
                "compass-dot",
                "compass-active",
                "azure",
                "issue-draft",
                "git-pull-request-closed",
                "git-pull-request-draft",
                "debug-all",
                "debug-coverage",
                "run-errors",
                "folder-library",
                "debug-continue-small",
                "beaker-stop",
                "graph-line",
                "graph-scatter",
                "pie-chart",
                "bracket",
                "bracket-dot",
                "bracket-error",
                "lock-small",
                "azure-devops",
                "verified-filled",
                "newline",
                "layout",
                "layout-activitybar-left",
                "layout-activitybar-right",
                "layout-panel-left",
                "layout-panel-center",
                "layout-panel-justify",
                "layout-panel-right",
                "layout-panel",
                "layout-sidebar-left",
                "layout-sidebar-right",
                "layout-statusbar",
                "layout-menubar",
                "layout-centered",
                "target",
                "indent",
                "record-small",
                "error-small",
                "terminal-decoration-error",
                "arrow-circle-down",
                "arrow-circle-left",
                "arrow-circle-right",
                "arrow-circle-up",
                "layout-sidebar-right-off",
                "layout-panel-off",
                "layout-sidebar-left-off",
                "blank",
                "heart-filled",
                "map",
                "map-horizontal",
                "fold-horizontal",
                "map-filled",
                "map-horizontal-filled",
                "fold-horizontal-filled",
                "circle-small",
                "bell-slash",
                "bell-slash-dot",
                "comment-unresolved",
                "git-pull-request-go-to-changes",
                "git-pull-request-new-changes",
                "search-fuzzy",
                "comment-draft",
                "send",
                "sparkle",
                "insert",
                "mic",
                "thumbsdown-filled",
                "thumbsup-filled",
                "coffee",
                "snake",
                "game",
                "vr",
                "chip",
                "piano",
                "music",
                "mic-filled",
                "repo-fetch",
                "copilot",
                "lightbulb-sparkle",
                "robot",
                "sparkle-filled",
                "diff-single",
                "diff-multiple",
                "surround-with",
                "share",
                "git-stash",
                "git-stash-apply",
                "git-stash-pop",
                "vscode",
                "vscode-insiders",
                "code-oss",
                "run-coverage",
                "run-all-coverage",
                "coverage",
                "github-project",
                "map-vertical",
                "fold-vertical",
                "map-vertical-filled",
                "fold-vertical-filled",
                "go-to-search",
                "percentage",
                "sort-percentage",
                "dialog-error",
                "dialog-warning",
                "dialog-info",
                "dialog-close",
                "tree-item-expanded",
                "tree-filter-on-type-on",
                "tree-filter-on-type-off",
                "tree-filter-clear",
                "tree-item-loading",
                "menu-selection",
                "menu-submenu",
                "menubar-more",
                "scrollbar-button-left",
                "scrollbar-button-right",
                "scrollbar-button-up",
                "scrollbar-button-down",
                "toolbar-more",
                "quick-input-back",
                "drop-down-button",
                "symbol-customcolor",
                "export",
                "workspace-unspecified",
                "newline",
                "thumbsdown-filled",
                "thumbsup-filled",
                "git-fetch",
                "lightbulb-sparkle-autofix",
                "debug-breakpoint-pending"
              ],
              "markdownEnumDescriptions": [
                "$(add)",
                "$(plus)",
                "$(gist-new)",
                "$(repo-create)",
                "$(lightbulb)",
                "$(light-bulb)",
                "$(repo)",
                "$(repo-delete)",
                "$(gist-fork)",
                "$(repo-forked)",
                "$(git-pull-request)",
                "$(git-pull-request-abandoned)",
                "$(record-keys)",
                "$(keyboard)",
                "$(tag)",
                "$(git-pull-request-label)",
                "$(tag-add)",
                "$(tag-remove)",
                "$(person)",
                "$(person-follow)",
                "$(person-outline)",
                "$(person-filled)",
                "$(git-branch)",
                "$(git-branch-create)",
                "$(git-branch-delete)",
                "$(source-control)",
                "$(mirror)",
                "$(mirror-public)",
                "$(star)",
                "$(star-add)",
                "$(star-delete)",
                "$(star-empty)",
                "$(comment)",
                "$(comment-add)",
                "$(alert)",
                "$(warning)",
                "$(search)",
                "$(search-save)",
                "$(log-out)",
                "$(sign-out)",
                "$(log-in)",
                "$(sign-in)",
                "$(eye)",
                "$(eye-unwatch)",
                "$(eye-watch)",
                "$(circle-filled)",
                "$(primitive-dot)",
                "$(close-dirty)",
                "$(debug-breakpoint)",
                "$(debug-breakpoint-disabled)",
                "$(debug-hint)",
                "$(terminal-decoration-success)",
                "$(primitive-square)",
                "$(edit)",
                "$(pencil)",
                "$(info)",
                "$(issue-opened)",
                "$(gist-private)",
                "$(git-fork-private)",
                "$(lock)",
                "$(mirror-private)",
                "$(close)",
                "$(remove-close)",
                "$(x)",
                "$(repo-sync)",
                "$(sync)",
                "$(clone)",
                "$(desktop-download)",
                "$(beaker)",
                "$(microscope)",
                "$(vm)",
                "$(device-desktop)",
                "$(file)",
                "$(file-text)",
                "$(more)",
                "$(ellipsis)",
                "$(kebab-horizontal)",
                "$(mail-reply)",
                "$(reply)",
                "$(organization)",
                "$(organization-filled)",
                "$(organization-outline)",
                "$(new-file)",
                "$(file-add)",
                "$(new-folder)",
                "$(file-directory-create)",
                "$(trash)",
                "$(trashcan)",
                "$(history)",
                "$(clock)",
                "$(folder)",
                "$(file-directory)",
                "$(symbol-folder)",
                "$(logo-github)",
                "$(mark-github)",
                "$(github)",
                "$(terminal)",
                "$(console)",
                "$(repl)",
                "$(zap)",
                "$(symbol-event)",
                "$(error)",
                "$(stop)",
                "$(variable)",
                "$(symbol-variable)",
                "$(array)",
                "$(symbol-array)",
                "$(symbol-module)",
                "$(symbol-package)",
                "$(symbol-namespace)",
                "$(symbol-object)",
                "$(symbol-method)",
                "$(symbol-function)",
                "$(symbol-constructor)",
                "$(symbol-boolean)",
                "$(symbol-null)",
                "$(symbol-numeric)",
                "$(symbol-number)",
                "$(symbol-structure)",
                "$(symbol-struct)",
                "$(symbol-parameter)",
                "$(symbol-type-parameter)",
                "$(symbol-key)",
                "$(symbol-text)",
                "$(symbol-reference)",
                "$(go-to-file)",
                "$(symbol-enum)",
                "$(symbol-value)",
                "$(symbol-ruler)",
                "$(symbol-unit)",
                "$(activate-breakpoints)",
                "$(archive)",
                "$(arrow-both)",
                "$(arrow-down)",
                "$(arrow-left)",
                "$(arrow-right)",
                "$(arrow-small-down)",
                "$(arrow-small-left)",
                "$(arrow-small-right)",
                "$(arrow-small-up)",
                "$(arrow-up)",
                "$(bell)",
                "$(bold)",
                "$(book)",
                "$(bookmark)",
                "$(debug-breakpoint-conditional-unverified)",
                "$(debug-breakpoint-conditional)",
                "$(debug-breakpoint-conditional-disabled)",
                "$(debug-breakpoint-data-unverified)",
                "$(debug-breakpoint-data)",
                "$(debug-breakpoint-data-disabled)",
                "$(debug-breakpoint-log-unverified)",
                "$(debug-breakpoint-log)",
                "$(debug-breakpoint-log-disabled)",
                "$(briefcase)",
                "$(broadcast)",
                "$(browser)",
                "$(bug)",
                "$(calendar)",
                "$(case-sensitive)",
                "$(check)",
                "$(checklist)",
                "$(chevron-down)",
                "$(chevron-left)",
                "$(chevron-right)",
                "$(chevron-up)",
                "$(chrome-close)",
                "$(chrome-maximize)",
                "$(chrome-minimize)",
                "$(chrome-restore)",
                "$(circle-outline)",
                "$(circle)",
                "$(debug-breakpoint-unverified)",
                "$(terminal-decoration-incomplete)",
                "$(circle-slash)",
                "$(circuit-board)",
                "$(clear-all)",
                "$(clippy)",
                "$(close-all)",
                "$(cloud-download)",
                "$(cloud-upload)",
                "$(code)",
                "$(collapse-all)",
                "$(color-mode)",
                "$(comment-discussion)",
                "$(credit-card)",
                "$(dash)",
                "$(dashboard)",
                "$(database)",
                "$(debug-continue)",
                "$(debug-disconnect)",
                "$(debug-pause)",
                "$(debug-restart)",
                "$(debug-start)",
                "$(debug-step-into)",
                "$(debug-step-out)",
                "$(debug-step-over)",
                "$(debug-stop)",
                "$(debug)",
                "$(device-camera-video)",
                "$(device-camera)",
                "$(device-mobile)",
                "$(diff-added)",
                "$(diff-ignored)",
                "$(diff-modified)",
                "$(diff-removed)",
                "$(diff-renamed)",
                "$(diff)",
                "$(diff-sidebyside)",
                "$(discard)",
                "$(editor-layout)",
                "$(empty-window)",
                "$(exclude)",
                "$(extensions)",
                "$(eye-closed)",
                "$(file-binary)",
                "$(file-code)",
                "$(file-media)",
                "$(file-pdf)",
                "$(file-submodule)",
                "$(file-symlink-directory)",
                "$(file-symlink-file)",
                "$(file-zip)",
                "$(files)",
                "$(filter)",
                "$(flame)",
                "$(fold-down)",
                "$(fold-up)",
                "$(fold)",
                "$(folder-active)",
                "$(folder-opened)",
                "$(gear)",
                "$(gift)",
                "$(gist-secret)",
                "$(gist)",
                "$(git-commit)",
                "$(git-compare)",
                "$(compare-changes)",
                "$(git-merge)",
                "$(github-action)",
                "$(github-alt)",
                "$(globe)",
                "$(grabber)",
                "$(graph)",
                "$(gripper)",
                "$(heart)",
                "$(home)",
                "$(horizontal-rule)",
                "$(hubot)",
                "$(inbox)",
                "$(issue-reopened)",
                "$(issues)",
                "$(italic)",
                "$(jersey)",
                "$(json)",
                "$(kebab-vertical)",
                "$(key)",
                "$(law)",
                "$(lightbulb-autofix)",
                "$(link-external)",
                "$(link)",
                "$(list-ordered)",
                "$(list-unordered)",
                "$(live-share)",
                "$(loading)",
                "$(location)",
                "$(mail-read)",
                "$(mail)",
                "$(markdown)",
                "$(megaphone)",
                "$(mention)",
                "$(milestone)",
                "$(git-pull-request-milestone)",
                "$(mortar-board)",
                "$(move)",
                "$(multiple-windows)",
                "$(mute)",
                "$(no-newline)",
                "$(note)",
                "$(octoface)",
                "$(open-preview)",
                "$(package)",
                "$(paintcan)",
                "$(pin)",
                "$(play)",
                "$(run)",
                "$(plug)",
                "$(preserve-case)",
                "$(preview)",
                "$(project)",
                "$(pulse)",
                "$(question)",
                "$(quote)",
                "$(radio-tower)",
                "$(reactions)",
                "$(references)",
                "$(refresh)",
                "$(regex)",
                "$(remote-explorer)",
                "$(remote)",
                "$(remove)",
                "$(replace-all)",
                "$(replace)",
                "$(repo-clone)",
                "$(repo-force-push)",
                "$(repo-pull)",
                "$(repo-push)",
                "$(report)",
                "$(request-changes)",
                "$(rocket)",
                "$(root-folder-opened)",
                "$(root-folder)",
                "$(rss)",
                "$(ruby)",
                "$(save-all)",
                "$(save-as)",
                "$(save)",
                "$(screen-full)",
                "$(screen-normal)",
                "$(search-stop)",
                "$(server)",
                "$(settings-gear)",
                "$(settings)",
                "$(shield)",
                "$(smiley)",
                "$(sort-precedence)",
                "$(split-horizontal)",
                "$(split-vertical)",
                "$(squirrel)",
                "$(star-full)",
                "$(star-half)",
                "$(symbol-class)",
                "$(symbol-color)",
                "$(symbol-constant)",
                "$(symbol-enum-member)",
                "$(symbol-field)",
                "$(symbol-file)",
                "$(symbol-interface)",
                "$(symbol-keyword)",
                "$(symbol-misc)",
                "$(symbol-operator)",
                "$(symbol-property)",
                "$(wrench)",
                "$(wrench-subaction)",
                "$(symbol-snippet)",
                "$(tasklist)",
                "$(telescope)",
                "$(text-size)",
                "$(three-bars)",
                "$(thumbsdown)",
                "$(thumbsup)",
                "$(tools)",
                "$(triangle-down)",
                "$(triangle-left)",
                "$(triangle-right)",
                "$(triangle-up)",
                "$(twitter)",
                "$(unfold)",
                "$(unlock)",
                "$(unmute)",
                "$(unverified)",
                "$(verified)",
                "$(versions)",
                "$(vm-active)",
                "$(vm-outline)",
                "$(vm-running)",
                "$(watch)",
                "$(whitespace)",
                "$(whole-word)",
                "$(window)",
                "$(word-wrap)",
                "$(zoom-in)",
                "$(zoom-out)",
                "$(list-filter)",
                "$(list-flat)",
                "$(list-selection)",
                "$(selection)",
                "$(list-tree)",
                "$(debug-breakpoint-function-unverified)",
                "$(debug-breakpoint-function)",
                "$(debug-breakpoint-function-disabled)",
                "$(debug-stackframe-active)",
                "$(circle-small-filled)",
                "$(debug-stackframe-dot)",
                "$(terminal-decoration-mark)",
                "$(debug-stackframe)",
                "$(debug-stackframe-focused)",
                "$(debug-breakpoint-unsupported)",
                "$(symbol-string)",
                "$(debug-reverse-continue)",
                "$(debug-step-back)",
                "$(debug-restart-frame)",
                "$(debug-alt)",
                "$(call-incoming)",
                "$(call-outgoing)",
                "$(menu)",
                "$(expand-all)",
                "$(feedback)",
                "$(git-pull-request-reviewer)",
                "$(group-by-ref-type)",
                "$(ungroup-by-ref-type)",
                "$(account)",
                "$(git-pull-request-assignee)",
                "$(bell-dot)",
                "$(debug-console)",
                "$(library)",
                "$(output)",
                "$(run-all)",
                "$(sync-ignored)",
                "$(pinned)",
                "$(github-inverted)",
                "$(server-process)",
                "$(server-environment)",
                "$(pass)",
                "$(issue-closed)",
                "$(stop-circle)",
                "$(play-circle)",
                "$(record)",
                "$(debug-alt-small)",
                "$(vm-connect)",
                "$(cloud)",
                "$(merge)",
                "$(export)",
                "$(graph-left)",
                "$(magnet)",
                "$(notebook)",
                "$(redo)",
                "$(check-all)",
                "$(pinned-dirty)",
                "$(pass-filled)",
                "$(circle-large-filled)",
                "$(circle-large)",
                "$(circle-large-outline)",
                "$(combine)",
                "$(gather)",
                "$(table)",
                "$(variable-group)",
                "$(type-hierarchy)",
                "$(type-hierarchy-sub)",
                "$(type-hierarchy-super)",
                "$(git-pull-request-create)",
                "$(run-above)",
                "$(run-below)",
                "$(notebook-template)",
                "$(debug-rerun)",
                "$(workspace-trusted)",
                "$(workspace-untrusted)",
                "$(workspace-unknown)",
                "$(terminal-cmd)",
                "$(terminal-debian)",
                "$(terminal-linux)",
                "$(terminal-powershell)",
                "$(terminal-tmux)",
                "$(terminal-ubuntu)",
                "$(terminal-bash)",
                "$(arrow-swap)",
                "$(copy)",
                "$(person-add)",
                "$(filter-filled)",
                "$(wand)",
                "$(debug-line-by-line)",
                "$(inspect)",
                "$(layers)",
                "$(layers-dot)",
                "$(layers-active)",
                "$(compass)",
                "$(compass-dot)",
                "$(compass-active)",
                "$(azure)",
                "$(issue-draft)",
                "$(git-pull-request-closed)",
                "$(git-pull-request-draft)",
                "$(debug-all)",
                "$(debug-coverage)",
                "$(run-errors)",
                "$(folder-library)",
                "$(debug-continue-small)",
                "$(beaker-stop)",
                "$(graph-line)",
                "$(graph-scatter)",
                "$(pie-chart)",
                "$(bracket)",
                "$(bracket-dot)",
                "$(bracket-error)",
                "$(lock-small)",
                "$(azure-devops)",
                "$(verified-filled)",
                "$(newline)",
                "$(layout)",
                "$(layout-activitybar-left)",
                "$(layout-activitybar-right)",
                "$(layout-panel-left)",
                "$(layout-panel-center)",
                "$(layout-panel-justify)",
                "$(layout-panel-right)",
                "$(layout-panel)",
                "$(layout-sidebar-left)",
                "$(layout-sidebar-right)",
                "$(layout-statusbar)",
                "$(layout-menubar)",
                "$(layout-centered)",
                "$(target)",
                "$(indent)",
                "$(record-small)",
                "$(error-small)",
                "$(terminal-decoration-error)",
                "$(arrow-circle-down)",
                "$(arrow-circle-left)",
                "$(arrow-circle-right)",
                "$(arrow-circle-up)",
                "$(layout-sidebar-right-off)",
                "$(layout-panel-off)",
                "$(layout-sidebar-left-off)",
                "$(blank)",
                "$(heart-filled)",
                "$(map)",
                "$(map-horizontal)",
                "$(fold-horizontal)",
                "$(map-filled)",
                "$(map-horizontal-filled)",
                "$(fold-horizontal-filled)",
                "$(circle-small)",
                "$(bell-slash)",
                "$(bell-slash-dot)",
                "$(comment-unresolved)",
                "$(git-pull-request-go-to-changes)",
                "$(git-pull-request-new-changes)",
                "$(search-fuzzy)",
                "$(comment-draft)",
                "$(send)",
                "$(sparkle)",
                "$(insert)",
                "$(mic)",
                "$(thumbsdown-filled)",
                "$(thumbsup-filled)",
                "$(coffee)",
                "$(snake)",
                "$(game)",
                "$(vr)",
                "$(chip)",
                "$(piano)",
                "$(music)",
                "$(mic-filled)",
                "$(repo-fetch)",
                "$(copilot)",
                "$(lightbulb-sparkle)",
                "$(robot)",
                "$(sparkle-filled)",
                "$(diff-single)",
                "$(diff-multiple)",
                "$(surround-with)",
                "$(share)",
                "$(git-stash)",
                "$(git-stash-apply)",
                "$(git-stash-pop)",
                "$(vscode)",
                "$(vscode-insiders)",
                "$(code-oss)",
                "$(run-coverage)",
                "$(run-all-coverage)",
                "$(coverage)",
                "$(github-project)",
                "$(map-vertical)",
                "$(fold-vertical)",
                "$(map-vertical-filled)",
                "$(fold-vertical-filled)",
                "$(go-to-search)",
                "$(percentage)",
                "$(sort-percentage)",
                "$(dialog-error)",
                "$(dialog-warning)",
                "$(dialog-info)",
                "$(dialog-close)",
                "$(tree-item-expanded)",
                "$(tree-filter-on-type-on)",
                "$(tree-filter-on-type-off)",
                "$(tree-filter-clear)",
                "$(tree-item-loading)",
                "$(menu-selection)",
                "$(menu-submenu)",
                "$(menubar-more)",
                "$(scrollbar-button-left)",
                "$(scrollbar-button-right)",
                "$(scrollbar-button-up)",
                "$(scrollbar-button-down)",
                "$(toolbar-more)",
                "$(quick-input-back)",
                "$(drop-down-button)",
                "$(symbol-customcolor)",
                "$(export)",
                "$(workspace-unspecified)",
                "$(newline)",
                "$(thumbsdown-filled)",
                "$(thumbsup-filled)",
                "$(git-fetch)",
                "$(lightbulb-sparkle-autofix)",
                "$(debug-breakpoint-pending)"
              ]
            },
            "color": {
              "description": "A theme color ID to associate with the terminal icon.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "terminal.ansiBlack",
                "terminal.ansiRed",
                "terminal.ansiGreen",
                "terminal.ansiYellow",
                "terminal.ansiBlue",
                "terminal.ansiMagenta",
                "terminal.ansiCyan",
                "terminal.ansiWhite"
              ],
              "default": null
            },
            "env": {
              "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
              "type": "object",
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "default": {}
            }
          }
        }
      ],
      "defaultSnippets": [
        {
          "body": {
            "path": "${1}",
            "icon": "${2}"
          }
        }
      ],
      "defaultDefaultValue": null,
      "scope": 3
    },
    "terminal.integrated.automationProfile.osx": {
      "restricted": true,
      "markdownDescription": "The terminal profile to use on macOS for automation-related terminal usage like tasks and debug.",
      "type": [
        "object",
        "null"
      ],
      "default": null,
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "object",
          "required": [
            "path"
          ],
          "properties": {
            "path": {
              "description": "A single path to a shell executable.",
              "type": [
                "string"
              ],
              "items": {
                "type": "string"
              }
            },
            "args": {
              "description": "An optional set of arguments to run the shell executable with.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "overrideName": {
              "description": "Whether or not to replace the dynamic terminal title that detects what program is running with the static profile name.",
              "type": "boolean"
            },
            "icon": {
              "description": "A codicon ID to associate with the terminal icon.",
              "type": "string",
              "enum": [
                "add",
                "plus",
                "gist-new",
                "repo-create",
                "lightbulb",
                "light-bulb",
                "repo",
                "repo-delete",
                "gist-fork",
                "repo-forked",
                "git-pull-request",
                "git-pull-request-abandoned",
                "record-keys",
                "keyboard",
                "tag",
                "git-pull-request-label",
                "tag-add",
                "tag-remove",
                "person",
                "person-follow",
                "person-outline",
                "person-filled",
                "git-branch",
                "git-branch-create",
                "git-branch-delete",
                "source-control",
                "mirror",
                "mirror-public",
                "star",
                "star-add",
                "star-delete",
                "star-empty",
                "comment",
                "comment-add",
                "alert",
                "warning",
                "search",
                "search-save",
                "log-out",
                "sign-out",
                "log-in",
                "sign-in",
                "eye",
                "eye-unwatch",
                "eye-watch",
                "circle-filled",
                "primitive-dot",
                "close-dirty",
                "debug-breakpoint",
                "debug-breakpoint-disabled",
                "debug-hint",
                "terminal-decoration-success",
                "primitive-square",
                "edit",
                "pencil",
                "info",
                "issue-opened",
                "gist-private",
                "git-fork-private",
                "lock",
                "mirror-private",
                "close",
                "remove-close",
                "x",
                "repo-sync",
                "sync",
                "clone",
                "desktop-download",
                "beaker",
                "microscope",
                "vm",
                "device-desktop",
                "file",
                "file-text",
                "more",
                "ellipsis",
                "kebab-horizontal",
                "mail-reply",
                "reply",
                "organization",
                "organization-filled",
                "organization-outline",
                "new-file",
                "file-add",
                "new-folder",
                "file-directory-create",
                "trash",
                "trashcan",
                "history",
                "clock",
                "folder",
                "file-directory",
                "symbol-folder",
                "logo-github",
                "mark-github",
                "github",
                "terminal",
                "console",
                "repl",
                "zap",
                "symbol-event",
                "error",
                "stop",
                "variable",
                "symbol-variable",
                "array",
                "symbol-array",
                "symbol-module",
                "symbol-package",
                "symbol-namespace",
                "symbol-object",
                "symbol-method",
                "symbol-function",
                "symbol-constructor",
                "symbol-boolean",
                "symbol-null",
                "symbol-numeric",
                "symbol-number",
                "symbol-structure",
                "symbol-struct",
                "symbol-parameter",
                "symbol-type-parameter",
                "symbol-key",
                "symbol-text",
                "symbol-reference",
                "go-to-file",
                "symbol-enum",
                "symbol-value",
                "symbol-ruler",
                "symbol-unit",
                "activate-breakpoints",
                "archive",
                "arrow-both",
                "arrow-down",
                "arrow-left",
                "arrow-right",
                "arrow-small-down",
                "arrow-small-left",
                "arrow-small-right",
                "arrow-small-up",
                "arrow-up",
                "bell",
                "bold",
                "book",
                "bookmark",
                "debug-breakpoint-conditional-unverified",
                "debug-breakpoint-conditional",
                "debug-breakpoint-conditional-disabled",
                "debug-breakpoint-data-unverified",
                "debug-breakpoint-data",
                "debug-breakpoint-data-disabled",
                "debug-breakpoint-log-unverified",
                "debug-breakpoint-log",
                "debug-breakpoint-log-disabled",
                "briefcase",
                "broadcast",
                "browser",
                "bug",
                "calendar",
                "case-sensitive",
                "check",
                "checklist",
                "chevron-down",
                "chevron-left",
                "chevron-right",
                "chevron-up",
                "chrome-close",
                "chrome-maximize",
                "chrome-minimize",
                "chrome-restore",
                "circle-outline",
                "circle",
                "debug-breakpoint-unverified",
                "terminal-decoration-incomplete",
                "circle-slash",
                "circuit-board",
                "clear-all",
                "clippy",
                "close-all",
                "cloud-download",
                "cloud-upload",
                "code",
                "collapse-all",
                "color-mode",
                "comment-discussion",
                "credit-card",
                "dash",
                "dashboard",
                "database",
                "debug-continue",
                "debug-disconnect",
                "debug-pause",
                "debug-restart",
                "debug-start",
                "debug-step-into",
                "debug-step-out",
                "debug-step-over",
                "debug-stop",
                "debug",
                "device-camera-video",
                "device-camera",
                "device-mobile",
                "diff-added",
                "diff-ignored",
                "diff-modified",
                "diff-removed",
                "diff-renamed",
                "diff",
                "diff-sidebyside",
                "discard",
                "editor-layout",
                "empty-window",
                "exclude",
                "extensions",
                "eye-closed",
                "file-binary",
                "file-code",
                "file-media",
                "file-pdf",
                "file-submodule",
                "file-symlink-directory",
                "file-symlink-file",
                "file-zip",
                "files",
                "filter",
                "flame",
                "fold-down",
                "fold-up",
                "fold",
                "folder-active",
                "folder-opened",
                "gear",
                "gift",
                "gist-secret",
                "gist",
                "git-commit",
                "git-compare",
                "compare-changes",
                "git-merge",
                "github-action",
                "github-alt",
                "globe",
                "grabber",
                "graph",
                "gripper",
                "heart",
                "home",
                "horizontal-rule",
                "hubot",
                "inbox",
                "issue-reopened",
                "issues",
                "italic",
                "jersey",
                "json",
                "kebab-vertical",
                "key",
                "law",
                "lightbulb-autofix",
                "link-external",
                "link",
                "list-ordered",
                "list-unordered",
                "live-share",
                "loading",
                "location",
                "mail-read",
                "mail",
                "markdown",
                "megaphone",
                "mention",
                "milestone",
                "git-pull-request-milestone",
                "mortar-board",
                "move",
                "multiple-windows",
                "mute",
                "no-newline",
                "note",
                "octoface",
                "open-preview",
                "package",
                "paintcan",
                "pin",
                "play",
                "run",
                "plug",
                "preserve-case",
                "preview",
                "project",
                "pulse",
                "question",
                "quote",
                "radio-tower",
                "reactions",
                "references",
                "refresh",
                "regex",
                "remote-explorer",
                "remote",
                "remove",
                "replace-all",
                "replace",
                "repo-clone",
                "repo-force-push",
                "repo-pull",
                "repo-push",
                "report",
                "request-changes",
                "rocket",
                "root-folder-opened",
                "root-folder",
                "rss",
                "ruby",
                "save-all",
                "save-as",
                "save",
                "screen-full",
                "screen-normal",
                "search-stop",
                "server",
                "settings-gear",
                "settings",
                "shield",
                "smiley",
                "sort-precedence",
                "split-horizontal",
                "split-vertical",
                "squirrel",
                "star-full",
                "star-half",
                "symbol-class",
                "symbol-color",
                "symbol-constant",
                "symbol-enum-member",
                "symbol-field",
                "symbol-file",
                "symbol-interface",
                "symbol-keyword",
                "symbol-misc",
                "symbol-operator",
                "symbol-property",
                "wrench",
                "wrench-subaction",
                "symbol-snippet",
                "tasklist",
                "telescope",
                "text-size",
                "three-bars",
                "thumbsdown",
                "thumbsup",
                "tools",
                "triangle-down",
                "triangle-left",
                "triangle-right",
                "triangle-up",
                "twitter",
                "unfold",
                "unlock",
                "unmute",
                "unverified",
                "verified",
                "versions",
                "vm-active",
                "vm-outline",
                "vm-running",
                "watch",
                "whitespace",
                "whole-word",
                "window",
                "word-wrap",
                "zoom-in",
                "zoom-out",
                "list-filter",
                "list-flat",
                "list-selection",
                "selection",
                "list-tree",
                "debug-breakpoint-function-unverified",
                "debug-breakpoint-function",
                "debug-breakpoint-function-disabled",
                "debug-stackframe-active",
                "circle-small-filled",
                "debug-stackframe-dot",
                "terminal-decoration-mark",
                "debug-stackframe",
                "debug-stackframe-focused",
                "debug-breakpoint-unsupported",
                "symbol-string",
                "debug-reverse-continue",
                "debug-step-back",
                "debug-restart-frame",
                "debug-alt",
                "call-incoming",
                "call-outgoing",
                "menu",
                "expand-all",
                "feedback",
                "git-pull-request-reviewer",
                "group-by-ref-type",
                "ungroup-by-ref-type",
                "account",
                "git-pull-request-assignee",
                "bell-dot",
                "debug-console",
                "library",
                "output",
                "run-all",
                "sync-ignored",
                "pinned",
                "github-inverted",
                "server-process",
                "server-environment",
                "pass",
                "issue-closed",
                "stop-circle",
                "play-circle",
                "record",
                "debug-alt-small",
                "vm-connect",
                "cloud",
                "merge",
                "export",
                "graph-left",
                "magnet",
                "notebook",
                "redo",
                "check-all",
                "pinned-dirty",
                "pass-filled",
                "circle-large-filled",
                "circle-large",
                "circle-large-outline",
                "combine",
                "gather",
                "table",
                "variable-group",
                "type-hierarchy",
                "type-hierarchy-sub",
                "type-hierarchy-super",
                "git-pull-request-create",
                "run-above",
                "run-below",
                "notebook-template",
                "debug-rerun",
                "workspace-trusted",
                "workspace-untrusted",
                "workspace-unknown",
                "terminal-cmd",
                "terminal-debian",
                "terminal-linux",
                "terminal-powershell",
                "terminal-tmux",
                "terminal-ubuntu",
                "terminal-bash",
                "arrow-swap",
                "copy",
                "person-add",
                "filter-filled",
                "wand",
                "debug-line-by-line",
                "inspect",
                "layers",
                "layers-dot",
                "layers-active",
                "compass",
                "compass-dot",
                "compass-active",
                "azure",
                "issue-draft",
                "git-pull-request-closed",
                "git-pull-request-draft",
                "debug-all",
                "debug-coverage",
                "run-errors",
                "folder-library",
                "debug-continue-small",
                "beaker-stop",
                "graph-line",
                "graph-scatter",
                "pie-chart",
                "bracket",
                "bracket-dot",
                "bracket-error",
                "lock-small",
                "azure-devops",
                "verified-filled",
                "newline",
                "layout",
                "layout-activitybar-left",
                "layout-activitybar-right",
                "layout-panel-left",
                "layout-panel-center",
                "layout-panel-justify",
                "layout-panel-right",
                "layout-panel",
                "layout-sidebar-left",
                "layout-sidebar-right",
                "layout-statusbar",
                "layout-menubar",
                "layout-centered",
                "target",
                "indent",
                "record-small",
                "error-small",
                "terminal-decoration-error",
                "arrow-circle-down",
                "arrow-circle-left",
                "arrow-circle-right",
                "arrow-circle-up",
                "layout-sidebar-right-off",
                "layout-panel-off",
                "layout-sidebar-left-off",
                "blank",
                "heart-filled",
                "map",
                "map-horizontal",
                "fold-horizontal",
                "map-filled",
                "map-horizontal-filled",
                "fold-horizontal-filled",
                "circle-small",
                "bell-slash",
                "bell-slash-dot",
                "comment-unresolved",
                "git-pull-request-go-to-changes",
                "git-pull-request-new-changes",
                "search-fuzzy",
                "comment-draft",
                "send",
                "sparkle",
                "insert",
                "mic",
                "thumbsdown-filled",
                "thumbsup-filled",
                "coffee",
                "snake",
                "game",
                "vr",
                "chip",
                "piano",
                "music",
                "mic-filled",
                "repo-fetch",
                "copilot",
                "lightbulb-sparkle",
                "robot",
                "sparkle-filled",
                "diff-single",
                "diff-multiple",
                "surround-with",
                "share",
                "git-stash",
                "git-stash-apply",
                "git-stash-pop",
                "vscode",
                "vscode-insiders",
                "code-oss",
                "run-coverage",
                "run-all-coverage",
                "coverage",
                "github-project",
                "map-vertical",
                "fold-vertical",
                "map-vertical-filled",
                "fold-vertical-filled",
                "go-to-search",
                "percentage",
                "sort-percentage",
                "dialog-error",
                "dialog-warning",
                "dialog-info",
                "dialog-close",
                "tree-item-expanded",
                "tree-filter-on-type-on",
                "tree-filter-on-type-off",
                "tree-filter-clear",
                "tree-item-loading",
                "menu-selection",
                "menu-submenu",
                "menubar-more",
                "scrollbar-button-left",
                "scrollbar-button-right",
                "scrollbar-button-up",
                "scrollbar-button-down",
                "toolbar-more",
                "quick-input-back",
                "drop-down-button",
                "symbol-customcolor",
                "export",
                "workspace-unspecified",
                "newline",
                "thumbsdown-filled",
                "thumbsup-filled",
                "git-fetch",
                "lightbulb-sparkle-autofix",
                "debug-breakpoint-pending"
              ],
              "markdownEnumDescriptions": [
                "$(add)",
                "$(plus)",
                "$(gist-new)",
                "$(repo-create)",
                "$(lightbulb)",
                "$(light-bulb)",
                "$(repo)",
                "$(repo-delete)",
                "$(gist-fork)",
                "$(repo-forked)",
                "$(git-pull-request)",
                "$(git-pull-request-abandoned)",
                "$(record-keys)",
                "$(keyboard)",
                "$(tag)",
                "$(git-pull-request-label)",
                "$(tag-add)",
                "$(tag-remove)",
                "$(person)",
                "$(person-follow)",
                "$(person-outline)",
                "$(person-filled)",
                "$(git-branch)",
                "$(git-branch-create)",
                "$(git-branch-delete)",
                "$(source-control)",
                "$(mirror)",
                "$(mirror-public)",
                "$(star)",
                "$(star-add)",
                "$(star-delete)",
                "$(star-empty)",
                "$(comment)",
                "$(comment-add)",
                "$(alert)",
                "$(warning)",
                "$(search)",
                "$(search-save)",
                "$(log-out)",
                "$(sign-out)",
                "$(log-in)",
                "$(sign-in)",
                "$(eye)",
                "$(eye-unwatch)",
                "$(eye-watch)",
                "$(circle-filled)",
                "$(primitive-dot)",
                "$(close-dirty)",
                "$(debug-breakpoint)",
                "$(debug-breakpoint-disabled)",
                "$(debug-hint)",
                "$(terminal-decoration-success)",
                "$(primitive-square)",
                "$(edit)",
                "$(pencil)",
                "$(info)",
                "$(issue-opened)",
                "$(gist-private)",
                "$(git-fork-private)",
                "$(lock)",
                "$(mirror-private)",
                "$(close)",
                "$(remove-close)",
                "$(x)",
                "$(repo-sync)",
                "$(sync)",
                "$(clone)",
                "$(desktop-download)",
                "$(beaker)",
                "$(microscope)",
                "$(vm)",
                "$(device-desktop)",
                "$(file)",
                "$(file-text)",
                "$(more)",
                "$(ellipsis)",
                "$(kebab-horizontal)",
                "$(mail-reply)",
                "$(reply)",
                "$(organization)",
                "$(organization-filled)",
                "$(organization-outline)",
                "$(new-file)",
                "$(file-add)",
                "$(new-folder)",
                "$(file-directory-create)",
                "$(trash)",
                "$(trashcan)",
                "$(history)",
                "$(clock)",
                "$(folder)",
                "$(file-directory)",
                "$(symbol-folder)",
                "$(logo-github)",
                "$(mark-github)",
                "$(github)",
                "$(terminal)",
                "$(console)",
                "$(repl)",
                "$(zap)",
                "$(symbol-event)",
                "$(error)",
                "$(stop)",
                "$(variable)",
                "$(symbol-variable)",
                "$(array)",
                "$(symbol-array)",
                "$(symbol-module)",
                "$(symbol-package)",
                "$(symbol-namespace)",
                "$(symbol-object)",
                "$(symbol-method)",
                "$(symbol-function)",
                "$(symbol-constructor)",
                "$(symbol-boolean)",
                "$(symbol-null)",
                "$(symbol-numeric)",
                "$(symbol-number)",
                "$(symbol-structure)",
                "$(symbol-struct)",
                "$(symbol-parameter)",
                "$(symbol-type-parameter)",
                "$(symbol-key)",
                "$(symbol-text)",
                "$(symbol-reference)",
                "$(go-to-file)",
                "$(symbol-enum)",
                "$(symbol-value)",
                "$(symbol-ruler)",
                "$(symbol-unit)",
                "$(activate-breakpoints)",
                "$(archive)",
                "$(arrow-both)",
                "$(arrow-down)",
                "$(arrow-left)",
                "$(arrow-right)",
                "$(arrow-small-down)",
                "$(arrow-small-left)",
                "$(arrow-small-right)",
                "$(arrow-small-up)",
                "$(arrow-up)",
                "$(bell)",
                "$(bold)",
                "$(book)",
                "$(bookmark)",
                "$(debug-breakpoint-conditional-unverified)",
                "$(debug-breakpoint-conditional)",
                "$(debug-breakpoint-conditional-disabled)",
                "$(debug-breakpoint-data-unverified)",
                "$(debug-breakpoint-data)",
                "$(debug-breakpoint-data-disabled)",
                "$(debug-breakpoint-log-unverified)",
                "$(debug-breakpoint-log)",
                "$(debug-breakpoint-log-disabled)",
                "$(briefcase)",
                "$(broadcast)",
                "$(browser)",
                "$(bug)",
                "$(calendar)",
                "$(case-sensitive)",
                "$(check)",
                "$(checklist)",
                "$(chevron-down)",
                "$(chevron-left)",
                "$(chevron-right)",
                "$(chevron-up)",
                "$(chrome-close)",
                "$(chrome-maximize)",
                "$(chrome-minimize)",
                "$(chrome-restore)",
                "$(circle-outline)",
                "$(circle)",
                "$(debug-breakpoint-unverified)",
                "$(terminal-decoration-incomplete)",
                "$(circle-slash)",
                "$(circuit-board)",
                "$(clear-all)",
                "$(clippy)",
                "$(close-all)",
                "$(cloud-download)",
                "$(cloud-upload)",
                "$(code)",
                "$(collapse-all)",
                "$(color-mode)",
                "$(comment-discussion)",
                "$(credit-card)",
                "$(dash)",
                "$(dashboard)",
                "$(database)",
                "$(debug-continue)",
                "$(debug-disconnect)",
                "$(debug-pause)",
                "$(debug-restart)",
                "$(debug-start)",
                "$(debug-step-into)",
                "$(debug-step-out)",
                "$(debug-step-over)",
                "$(debug-stop)",
                "$(debug)",
                "$(device-camera-video)",
                "$(device-camera)",
                "$(device-mobile)",
                "$(diff-added)",
                "$(diff-ignored)",
                "$(diff-modified)",
                "$(diff-removed)",
                "$(diff-renamed)",
                "$(diff)",
                "$(diff-sidebyside)",
                "$(discard)",
                "$(editor-layout)",
                "$(empty-window)",
                "$(exclude)",
                "$(extensions)",
                "$(eye-closed)",
                "$(file-binary)",
                "$(file-code)",
                "$(file-media)",
                "$(file-pdf)",
                "$(file-submodule)",
                "$(file-symlink-directory)",
                "$(file-symlink-file)",
                "$(file-zip)",
                "$(files)",
                "$(filter)",
                "$(flame)",
                "$(fold-down)",
                "$(fold-up)",
                "$(fold)",
                "$(folder-active)",
                "$(folder-opened)",
                "$(gear)",
                "$(gift)",
                "$(gist-secret)",
                "$(gist)",
                "$(git-commit)",
                "$(git-compare)",
                "$(compare-changes)",
                "$(git-merge)",
                "$(github-action)",
                "$(github-alt)",
                "$(globe)",
                "$(grabber)",
                "$(graph)",
                "$(gripper)",
                "$(heart)",
                "$(home)",
                "$(horizontal-rule)",
                "$(hubot)",
                "$(inbox)",
                "$(issue-reopened)",
                "$(issues)",
                "$(italic)",
                "$(jersey)",
                "$(json)",
                "$(kebab-vertical)",
                "$(key)",
                "$(law)",
                "$(lightbulb-autofix)",
                "$(link-external)",
                "$(link)",
                "$(list-ordered)",
                "$(list-unordered)",
                "$(live-share)",
                "$(loading)",
                "$(location)",
                "$(mail-read)",
                "$(mail)",
                "$(markdown)",
                "$(megaphone)",
                "$(mention)",
                "$(milestone)",
                "$(git-pull-request-milestone)",
                "$(mortar-board)",
                "$(move)",
                "$(multiple-windows)",
                "$(mute)",
                "$(no-newline)",
                "$(note)",
                "$(octoface)",
                "$(open-preview)",
                "$(package)",
                "$(paintcan)",
                "$(pin)",
                "$(play)",
                "$(run)",
                "$(plug)",
                "$(preserve-case)",
                "$(preview)",
                "$(project)",
                "$(pulse)",
                "$(question)",
                "$(quote)",
                "$(radio-tower)",
                "$(reactions)",
                "$(references)",
                "$(refresh)",
                "$(regex)",
                "$(remote-explorer)",
                "$(remote)",
                "$(remove)",
                "$(replace-all)",
                "$(replace)",
                "$(repo-clone)",
                "$(repo-force-push)",
                "$(repo-pull)",
                "$(repo-push)",
                "$(report)",
                "$(request-changes)",
                "$(rocket)",
                "$(root-folder-opened)",
                "$(root-folder)",
                "$(rss)",
                "$(ruby)",
                "$(save-all)",
                "$(save-as)",
                "$(save)",
                "$(screen-full)",
                "$(screen-normal)",
                "$(search-stop)",
                "$(server)",
                "$(settings-gear)",
                "$(settings)",
                "$(shield)",
                "$(smiley)",
                "$(sort-precedence)",
                "$(split-horizontal)",
                "$(split-vertical)",
                "$(squirrel)",
                "$(star-full)",
                "$(star-half)",
                "$(symbol-class)",
                "$(symbol-color)",
                "$(symbol-constant)",
                "$(symbol-enum-member)",
                "$(symbol-field)",
                "$(symbol-file)",
                "$(symbol-interface)",
                "$(symbol-keyword)",
                "$(symbol-misc)",
                "$(symbol-operator)",
                "$(symbol-property)",
                "$(wrench)",
                "$(wrench-subaction)",
                "$(symbol-snippet)",
                "$(tasklist)",
                "$(telescope)",
                "$(text-size)",
                "$(three-bars)",
                "$(thumbsdown)",
                "$(thumbsup)",
                "$(tools)",
                "$(triangle-down)",
                "$(triangle-left)",
                "$(triangle-right)",
                "$(triangle-up)",
                "$(twitter)",
                "$(unfold)",
                "$(unlock)",
                "$(unmute)",
                "$(unverified)",
                "$(verified)",
                "$(versions)",
                "$(vm-active)",
                "$(vm-outline)",
                "$(vm-running)",
                "$(watch)",
                "$(whitespace)",
                "$(whole-word)",
                "$(window)",
                "$(word-wrap)",
                "$(zoom-in)",
                "$(zoom-out)",
                "$(list-filter)",
                "$(list-flat)",
                "$(list-selection)",
                "$(selection)",
                "$(list-tree)",
                "$(debug-breakpoint-function-unverified)",
                "$(debug-breakpoint-function)",
                "$(debug-breakpoint-function-disabled)",
                "$(debug-stackframe-active)",
                "$(circle-small-filled)",
                "$(debug-stackframe-dot)",
                "$(terminal-decoration-mark)",
                "$(debug-stackframe)",
                "$(debug-stackframe-focused)",
                "$(debug-breakpoint-unsupported)",
                "$(symbol-string)",
                "$(debug-reverse-continue)",
                "$(debug-step-back)",
                "$(debug-restart-frame)",
                "$(debug-alt)",
                "$(call-incoming)",
                "$(call-outgoing)",
                "$(menu)",
                "$(expand-all)",
                "$(feedback)",
                "$(git-pull-request-reviewer)",
                "$(group-by-ref-type)",
                "$(ungroup-by-ref-type)",
                "$(account)",
                "$(git-pull-request-assignee)",
                "$(bell-dot)",
                "$(debug-console)",
                "$(library)",
                "$(output)",
                "$(run-all)",
                "$(sync-ignored)",
                "$(pinned)",
                "$(github-inverted)",
                "$(server-process)",
                "$(server-environment)",
                "$(pass)",
                "$(issue-closed)",
                "$(stop-circle)",
                "$(play-circle)",
                "$(record)",
                "$(debug-alt-small)",
                "$(vm-connect)",
                "$(cloud)",
                "$(merge)",
                "$(export)",
                "$(graph-left)",
                "$(magnet)",
                "$(notebook)",
                "$(redo)",
                "$(check-all)",
                "$(pinned-dirty)",
                "$(pass-filled)",
                "$(circle-large-filled)",
                "$(circle-large)",
                "$(circle-large-outline)",
                "$(combine)",
                "$(gather)",
                "$(table)",
                "$(variable-group)",
                "$(type-hierarchy)",
                "$(type-hierarchy-sub)",
                "$(type-hierarchy-super)",
                "$(git-pull-request-create)",
                "$(run-above)",
                "$(run-below)",
                "$(notebook-template)",
                "$(debug-rerun)",
                "$(workspace-trusted)",
                "$(workspace-untrusted)",
                "$(workspace-unknown)",
                "$(terminal-cmd)",
                "$(terminal-debian)",
                "$(terminal-linux)",
                "$(terminal-powershell)",
                "$(terminal-tmux)",
                "$(terminal-ubuntu)",
                "$(terminal-bash)",
                "$(arrow-swap)",
                "$(copy)",
                "$(person-add)",
                "$(filter-filled)",
                "$(wand)",
                "$(debug-line-by-line)",
                "$(inspect)",
                "$(layers)",
                "$(layers-dot)",
                "$(layers-active)",
                "$(compass)",
                "$(compass-dot)",
                "$(compass-active)",
                "$(azure)",
                "$(issue-draft)",
                "$(git-pull-request-closed)",
                "$(git-pull-request-draft)",
                "$(debug-all)",
                "$(debug-coverage)",
                "$(run-errors)",
                "$(folder-library)",
                "$(debug-continue-small)",
                "$(beaker-stop)",
                "$(graph-line)",
                "$(graph-scatter)",
                "$(pie-chart)",
                "$(bracket)",
                "$(bracket-dot)",
                "$(bracket-error)",
                "$(lock-small)",
                "$(azure-devops)",
                "$(verified-filled)",
                "$(newline)",
                "$(layout)",
                "$(layout-activitybar-left)",
                "$(layout-activitybar-right)",
                "$(layout-panel-left)",
                "$(layout-panel-center)",
                "$(layout-panel-justify)",
                "$(layout-panel-right)",
                "$(layout-panel)",
                "$(layout-sidebar-left)",
                "$(layout-sidebar-right)",
                "$(layout-statusbar)",
                "$(layout-menubar)",
                "$(layout-centered)",
                "$(target)",
                "$(indent)",
                "$(record-small)",
                "$(error-small)",
                "$(terminal-decoration-error)",
                "$(arrow-circle-down)",
                "$(arrow-circle-left)",
                "$(arrow-circle-right)",
                "$(arrow-circle-up)",
                "$(layout-sidebar-right-off)",
                "$(layout-panel-off)",
                "$(layout-sidebar-left-off)",
                "$(blank)",
                "$(heart-filled)",
                "$(map)",
                "$(map-horizontal)",
                "$(fold-horizontal)",
                "$(map-filled)",
                "$(map-horizontal-filled)",
                "$(fold-horizontal-filled)",
                "$(circle-small)",
                "$(bell-slash)",
                "$(bell-slash-dot)",
                "$(comment-unresolved)",
                "$(git-pull-request-go-to-changes)",
                "$(git-pull-request-new-changes)",
                "$(search-fuzzy)",
                "$(comment-draft)",
                "$(send)",
                "$(sparkle)",
                "$(insert)",
                "$(mic)",
                "$(thumbsdown-filled)",
                "$(thumbsup-filled)",
                "$(coffee)",
                "$(snake)",
                "$(game)",
                "$(vr)",
                "$(chip)",
                "$(piano)",
                "$(music)",
                "$(mic-filled)",
                "$(repo-fetch)",
                "$(copilot)",
                "$(lightbulb-sparkle)",
                "$(robot)",
                "$(sparkle-filled)",
                "$(diff-single)",
                "$(diff-multiple)",
                "$(surround-with)",
                "$(share)",
                "$(git-stash)",
                "$(git-stash-apply)",
                "$(git-stash-pop)",
                "$(vscode)",
                "$(vscode-insiders)",
                "$(code-oss)",
                "$(run-coverage)",
                "$(run-all-coverage)",
                "$(coverage)",
                "$(github-project)",
                "$(map-vertical)",
                "$(fold-vertical)",
                "$(map-vertical-filled)",
                "$(fold-vertical-filled)",
                "$(go-to-search)",
                "$(percentage)",
                "$(sort-percentage)",
                "$(dialog-error)",
                "$(dialog-warning)",
                "$(dialog-info)",
                "$(dialog-close)",
                "$(tree-item-expanded)",
                "$(tree-filter-on-type-on)",
                "$(tree-filter-on-type-off)",
                "$(tree-filter-clear)",
                "$(tree-item-loading)",
                "$(menu-selection)",
                "$(menu-submenu)",
                "$(menubar-more)",
                "$(scrollbar-button-left)",
                "$(scrollbar-button-right)",
                "$(scrollbar-button-up)",
                "$(scrollbar-button-down)",
                "$(toolbar-more)",
                "$(quick-input-back)",
                "$(drop-down-button)",
                "$(symbol-customcolor)",
                "$(export)",
                "$(workspace-unspecified)",
                "$(newline)",
                "$(thumbsdown-filled)",
                "$(thumbsup-filled)",
                "$(git-fetch)",
                "$(lightbulb-sparkle-autofix)",
                "$(debug-breakpoint-pending)"
              ]
            },
            "color": {
              "description": "A theme color ID to associate with the terminal icon.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "terminal.ansiBlack",
                "terminal.ansiRed",
                "terminal.ansiGreen",
                "terminal.ansiYellow",
                "terminal.ansiBlue",
                "terminal.ansiMagenta",
                "terminal.ansiCyan",
                "terminal.ansiWhite"
              ],
              "default": null
            },
            "env": {
              "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
              "type": "object",
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "default": {}
            }
          }
        }
      ],
      "defaultSnippets": [
        {
          "body": {
            "path": "${1}",
            "icon": "${2}"
          }
        }
      ],
      "defaultDefaultValue": null,
      "scope": 3
    },
    "terminal.integrated.automationProfile.windows": {
      "restricted": true,
      "markdownDescription": "The terminal profile to use for automation-related terminal usage like tasks and debug. This setting will currently be ignored if `terminal.integrated.automationShell.windows` (now deprecated) is set.",
      "type": [
        "object",
        "null"
      ],
      "default": null,
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "object",
          "required": [
            "path"
          ],
          "properties": {
            "path": {
              "description": "A single path to a shell executable.",
              "type": [
                "string"
              ],
              "items": {
                "type": "string"
              }
            },
            "args": {
              "description": "An optional set of arguments to run the shell executable with.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "overrideName": {
              "description": "Whether or not to replace the dynamic terminal title that detects what program is running with the static profile name.",
              "type": "boolean"
            },
            "icon": {
              "description": "A codicon ID to associate with the terminal icon.",
              "type": "string",
              "enum": [
                "add",
                "plus",
                "gist-new",
                "repo-create",
                "lightbulb",
                "light-bulb",
                "repo",
                "repo-delete",
                "gist-fork",
                "repo-forked",
                "git-pull-request",
                "git-pull-request-abandoned",
                "record-keys",
                "keyboard",
                "tag",
                "git-pull-request-label",
                "tag-add",
                "tag-remove",
                "person",
                "person-follow",
                "person-outline",
                "person-filled",
                "git-branch",
                "git-branch-create",
                "git-branch-delete",
                "source-control",
                "mirror",
                "mirror-public",
                "star",
                "star-add",
                "star-delete",
                "star-empty",
                "comment",
                "comment-add",
                "alert",
                "warning",
                "search",
                "search-save",
                "log-out",
                "sign-out",
                "log-in",
                "sign-in",
                "eye",
                "eye-unwatch",
                "eye-watch",
                "circle-filled",
                "primitive-dot",
                "close-dirty",
                "debug-breakpoint",
                "debug-breakpoint-disabled",
                "debug-hint",
                "terminal-decoration-success",
                "primitive-square",
                "edit",
                "pencil",
                "info",
                "issue-opened",
                "gist-private",
                "git-fork-private",
                "lock",
                "mirror-private",
                "close",
                "remove-close",
                "x",
                "repo-sync",
                "sync",
                "clone",
                "desktop-download",
                "beaker",
                "microscope",
                "vm",
                "device-desktop",
                "file",
                "file-text",
                "more",
                "ellipsis",
                "kebab-horizontal",
                "mail-reply",
                "reply",
                "organization",
                "organization-filled",
                "organization-outline",
                "new-file",
                "file-add",
                "new-folder",
                "file-directory-create",
                "trash",
                "trashcan",
                "history",
                "clock",
                "folder",
                "file-directory",
                "symbol-folder",
                "logo-github",
                "mark-github",
                "github",
                "terminal",
                "console",
                "repl",
                "zap",
                "symbol-event",
                "error",
                "stop",
                "variable",
                "symbol-variable",
                "array",
                "symbol-array",
                "symbol-module",
                "symbol-package",
                "symbol-namespace",
                "symbol-object",
                "symbol-method",
                "symbol-function",
                "symbol-constructor",
                "symbol-boolean",
                "symbol-null",
                "symbol-numeric",
                "symbol-number",
                "symbol-structure",
                "symbol-struct",
                "symbol-parameter",
                "symbol-type-parameter",
                "symbol-key",
                "symbol-text",
                "symbol-reference",
                "go-to-file",
                "symbol-enum",
                "symbol-value",
                "symbol-ruler",
                "symbol-unit",
                "activate-breakpoints",
                "archive",
                "arrow-both",
                "arrow-down",
                "arrow-left",
                "arrow-right",
                "arrow-small-down",
                "arrow-small-left",
                "arrow-small-right",
                "arrow-small-up",
                "arrow-up",
                "bell",
                "bold",
                "book",
                "bookmark",
                "debug-breakpoint-conditional-unverified",
                "debug-breakpoint-conditional",
                "debug-breakpoint-conditional-disabled",
                "debug-breakpoint-data-unverified",
                "debug-breakpoint-data",
                "debug-breakpoint-data-disabled",
                "debug-breakpoint-log-unverified",
                "debug-breakpoint-log",
                "debug-breakpoint-log-disabled",
                "briefcase",
                "broadcast",
                "browser",
                "bug",
                "calendar",
                "case-sensitive",
                "check",
                "checklist",
                "chevron-down",
                "chevron-left",
                "chevron-right",
                "chevron-up",
                "chrome-close",
                "chrome-maximize",
                "chrome-minimize",
                "chrome-restore",
                "circle-outline",
                "circle",
                "debug-breakpoint-unverified",
                "terminal-decoration-incomplete",
                "circle-slash",
                "circuit-board",
                "clear-all",
                "clippy",
                "close-all",
                "cloud-download",
                "cloud-upload",
                "code",
                "collapse-all",
                "color-mode",
                "comment-discussion",
                "credit-card",
                "dash",
                "dashboard",
                "database",
                "debug-continue",
                "debug-disconnect",
                "debug-pause",
                "debug-restart",
                "debug-start",
                "debug-step-into",
                "debug-step-out",
                "debug-step-over",
                "debug-stop",
                "debug",
                "device-camera-video",
                "device-camera",
                "device-mobile",
                "diff-added",
                "diff-ignored",
                "diff-modified",
                "diff-removed",
                "diff-renamed",
                "diff",
                "diff-sidebyside",
                "discard",
                "editor-layout",
                "empty-window",
                "exclude",
                "extensions",
                "eye-closed",
                "file-binary",
                "file-code",
                "file-media",
                "file-pdf",
                "file-submodule",
                "file-symlink-directory",
                "file-symlink-file",
                "file-zip",
                "files",
                "filter",
                "flame",
                "fold-down",
                "fold-up",
                "fold",
                "folder-active",
                "folder-opened",
                "gear",
                "gift",
                "gist-secret",
                "gist",
                "git-commit",
                "git-compare",
                "compare-changes",
                "git-merge",
                "github-action",
                "github-alt",
                "globe",
                "grabber",
                "graph",
                "gripper",
                "heart",
                "home",
                "horizontal-rule",
                "hubot",
                "inbox",
                "issue-reopened",
                "issues",
                "italic",
                "jersey",
                "json",
                "kebab-vertical",
                "key",
                "law",
                "lightbulb-autofix",
                "link-external",
                "link",
                "list-ordered",
                "list-unordered",
                "live-share",
                "loading",
                "location",
                "mail-read",
                "mail",
                "markdown",
                "megaphone",
                "mention",
                "milestone",
                "git-pull-request-milestone",
                "mortar-board",
                "move",
                "multiple-windows",
                "mute",
                "no-newline",
                "note",
                "octoface",
                "open-preview",
                "package",
                "paintcan",
                "pin",
                "play",
                "run",
                "plug",
                "preserve-case",
                "preview",
                "project",
                "pulse",
                "question",
                "quote",
                "radio-tower",
                "reactions",
                "references",
                "refresh",
                "regex",
                "remote-explorer",
                "remote",
                "remove",
                "replace-all",
                "replace",
                "repo-clone",
                "repo-force-push",
                "repo-pull",
                "repo-push",
                "report",
                "request-changes",
                "rocket",
                "root-folder-opened",
                "root-folder",
                "rss",
                "ruby",
                "save-all",
                "save-as",
                "save",
                "screen-full",
                "screen-normal",
                "search-stop",
                "server",
                "settings-gear",
                "settings",
                "shield",
                "smiley",
                "sort-precedence",
                "split-horizontal",
                "split-vertical",
                "squirrel",
                "star-full",
                "star-half",
                "symbol-class",
                "symbol-color",
                "symbol-constant",
                "symbol-enum-member",
                "symbol-field",
                "symbol-file",
                "symbol-interface",
                "symbol-keyword",
                "symbol-misc",
                "symbol-operator",
                "symbol-property",
                "wrench",
                "wrench-subaction",
                "symbol-snippet",
                "tasklist",
                "telescope",
                "text-size",
                "three-bars",
                "thumbsdown",
                "thumbsup",
                "tools",
                "triangle-down",
                "triangle-left",
                "triangle-right",
                "triangle-up",
                "twitter",
                "unfold",
                "unlock",
                "unmute",
                "unverified",
                "verified",
                "versions",
                "vm-active",
                "vm-outline",
                "vm-running",
                "watch",
                "whitespace",
                "whole-word",
                "window",
                "word-wrap",
                "zoom-in",
                "zoom-out",
                "list-filter",
                "list-flat",
                "list-selection",
                "selection",
                "list-tree",
                "debug-breakpoint-function-unverified",
                "debug-breakpoint-function",
                "debug-breakpoint-function-disabled",
                "debug-stackframe-active",
                "circle-small-filled",
                "debug-stackframe-dot",
                "terminal-decoration-mark",
                "debug-stackframe",
                "debug-stackframe-focused",
                "debug-breakpoint-unsupported",
                "symbol-string",
                "debug-reverse-continue",
                "debug-step-back",
                "debug-restart-frame",
                "debug-alt",
                "call-incoming",
                "call-outgoing",
                "menu",
                "expand-all",
                "feedback",
                "git-pull-request-reviewer",
                "group-by-ref-type",
                "ungroup-by-ref-type",
                "account",
                "git-pull-request-assignee",
                "bell-dot",
                "debug-console",
                "library",
                "output",
                "run-all",
                "sync-ignored",
                "pinned",
                "github-inverted",
                "server-process",
                "server-environment",
                "pass",
                "issue-closed",
                "stop-circle",
                "play-circle",
                "record",
                "debug-alt-small",
                "vm-connect",
                "cloud",
                "merge",
                "export",
                "graph-left",
                "magnet",
                "notebook",
                "redo",
                "check-all",
                "pinned-dirty",
                "pass-filled",
                "circle-large-filled",
                "circle-large",
                "circle-large-outline",
                "combine",
                "gather",
                "table",
                "variable-group",
                "type-hierarchy",
                "type-hierarchy-sub",
                "type-hierarchy-super",
                "git-pull-request-create",
                "run-above",
                "run-below",
                "notebook-template",
                "debug-rerun",
                "workspace-trusted",
                "workspace-untrusted",
                "workspace-unknown",
                "terminal-cmd",
                "terminal-debian",
                "terminal-linux",
                "terminal-powershell",
                "terminal-tmux",
                "terminal-ubuntu",
                "terminal-bash",
                "arrow-swap",
                "copy",
                "person-add",
                "filter-filled",
                "wand",
                "debug-line-by-line",
                "inspect",
                "layers",
                "layers-dot",
                "layers-active",
                "compass",
                "compass-dot",
                "compass-active",
                "azure",
                "issue-draft",
                "git-pull-request-closed",
                "git-pull-request-draft",
                "debug-all",
                "debug-coverage",
                "run-errors",
                "folder-library",
                "debug-continue-small",
                "beaker-stop",
                "graph-line",
                "graph-scatter",
                "pie-chart",
                "bracket",
                "bracket-dot",
                "bracket-error",
                "lock-small",
                "azure-devops",
                "verified-filled",
                "newline",
                "layout",
                "layout-activitybar-left",
                "layout-activitybar-right",
                "layout-panel-left",
                "layout-panel-center",
                "layout-panel-justify",
                "layout-panel-right",
                "layout-panel",
                "layout-sidebar-left",
                "layout-sidebar-right",
                "layout-statusbar",
                "layout-menubar",
                "layout-centered",
                "target",
                "indent",
                "record-small",
                "error-small",
                "terminal-decoration-error",
                "arrow-circle-down",
                "arrow-circle-left",
                "arrow-circle-right",
                "arrow-circle-up",
                "layout-sidebar-right-off",
                "layout-panel-off",
                "layout-sidebar-left-off",
                "blank",
                "heart-filled",
                "map",
                "map-horizontal",
                "fold-horizontal",
                "map-filled",
                "map-horizontal-filled",
                "fold-horizontal-filled",
                "circle-small",
                "bell-slash",
                "bell-slash-dot",
                "comment-unresolved",
                "git-pull-request-go-to-changes",
                "git-pull-request-new-changes",
                "search-fuzzy",
                "comment-draft",
                "send",
                "sparkle",
                "insert",
                "mic",
                "thumbsdown-filled",
                "thumbsup-filled",
                "coffee",
                "snake",
                "game",
                "vr",
                "chip",
                "piano",
                "music",
                "mic-filled",
                "repo-fetch",
                "copilot",
                "lightbulb-sparkle",
                "robot",
                "sparkle-filled",
                "diff-single",
                "diff-multiple",
                "surround-with",
                "share",
                "git-stash",
                "git-stash-apply",
                "git-stash-pop",
                "vscode",
                "vscode-insiders",
                "code-oss",
                "run-coverage",
                "run-all-coverage",
                "coverage",
                "github-project",
                "map-vertical",
                "fold-vertical",
                "map-vertical-filled",
                "fold-vertical-filled",
                "go-to-search",
                "percentage",
                "sort-percentage",
                "dialog-error",
                "dialog-warning",
                "dialog-info",
                "dialog-close",
                "tree-item-expanded",
                "tree-filter-on-type-on",
                "tree-filter-on-type-off",
                "tree-filter-clear",
                "tree-item-loading",
                "menu-selection",
                "menu-submenu",
                "menubar-more",
                "scrollbar-button-left",
                "scrollbar-button-right",
                "scrollbar-button-up",
                "scrollbar-button-down",
                "toolbar-more",
                "quick-input-back",
                "drop-down-button",
                "symbol-customcolor",
                "export",
                "workspace-unspecified",
                "newline",
                "thumbsdown-filled",
                "thumbsup-filled",
                "git-fetch",
                "lightbulb-sparkle-autofix",
                "debug-breakpoint-pending"
              ],
              "markdownEnumDescriptions": [
                "$(add)",
                "$(plus)",
                "$(gist-new)",
                "$(repo-create)",
                "$(lightbulb)",
                "$(light-bulb)",
                "$(repo)",
                "$(repo-delete)",
                "$(gist-fork)",
                "$(repo-forked)",
                "$(git-pull-request)",
                "$(git-pull-request-abandoned)",
                "$(record-keys)",
                "$(keyboard)",
                "$(tag)",
                "$(git-pull-request-label)",
                "$(tag-add)",
                "$(tag-remove)",
                "$(person)",
                "$(person-follow)",
                "$(person-outline)",
                "$(person-filled)",
                "$(git-branch)",
                "$(git-branch-create)",
                "$(git-branch-delete)",
                "$(source-control)",
                "$(mirror)",
                "$(mirror-public)",
                "$(star)",
                "$(star-add)",
                "$(star-delete)",
                "$(star-empty)",
                "$(comment)",
                "$(comment-add)",
                "$(alert)",
                "$(warning)",
                "$(search)",
                "$(search-save)",
                "$(log-out)",
                "$(sign-out)",
                "$(log-in)",
                "$(sign-in)",
                "$(eye)",
                "$(eye-unwatch)",
                "$(eye-watch)",
                "$(circle-filled)",
                "$(primitive-dot)",
                "$(close-dirty)",
                "$(debug-breakpoint)",
                "$(debug-breakpoint-disabled)",
                "$(debug-hint)",
                "$(terminal-decoration-success)",
                "$(primitive-square)",
                "$(edit)",
                "$(pencil)",
                "$(info)",
                "$(issue-opened)",
                "$(gist-private)",
                "$(git-fork-private)",
                "$(lock)",
                "$(mirror-private)",
                "$(close)",
                "$(remove-close)",
                "$(x)",
                "$(repo-sync)",
                "$(sync)",
                "$(clone)",
                "$(desktop-download)",
                "$(beaker)",
                "$(microscope)",
                "$(vm)",
                "$(device-desktop)",
                "$(file)",
                "$(file-text)",
                "$(more)",
                "$(ellipsis)",
                "$(kebab-horizontal)",
                "$(mail-reply)",
                "$(reply)",
                "$(organization)",
                "$(organization-filled)",
                "$(organization-outline)",
                "$(new-file)",
                "$(file-add)",
                "$(new-folder)",
                "$(file-directory-create)",
                "$(trash)",
                "$(trashcan)",
                "$(history)",
                "$(clock)",
                "$(folder)",
                "$(file-directory)",
                "$(symbol-folder)",
                "$(logo-github)",
                "$(mark-github)",
                "$(github)",
                "$(terminal)",
                "$(console)",
                "$(repl)",
                "$(zap)",
                "$(symbol-event)",
                "$(error)",
                "$(stop)",
                "$(variable)",
                "$(symbol-variable)",
                "$(array)",
                "$(symbol-array)",
                "$(symbol-module)",
                "$(symbol-package)",
                "$(symbol-namespace)",
                "$(symbol-object)",
                "$(symbol-method)",
                "$(symbol-function)",
                "$(symbol-constructor)",
                "$(symbol-boolean)",
                "$(symbol-null)",
                "$(symbol-numeric)",
                "$(symbol-number)",
                "$(symbol-structure)",
                "$(symbol-struct)",
                "$(symbol-parameter)",
                "$(symbol-type-parameter)",
                "$(symbol-key)",
                "$(symbol-text)",
                "$(symbol-reference)",
                "$(go-to-file)",
                "$(symbol-enum)",
                "$(symbol-value)",
                "$(symbol-ruler)",
                "$(symbol-unit)",
                "$(activate-breakpoints)",
                "$(archive)",
                "$(arrow-both)",
                "$(arrow-down)",
                "$(arrow-left)",
                "$(arrow-right)",
                "$(arrow-small-down)",
                "$(arrow-small-left)",
                "$(arrow-small-right)",
                "$(arrow-small-up)",
                "$(arrow-up)",
                "$(bell)",
                "$(bold)",
                "$(book)",
                "$(bookmark)",
                "$(debug-breakpoint-conditional-unverified)",
                "$(debug-breakpoint-conditional)",
                "$(debug-breakpoint-conditional-disabled)",
                "$(debug-breakpoint-data-unverified)",
                "$(debug-breakpoint-data)",
                "$(debug-breakpoint-data-disabled)",
                "$(debug-breakpoint-log-unverified)",
                "$(debug-breakpoint-log)",
                "$(debug-breakpoint-log-disabled)",
                "$(briefcase)",
                "$(broadcast)",
                "$(browser)",
                "$(bug)",
                "$(calendar)",
                "$(case-sensitive)",
                "$(check)",
                "$(checklist)",
                "$(chevron-down)",
                "$(chevron-left)",
                "$(chevron-right)",
                "$(chevron-up)",
                "$(chrome-close)",
                "$(chrome-maximize)",
                "$(chrome-minimize)",
                "$(chrome-restore)",
                "$(circle-outline)",
                "$(circle)",
                "$(debug-breakpoint-unverified)",
                "$(terminal-decoration-incomplete)",
                "$(circle-slash)",
                "$(circuit-board)",
                "$(clear-all)",
                "$(clippy)",
                "$(close-all)",
                "$(cloud-download)",
                "$(cloud-upload)",
                "$(code)",
                "$(collapse-all)",
                "$(color-mode)",
                "$(comment-discussion)",
                "$(credit-card)",
                "$(dash)",
                "$(dashboard)",
                "$(database)",
                "$(debug-continue)",
                "$(debug-disconnect)",
                "$(debug-pause)",
                "$(debug-restart)",
                "$(debug-start)",
                "$(debug-step-into)",
                "$(debug-step-out)",
                "$(debug-step-over)",
                "$(debug-stop)",
                "$(debug)",
                "$(device-camera-video)",
                "$(device-camera)",
                "$(device-mobile)",
                "$(diff-added)",
                "$(diff-ignored)",
                "$(diff-modified)",
                "$(diff-removed)",
                "$(diff-renamed)",
                "$(diff)",
                "$(diff-sidebyside)",
                "$(discard)",
                "$(editor-layout)",
                "$(empty-window)",
                "$(exclude)",
                "$(extensions)",
                "$(eye-closed)",
                "$(file-binary)",
                "$(file-code)",
                "$(file-media)",
                "$(file-pdf)",
                "$(file-submodule)",
                "$(file-symlink-directory)",
                "$(file-symlink-file)",
                "$(file-zip)",
                "$(files)",
                "$(filter)",
                "$(flame)",
                "$(fold-down)",
                "$(fold-up)",
                "$(fold)",
                "$(folder-active)",
                "$(folder-opened)",
                "$(gear)",
                "$(gift)",
                "$(gist-secret)",
                "$(gist)",
                "$(git-commit)",
                "$(git-compare)",
                "$(compare-changes)",
                "$(git-merge)",
                "$(github-action)",
                "$(github-alt)",
                "$(globe)",
                "$(grabber)",
                "$(graph)",
                "$(gripper)",
                "$(heart)",
                "$(home)",
                "$(horizontal-rule)",
                "$(hubot)",
                "$(inbox)",
                "$(issue-reopened)",
                "$(issues)",
                "$(italic)",
                "$(jersey)",
                "$(json)",
                "$(kebab-vertical)",
                "$(key)",
                "$(law)",
                "$(lightbulb-autofix)",
                "$(link-external)",
                "$(link)",
                "$(list-ordered)",
                "$(list-unordered)",
                "$(live-share)",
                "$(loading)",
                "$(location)",
                "$(mail-read)",
                "$(mail)",
                "$(markdown)",
                "$(megaphone)",
                "$(mention)",
                "$(milestone)",
                "$(git-pull-request-milestone)",
                "$(mortar-board)",
                "$(move)",
                "$(multiple-windows)",
                "$(mute)",
                "$(no-newline)",
                "$(note)",
                "$(octoface)",
                "$(open-preview)",
                "$(package)",
                "$(paintcan)",
                "$(pin)",
                "$(play)",
                "$(run)",
                "$(plug)",
                "$(preserve-case)",
                "$(preview)",
                "$(project)",
                "$(pulse)",
                "$(question)",
                "$(quote)",
                "$(radio-tower)",
                "$(reactions)",
                "$(references)",
                "$(refresh)",
                "$(regex)",
                "$(remote-explorer)",
                "$(remote)",
                "$(remove)",
                "$(replace-all)",
                "$(replace)",
                "$(repo-clone)",
                "$(repo-force-push)",
                "$(repo-pull)",
                "$(repo-push)",
                "$(report)",
                "$(request-changes)",
                "$(rocket)",
                "$(root-folder-opened)",
                "$(root-folder)",
                "$(rss)",
                "$(ruby)",
                "$(save-all)",
                "$(save-as)",
                "$(save)",
                "$(screen-full)",
                "$(screen-normal)",
                "$(search-stop)",
                "$(server)",
                "$(settings-gear)",
                "$(settings)",
                "$(shield)",
                "$(smiley)",
                "$(sort-precedence)",
                "$(split-horizontal)",
                "$(split-vertical)",
                "$(squirrel)",
                "$(star-full)",
                "$(star-half)",
                "$(symbol-class)",
                "$(symbol-color)",
                "$(symbol-constant)",
                "$(symbol-enum-member)",
                "$(symbol-field)",
                "$(symbol-file)",
                "$(symbol-interface)",
                "$(symbol-keyword)",
                "$(symbol-misc)",
                "$(symbol-operator)",
                "$(symbol-property)",
                "$(wrench)",
                "$(wrench-subaction)",
                "$(symbol-snippet)",
                "$(tasklist)",
                "$(telescope)",
                "$(text-size)",
                "$(three-bars)",
                "$(thumbsdown)",
                "$(thumbsup)",
                "$(tools)",
                "$(triangle-down)",
                "$(triangle-left)",
                "$(triangle-right)",
                "$(triangle-up)",
                "$(twitter)",
                "$(unfold)",
                "$(unlock)",
                "$(unmute)",
                "$(unverified)",
                "$(verified)",
                "$(versions)",
                "$(vm-active)",
                "$(vm-outline)",
                "$(vm-running)",
                "$(watch)",
                "$(whitespace)",
                "$(whole-word)",
                "$(window)",
                "$(word-wrap)",
                "$(zoom-in)",
                "$(zoom-out)",
                "$(list-filter)",
                "$(list-flat)",
                "$(list-selection)",
                "$(selection)",
                "$(list-tree)",
                "$(debug-breakpoint-function-unverified)",
                "$(debug-breakpoint-function)",
                "$(debug-breakpoint-function-disabled)",
                "$(debug-stackframe-active)",
                "$(circle-small-filled)",
                "$(debug-stackframe-dot)",
                "$(terminal-decoration-mark)",
                "$(debug-stackframe)",
                "$(debug-stackframe-focused)",
                "$(debug-breakpoint-unsupported)",
                "$(symbol-string)",
                "$(debug-reverse-continue)",
                "$(debug-step-back)",
                "$(debug-restart-frame)",
                "$(debug-alt)",
                "$(call-incoming)",
                "$(call-outgoing)",
                "$(menu)",
                "$(expand-all)",
                "$(feedback)",
                "$(git-pull-request-reviewer)",
                "$(group-by-ref-type)",
                "$(ungroup-by-ref-type)",
                "$(account)",
                "$(git-pull-request-assignee)",
                "$(bell-dot)",
                "$(debug-console)",
                "$(library)",
                "$(output)",
                "$(run-all)",
                "$(sync-ignored)",
                "$(pinned)",
                "$(github-inverted)",
                "$(server-process)",
                "$(server-environment)",
                "$(pass)",
                "$(issue-closed)",
                "$(stop-circle)",
                "$(play-circle)",
                "$(record)",
                "$(debug-alt-small)",
                "$(vm-connect)",
                "$(cloud)",
                "$(merge)",
                "$(export)",
                "$(graph-left)",
                "$(magnet)",
                "$(notebook)",
                "$(redo)",
                "$(check-all)",
                "$(pinned-dirty)",
                "$(pass-filled)",
                "$(circle-large-filled)",
                "$(circle-large)",
                "$(circle-large-outline)",
                "$(combine)",
                "$(gather)",
                "$(table)",
                "$(variable-group)",
                "$(type-hierarchy)",
                "$(type-hierarchy-sub)",
                "$(type-hierarchy-super)",
                "$(git-pull-request-create)",
                "$(run-above)",
                "$(run-below)",
                "$(notebook-template)",
                "$(debug-rerun)",
                "$(workspace-trusted)",
                "$(workspace-untrusted)",
                "$(workspace-unknown)",
                "$(terminal-cmd)",
                "$(terminal-debian)",
                "$(terminal-linux)",
                "$(terminal-powershell)",
                "$(terminal-tmux)",
                "$(terminal-ubuntu)",
                "$(terminal-bash)",
                "$(arrow-swap)",
                "$(copy)",
                "$(person-add)",
                "$(filter-filled)",
                "$(wand)",
                "$(debug-line-by-line)",
                "$(inspect)",
                "$(layers)",
                "$(layers-dot)",
                "$(layers-active)",
                "$(compass)",
                "$(compass-dot)",
                "$(compass-active)",
                "$(azure)",
                "$(issue-draft)",
                "$(git-pull-request-closed)",
                "$(git-pull-request-draft)",
                "$(debug-all)",
                "$(debug-coverage)",
                "$(run-errors)",
                "$(folder-library)",
                "$(debug-continue-small)",
                "$(beaker-stop)",
                "$(graph-line)",
                "$(graph-scatter)",
                "$(pie-chart)",
                "$(bracket)",
                "$(bracket-dot)",
                "$(bracket-error)",
                "$(lock-small)",
                "$(azure-devops)",
                "$(verified-filled)",
                "$(newline)",
                "$(layout)",
                "$(layout-activitybar-left)",
                "$(layout-activitybar-right)",
                "$(layout-panel-left)",
                "$(layout-panel-center)",
                "$(layout-panel-justify)",
                "$(layout-panel-right)",
                "$(layout-panel)",
                "$(layout-sidebar-left)",
                "$(layout-sidebar-right)",
                "$(layout-statusbar)",
                "$(layout-menubar)",
                "$(layout-centered)",
                "$(target)",
                "$(indent)",
                "$(record-small)",
                "$(error-small)",
                "$(terminal-decoration-error)",
                "$(arrow-circle-down)",
                "$(arrow-circle-left)",
                "$(arrow-circle-right)",
                "$(arrow-circle-up)",
                "$(layout-sidebar-right-off)",
                "$(layout-panel-off)",
                "$(layout-sidebar-left-off)",
                "$(blank)",
                "$(heart-filled)",
                "$(map)",
                "$(map-horizontal)",
                "$(fold-horizontal)",
                "$(map-filled)",
                "$(map-horizontal-filled)",
                "$(fold-horizontal-filled)",
                "$(circle-small)",
                "$(bell-slash)",
                "$(bell-slash-dot)",
                "$(comment-unresolved)",
                "$(git-pull-request-go-to-changes)",
                "$(git-pull-request-new-changes)",
                "$(search-fuzzy)",
                "$(comment-draft)",
                "$(send)",
                "$(sparkle)",
                "$(insert)",
                "$(mic)",
                "$(thumbsdown-filled)",
                "$(thumbsup-filled)",
                "$(coffee)",
                "$(snake)",
                "$(game)",
                "$(vr)",
                "$(chip)",
                "$(piano)",
                "$(music)",
                "$(mic-filled)",
                "$(repo-fetch)",
                "$(copilot)",
                "$(lightbulb-sparkle)",
                "$(robot)",
                "$(sparkle-filled)",
                "$(diff-single)",
                "$(diff-multiple)",
                "$(surround-with)",
                "$(share)",
                "$(git-stash)",
                "$(git-stash-apply)",
                "$(git-stash-pop)",
                "$(vscode)",
                "$(vscode-insiders)",
                "$(code-oss)",
                "$(run-coverage)",
                "$(run-all-coverage)",
                "$(coverage)",
                "$(github-project)",
                "$(map-vertical)",
                "$(fold-vertical)",
                "$(map-vertical-filled)",
                "$(fold-vertical-filled)",
                "$(go-to-search)",
                "$(percentage)",
                "$(sort-percentage)",
                "$(dialog-error)",
                "$(dialog-warning)",
                "$(dialog-info)",
                "$(dialog-close)",
                "$(tree-item-expanded)",
                "$(tree-filter-on-type-on)",
                "$(tree-filter-on-type-off)",
                "$(tree-filter-clear)",
                "$(tree-item-loading)",
                "$(menu-selection)",
                "$(menu-submenu)",
                "$(menubar-more)",
                "$(scrollbar-button-left)",
                "$(scrollbar-button-right)",
                "$(scrollbar-button-up)",
                "$(scrollbar-button-down)",
                "$(toolbar-more)",
                "$(quick-input-back)",
                "$(drop-down-button)",
                "$(symbol-customcolor)",
                "$(export)",
                "$(workspace-unspecified)",
                "$(newline)",
                "$(thumbsdown-filled)",
                "$(thumbsup-filled)",
                "$(git-fetch)",
                "$(lightbulb-sparkle-autofix)",
                "$(debug-breakpoint-pending)"
              ]
            },
            "color": {
              "description": "A theme color ID to associate with the terminal icon.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "terminal.ansiBlack",
                "terminal.ansiRed",
                "terminal.ansiGreen",
                "terminal.ansiYellow",
                "terminal.ansiBlue",
                "terminal.ansiMagenta",
                "terminal.ansiCyan",
                "terminal.ansiWhite"
              ],
              "default": null
            },
            "env": {
              "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
              "type": "object",
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "default": {}
            }
          }
        }
      ],
      "defaultSnippets": [
        {
          "body": {
            "path": "${1}",
            "icon": "${2}"
          }
        }
      ],
      "defaultDefaultValue": null,
      "scope": 3
    },
    "terminal.integrated.profiles.windows": {
      "restricted": true,
      "markdownDescription": "A set of terminal profile customizations for Windows which allows adding, removing or changing how terminals are launched. Profiles are made up of a mandatory path, optional arguments and other presentation options.\n\nTo override an existing profile use its profile name as the key, for example:\n\n```json\n\"terminal.integrated.profile.windows\": {\n  \"bash\": null\n}\n```\n\n[Read more about configuring profiles](https://code.visualstudio.com/docs/terminal/profiles).",
      "type": "object",
      "default": {
        "PowerShell": {
          "source": "PowerShell",
          "icon": "terminal-powershell"
        },
        "Command Prompt": {
          "path": [
            "${env:windir}\\Sysnative\\cmd.exe",
            "${env:windir}\\System32\\cmd.exe"
          ],
          "args": [],
          "icon": "terminal-cmd"
        },
        "Git Bash": {
          "source": "Git Bash"
        }
      },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "object",
            "required": [
              "source"
            ],
            "properties": {
              "source": {
                "description": "A profile source that will auto detect the paths to the shell. Note that non-standard executable locations are not supported and must be created manually in a new profile.",
                "enum": [
                  "PowerShell",
                  "Git Bash"
                ]
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Whether or not to replace the dynamic terminal title that detects what program is running with the static profile name.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with the terminal icon.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "git-pull-request-label",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "terminal-decoration-success",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle-outline",
                  "circle",
                  "debug-breakpoint-unverified",
                  "terminal-decoration-incomplete",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "diff-sidebyside",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "compare-changes",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "git-pull-request-milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "circle-small-filled",
                  "debug-stackframe-dot",
                  "terminal-decoration-mark",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "debug-alt",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "git-pull-request-reviewer",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "git-pull-request-assignee",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "server-process",
                  "server-environment",
                  "pass",
                  "issue-closed",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unknown",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "terminal-decoration-error",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "layout-sidebar-right-off",
                  "layout-panel-off",
                  "layout-sidebar-left-off",
                  "blank",
                  "heart-filled",
                  "map",
                  "map-horizontal",
                  "fold-horizontal",
                  "map-filled",
                  "map-horizontal-filled",
                  "fold-horizontal-filled",
                  "circle-small",
                  "bell-slash",
                  "bell-slash-dot",
                  "comment-unresolved",
                  "git-pull-request-go-to-changes",
                  "git-pull-request-new-changes",
                  "search-fuzzy",
                  "comment-draft",
                  "send",
                  "sparkle",
                  "insert",
                  "mic",
                  "thumbsdown-filled",
                  "thumbsup-filled",
                  "coffee",
                  "snake",
                  "game",
                  "vr",
                  "chip",
                  "piano",
                  "music",
                  "mic-filled",
                  "repo-fetch",
                  "copilot",
                  "lightbulb-sparkle",
                  "robot",
                  "sparkle-filled",
                  "diff-single",
                  "diff-multiple",
                  "surround-with",
                  "share",
                  "git-stash",
                  "git-stash-apply",
                  "git-stash-pop",
                  "vscode",
                  "vscode-insiders",
                  "code-oss",
                  "run-coverage",
                  "run-all-coverage",
                  "coverage",
                  "github-project",
                  "map-vertical",
                  "fold-vertical",
                  "map-vertical-filled",
                  "fold-vertical-filled",
                  "go-to-search",
                  "percentage",
                  "sort-percentage",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back",
                  "drop-down-button",
                  "symbol-customcolor",
                  "export",
                  "workspace-unspecified",
                  "newline",
                  "thumbsdown-filled",
                  "thumbsup-filled",
                  "git-fetch",
                  "lightbulb-sparkle-autofix",
                  "debug-breakpoint-pending"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(git-pull-request-label)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(terminal-decoration-success)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle-outline)",
                  "$(circle)",
                  "$(debug-breakpoint-unverified)",
                  "$(terminal-decoration-incomplete)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(diff-sidebyside)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(compare-changes)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(git-pull-request-milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(circle-small-filled)",
                  "$(debug-stackframe-dot)",
                  "$(terminal-decoration-mark)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(debug-alt)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(git-pull-request-reviewer)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(git-pull-request-assignee)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(issue-closed)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unknown)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(terminal-decoration-error)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(layout-sidebar-right-off)",
                  "$(layout-panel-off)",
                  "$(layout-sidebar-left-off)",
                  "$(blank)",
                  "$(heart-filled)",
                  "$(map)",
                  "$(map-horizontal)",
                  "$(fold-horizontal)",
                  "$(map-filled)",
                  "$(map-horizontal-filled)",
                  "$(fold-horizontal-filled)",
                  "$(circle-small)",
                  "$(bell-slash)",
                  "$(bell-slash-dot)",
                  "$(comment-unresolved)",
                  "$(git-pull-request-go-to-changes)",
                  "$(git-pull-request-new-changes)",
                  "$(search-fuzzy)",
                  "$(comment-draft)",
                  "$(send)",
                  "$(sparkle)",
                  "$(insert)",
                  "$(mic)",
                  "$(thumbsdown-filled)",
                  "$(thumbsup-filled)",
                  "$(coffee)",
                  "$(snake)",
                  "$(game)",
                  "$(vr)",
                  "$(chip)",
                  "$(piano)",
                  "$(music)",
                  "$(mic-filled)",
                  "$(repo-fetch)",
                  "$(copilot)",
                  "$(lightbulb-sparkle)",
                  "$(robot)",
                  "$(sparkle-filled)",
                  "$(diff-single)",
                  "$(diff-multiple)",
                  "$(surround-with)",
                  "$(share)",
                  "$(git-stash)",
                  "$(git-stash-apply)",
                  "$(git-stash-pop)",
                  "$(vscode)",
                  "$(vscode-insiders)",
                  "$(code-oss)",
                  "$(run-coverage)",
                  "$(run-all-coverage)",
                  "$(coverage)",
                  "$(github-project)",
                  "$(map-vertical)",
                  "$(fold-vertical)",
                  "$(map-vertical-filled)",
                  "$(fold-vertical-filled)",
                  "$(go-to-search)",
                  "$(percentage)",
                  "$(sort-percentage)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)",
                  "$(drop-down-button)",
                  "$(symbol-customcolor)",
                  "$(export)",
                  "$(workspace-unspecified)",
                  "$(newline)",
                  "$(thumbsdown-filled)",
                  "$(thumbsup-filled)",
                  "$(git-fetch)",
                  "$(lightbulb-sparkle-autofix)",
                  "$(debug-breakpoint-pending)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with the terminal icon.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          },
          {
            "type": "object",
            "required": [
              "extensionIdentifier",
              "id",
              "title"
            ],
            "properties": {
              "extensionIdentifier": {
                "description": "The extension that contributed this profile.",
                "type": "string"
              },
              "id": {
                "description": "The id of the extension terminal",
                "type": "string"
              },
              "title": {
                "description": "The name of the extension terminal",
                "type": "string"
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Whether or not to replace the dynamic terminal title that detects what program is running with the static profile name.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with the terminal icon.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "git-pull-request-label",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "terminal-decoration-success",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle-outline",
                  "circle",
                  "debug-breakpoint-unverified",
                  "terminal-decoration-incomplete",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "diff-sidebyside",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "compare-changes",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "git-pull-request-milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "circle-small-filled",
                  "debug-stackframe-dot",
                  "terminal-decoration-mark",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "debug-alt",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "git-pull-request-reviewer",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "git-pull-request-assignee",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "server-process",
                  "server-environment",
                  "pass",
                  "issue-closed",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unknown",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "terminal-decoration-error",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "layout-sidebar-right-off",
                  "layout-panel-off",
                  "layout-sidebar-left-off",
                  "blank",
                  "heart-filled",
                  "map",
                  "map-horizontal",
                  "fold-horizontal",
                  "map-filled",
                  "map-horizontal-filled",
                  "fold-horizontal-filled",
                  "circle-small",
                  "bell-slash",
                  "bell-slash-dot",
                  "comment-unresolved",
                  "git-pull-request-go-to-changes",
                  "git-pull-request-new-changes",
                  "search-fuzzy",
                  "comment-draft",
                  "send",
                  "sparkle",
                  "insert",
                  "mic",
                  "thumbsdown-filled",
                  "thumbsup-filled",
                  "coffee",
                  "snake",
                  "game",
                  "vr",
                  "chip",
                  "piano",
                  "music",
                  "mic-filled",
                  "repo-fetch",
                  "copilot",
                  "lightbulb-sparkle",
                  "robot",
                  "sparkle-filled",
                  "diff-single",
                  "diff-multiple",
                  "surround-with",
                  "share",
                  "git-stash",
                  "git-stash-apply",
                  "git-stash-pop",
                  "vscode",
                  "vscode-insiders",
                  "code-oss",
                  "run-coverage",
                  "run-all-coverage",
                  "coverage",
                  "github-project",
                  "map-vertical",
                  "fold-vertical",
                  "map-vertical-filled",
                  "fold-vertical-filled",
                  "go-to-search",
                  "percentage",
                  "sort-percentage",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back",
                  "drop-down-button",
                  "symbol-customcolor",
                  "export",
                  "workspace-unspecified",
                  "newline",
                  "thumbsdown-filled",
                  "thumbsup-filled",
                  "git-fetch",
                  "lightbulb-sparkle-autofix",
                  "debug-breakpoint-pending"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(git-pull-request-label)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(terminal-decoration-success)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle-outline)",
                  "$(circle)",
                  "$(debug-breakpoint-unverified)",
                  "$(terminal-decoration-incomplete)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(diff-sidebyside)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(compare-changes)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(git-pull-request-milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(circle-small-filled)",
                  "$(debug-stackframe-dot)",
                  "$(terminal-decoration-mark)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(debug-alt)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(git-pull-request-reviewer)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(git-pull-request-assignee)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(issue-closed)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unknown)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(terminal-decoration-error)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(layout-sidebar-right-off)",
                  "$(layout-panel-off)",
                  "$(layout-sidebar-left-off)",
                  "$(blank)",
                  "$(heart-filled)",
                  "$(map)",
                  "$(map-horizontal)",
                  "$(fold-horizontal)",
                  "$(map-filled)",
                  "$(map-horizontal-filled)",
                  "$(fold-horizontal-filled)",
                  "$(circle-small)",
                  "$(bell-slash)",
                  "$(bell-slash-dot)",
                  "$(comment-unresolved)",
                  "$(git-pull-request-go-to-changes)",
                  "$(git-pull-request-new-changes)",
                  "$(search-fuzzy)",
                  "$(comment-draft)",
                  "$(send)",
                  "$(sparkle)",
                  "$(insert)",
                  "$(mic)",
                  "$(thumbsdown-filled)",
                  "$(thumbsup-filled)",
                  "$(coffee)",
                  "$(snake)",
                  "$(game)",
                  "$(vr)",
                  "$(chip)",
                  "$(piano)",
                  "$(music)",
                  "$(mic-filled)",
                  "$(repo-fetch)",
                  "$(copilot)",
                  "$(lightbulb-sparkle)",
                  "$(robot)",
                  "$(sparkle-filled)",
                  "$(diff-single)",
                  "$(diff-multiple)",
                  "$(surround-with)",
                  "$(share)",
                  "$(git-stash)",
                  "$(git-stash-apply)",
                  "$(git-stash-pop)",
                  "$(vscode)",
                  "$(vscode-insiders)",
                  "$(code-oss)",
                  "$(run-coverage)",
                  "$(run-all-coverage)",
                  "$(coverage)",
                  "$(github-project)",
                  "$(map-vertical)",
                  "$(fold-vertical)",
                  "$(map-vertical-filled)",
                  "$(fold-vertical-filled)",
                  "$(go-to-search)",
                  "$(percentage)",
                  "$(sort-percentage)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)",
                  "$(drop-down-button)",
                  "$(symbol-customcolor)",
                  "$(export)",
                  "$(workspace-unspecified)",
                  "$(newline)",
                  "$(thumbsdown-filled)",
                  "$(thumbsup-filled)",
                  "$(git-fetch)",
                  "$(lightbulb-sparkle-autofix)",
                  "$(debug-breakpoint-pending)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with the terminal icon.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          },
          {
            "type": "null"
          },
          {
            "type": "object",
            "required": [
              "path"
            ],
            "properties": {
              "path": {
                "description": "A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.",
                "type": [
                  "string",
                  "array"
                ],
                "items": {
                  "type": "string"
                }
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Whether or not to replace the dynamic terminal title that detects what program is running with the static profile name.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with the terminal icon.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "git-pull-request-label",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "terminal-decoration-success",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle-outline",
                  "circle",
                  "debug-breakpoint-unverified",
                  "terminal-decoration-incomplete",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "diff-sidebyside",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "compare-changes",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "git-pull-request-milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "circle-small-filled",
                  "debug-stackframe-dot",
                  "terminal-decoration-mark",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "debug-alt",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "git-pull-request-reviewer",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "git-pull-request-assignee",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "server-process",
                  "server-environment",
                  "pass",
                  "issue-closed",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unknown",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "terminal-decoration-error",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "layout-sidebar-right-off",
                  "layout-panel-off",
                  "layout-sidebar-left-off",
                  "blank",
                  "heart-filled",
                  "map",
                  "map-horizontal",
                  "fold-horizontal",
                  "map-filled",
                  "map-horizontal-filled",
                  "fold-horizontal-filled",
                  "circle-small",
                  "bell-slash",
                  "bell-slash-dot",
                  "comment-unresolved",
                  "git-pull-request-go-to-changes",
                  "git-pull-request-new-changes",
                  "search-fuzzy",
                  "comment-draft",
                  "send",
                  "sparkle",
                  "insert",
                  "mic",
                  "thumbsdown-filled",
                  "thumbsup-filled",
                  "coffee",
                  "snake",
                  "game",
                  "vr",
                  "chip",
                  "piano",
                  "music",
                  "mic-filled",
                  "repo-fetch",
                  "copilot",
                  "lightbulb-sparkle",
                  "robot",
                  "sparkle-filled",
                  "diff-single",
                  "diff-multiple",
                  "surround-with",
                  "share",
                  "git-stash",
                  "git-stash-apply",
                  "git-stash-pop",
                  "vscode",
                  "vscode-insiders",
                  "code-oss",
                  "run-coverage",
                  "run-all-coverage",
                  "coverage",
                  "github-project",
                  "map-vertical",
                  "fold-vertical",
                  "map-vertical-filled",
                  "fold-vertical-filled",
                  "go-to-search",
                  "percentage",
                  "sort-percentage",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back",
                  "drop-down-button",
                  "symbol-customcolor",
                  "export",
                  "workspace-unspecified",
                  "newline",
                  "thumbsdown-filled",
                  "thumbsup-filled",
                  "git-fetch",
                  "lightbulb-sparkle-autofix",
                  "debug-breakpoint-pending"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(git-pull-request-label)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(terminal-decoration-success)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle-outline)",
                  "$(circle)",
                  "$(debug-breakpoint-unverified)",
                  "$(terminal-decoration-incomplete)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(diff-sidebyside)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(compare-changes)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(git-pull-request-milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(circle-small-filled)",
                  "$(debug-stackframe-dot)",
                  "$(terminal-decoration-mark)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(debug-alt)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(git-pull-request-reviewer)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(git-pull-request-assignee)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(issue-closed)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unknown)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(terminal-decoration-error)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(layout-sidebar-right-off)",
                  "$(layout-panel-off)",
                  "$(layout-sidebar-left-off)",
                  "$(blank)",
                  "$(heart-filled)",
                  "$(map)",
                  "$(map-horizontal)",
                  "$(fold-horizontal)",
                  "$(map-filled)",
                  "$(map-horizontal-filled)",
                  "$(fold-horizontal-filled)",
                  "$(circle-small)",
                  "$(bell-slash)",
                  "$(bell-slash-dot)",
                  "$(comment-unresolved)",
                  "$(git-pull-request-go-to-changes)",
                  "$(git-pull-request-new-changes)",
                  "$(search-fuzzy)",
                  "$(comment-draft)",
                  "$(send)",
                  "$(sparkle)",
                  "$(insert)",
                  "$(mic)",
                  "$(thumbsdown-filled)",
                  "$(thumbsup-filled)",
                  "$(coffee)",
                  "$(snake)",
                  "$(game)",
                  "$(vr)",
                  "$(chip)",
                  "$(piano)",
                  "$(music)",
                  "$(mic-filled)",
                  "$(repo-fetch)",
                  "$(copilot)",
                  "$(lightbulb-sparkle)",
                  "$(robot)",
                  "$(sparkle-filled)",
                  "$(diff-single)",
                  "$(diff-multiple)",
                  "$(surround-with)",
                  "$(share)",
                  "$(git-stash)",
                  "$(git-stash-apply)",
                  "$(git-stash-pop)",
                  "$(vscode)",
                  "$(vscode-insiders)",
                  "$(code-oss)",
                  "$(run-coverage)",
                  "$(run-all-coverage)",
                  "$(coverage)",
                  "$(github-project)",
                  "$(map-vertical)",
                  "$(fold-vertical)",
                  "$(map-vertical-filled)",
                  "$(fold-vertical-filled)",
                  "$(go-to-search)",
                  "$(percentage)",
                  "$(sort-percentage)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)",
                  "$(drop-down-button)",
                  "$(symbol-customcolor)",
                  "$(export)",
                  "$(workspace-unspecified)",
                  "$(newline)",
                  "$(thumbsdown-filled)",
                  "$(thumbsup-filled)",
                  "$(git-fetch)",
                  "$(lightbulb-sparkle-autofix)",
                  "$(debug-breakpoint-pending)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with the terminal icon.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          }
        ]
      },
      "defaultDefaultValue": {
        "PowerShell": {
          "source": "PowerShell",
          "icon": "terminal-powershell"
        },
        "Command Prompt": {
          "path": [
            "${env:windir}\\Sysnative\\cmd.exe",
            "${env:windir}\\System32\\cmd.exe"
          ],
          "args": [],
          "icon": "terminal-cmd"
        },
        "Git Bash": {
          "source": "Git Bash"
        }
      },
      "scope": 3
    },
    "terminal.integrated.profiles.osx": {
      "restricted": true,
      "markdownDescription": "A set of terminal profile customizations for Mac which allows adding, removing or changing how terminals are launched. Profiles are made up of a mandatory path, optional arguments and other presentation options.\n\nTo override an existing profile use its profile name as the key, for example:\n\n```json\n\"terminal.integrated.profile.osx\": {\n  \"bash\": null\n}\n```\n\n[Read more about configuring profiles](https://code.visualstudio.com/docs/terminal/profiles).",
      "type": "object",
      "default": {
        "bash": {
          "path": "bash",
          "args": [
            "-l"
          ],
          "icon": "terminal-bash"
        },
        "zsh": {
          "path": "zsh",
          "args": [
            "-l"
          ]
        },
        "fish": {
          "path": "fish",
          "args": [
            "-l"
          ]
        },
        "tmux": {
          "path": "tmux",
          "icon": "terminal-tmux"
        },
        "pwsh": {
          "path": "pwsh",
          "icon": "terminal-powershell"
        }
      },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "object",
            "required": [
              "extensionIdentifier",
              "id",
              "title"
            ],
            "properties": {
              "extensionIdentifier": {
                "description": "The extension that contributed this profile.",
                "type": "string"
              },
              "id": {
                "description": "The id of the extension terminal",
                "type": "string"
              },
              "title": {
                "description": "The name of the extension terminal",
                "type": "string"
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Whether or not to replace the dynamic terminal title that detects what program is running with the static profile name.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with the terminal icon.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "git-pull-request-label",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "terminal-decoration-success",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle-outline",
                  "circle",
                  "debug-breakpoint-unverified",
                  "terminal-decoration-incomplete",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "diff-sidebyside",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "compare-changes",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "git-pull-request-milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "circle-small-filled",
                  "debug-stackframe-dot",
                  "terminal-decoration-mark",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "debug-alt",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "git-pull-request-reviewer",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "git-pull-request-assignee",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "server-process",
                  "server-environment",
                  "pass",
                  "issue-closed",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unknown",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "terminal-decoration-error",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "layout-sidebar-right-off",
                  "layout-panel-off",
                  "layout-sidebar-left-off",
                  "blank",
                  "heart-filled",
                  "map",
                  "map-horizontal",
                  "fold-horizontal",
                  "map-filled",
                  "map-horizontal-filled",
                  "fold-horizontal-filled",
                  "circle-small",
                  "bell-slash",
                  "bell-slash-dot",
                  "comment-unresolved",
                  "git-pull-request-go-to-changes",
                  "git-pull-request-new-changes",
                  "search-fuzzy",
                  "comment-draft",
                  "send",
                  "sparkle",
                  "insert",
                  "mic",
                  "thumbsdown-filled",
                  "thumbsup-filled",
                  "coffee",
                  "snake",
                  "game",
                  "vr",
                  "chip",
                  "piano",
                  "music",
                  "mic-filled",
                  "repo-fetch",
                  "copilot",
                  "lightbulb-sparkle",
                  "robot",
                  "sparkle-filled",
                  "diff-single",
                  "diff-multiple",
                  "surround-with",
                  "share",
                  "git-stash",
                  "git-stash-apply",
                  "git-stash-pop",
                  "vscode",
                  "vscode-insiders",
                  "code-oss",
                  "run-coverage",
                  "run-all-coverage",
                  "coverage",
                  "github-project",
                  "map-vertical",
                  "fold-vertical",
                  "map-vertical-filled",
                  "fold-vertical-filled",
                  "go-to-search",
                  "percentage",
                  "sort-percentage",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back",
                  "drop-down-button",
                  "symbol-customcolor",
                  "export",
                  "workspace-unspecified",
                  "newline",
                  "thumbsdown-filled",
                  "thumbsup-filled",
                  "git-fetch",
                  "lightbulb-sparkle-autofix",
                  "debug-breakpoint-pending"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(git-pull-request-label)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(terminal-decoration-success)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle-outline)",
                  "$(circle)",
                  "$(debug-breakpoint-unverified)",
                  "$(terminal-decoration-incomplete)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(diff-sidebyside)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(compare-changes)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(git-pull-request-milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(circle-small-filled)",
                  "$(debug-stackframe-dot)",
                  "$(terminal-decoration-mark)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(debug-alt)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(git-pull-request-reviewer)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(git-pull-request-assignee)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(issue-closed)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unknown)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(terminal-decoration-error)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(layout-sidebar-right-off)",
                  "$(layout-panel-off)",
                  "$(layout-sidebar-left-off)",
                  "$(blank)",
                  "$(heart-filled)",
                  "$(map)",
                  "$(map-horizontal)",
                  "$(fold-horizontal)",
                  "$(map-filled)",
                  "$(map-horizontal-filled)",
                  "$(fold-horizontal-filled)",
                  "$(circle-small)",
                  "$(bell-slash)",
                  "$(bell-slash-dot)",
                  "$(comment-unresolved)",
                  "$(git-pull-request-go-to-changes)",
                  "$(git-pull-request-new-changes)",
                  "$(search-fuzzy)",
                  "$(comment-draft)",
                  "$(send)",
                  "$(sparkle)",
                  "$(insert)",
                  "$(mic)",
                  "$(thumbsdown-filled)",
                  "$(thumbsup-filled)",
                  "$(coffee)",
                  "$(snake)",
                  "$(game)",
                  "$(vr)",
                  "$(chip)",
                  "$(piano)",
                  "$(music)",
                  "$(mic-filled)",
                  "$(repo-fetch)",
                  "$(copilot)",
                  "$(lightbulb-sparkle)",
                  "$(robot)",
                  "$(sparkle-filled)",
                  "$(diff-single)",
                  "$(diff-multiple)",
                  "$(surround-with)",
                  "$(share)",
                  "$(git-stash)",
                  "$(git-stash-apply)",
                  "$(git-stash-pop)",
                  "$(vscode)",
                  "$(vscode-insiders)",
                  "$(code-oss)",
                  "$(run-coverage)",
                  "$(run-all-coverage)",
                  "$(coverage)",
                  "$(github-project)",
                  "$(map-vertical)",
                  "$(fold-vertical)",
                  "$(map-vertical-filled)",
                  "$(fold-vertical-filled)",
                  "$(go-to-search)",
                  "$(percentage)",
                  "$(sort-percentage)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)",
                  "$(drop-down-button)",
                  "$(symbol-customcolor)",
                  "$(export)",
                  "$(workspace-unspecified)",
                  "$(newline)",
                  "$(thumbsdown-filled)",
                  "$(thumbsup-filled)",
                  "$(git-fetch)",
                  "$(lightbulb-sparkle-autofix)",
                  "$(debug-breakpoint-pending)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with the terminal icon.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          },
          {
            "type": "null"
          },
          {
            "type": "object",
            "required": [
              "path"
            ],
            "properties": {
              "path": {
                "description": "A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.",
                "type": [
                  "string",
                  "array"
                ],
                "items": {
                  "type": "string"
                }
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Whether or not to replace the dynamic terminal title that detects what program is running with the static profile name.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with the terminal icon.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "git-pull-request-label",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "terminal-decoration-success",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle-outline",
                  "circle",
                  "debug-breakpoint-unverified",
                  "terminal-decoration-incomplete",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "diff-sidebyside",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "compare-changes",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "git-pull-request-milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "circle-small-filled",
                  "debug-stackframe-dot",
                  "terminal-decoration-mark",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "debug-alt",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "git-pull-request-reviewer",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "git-pull-request-assignee",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "server-process",
                  "server-environment",
                  "pass",
                  "issue-closed",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unknown",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "terminal-decoration-error",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "layout-sidebar-right-off",
                  "layout-panel-off",
                  "layout-sidebar-left-off",
                  "blank",
                  "heart-filled",
                  "map",
                  "map-horizontal",
                  "fold-horizontal",
                  "map-filled",
                  "map-horizontal-filled",
                  "fold-horizontal-filled",
                  "circle-small",
                  "bell-slash",
                  "bell-slash-dot",
                  "comment-unresolved",
                  "git-pull-request-go-to-changes",
                  "git-pull-request-new-changes",
                  "search-fuzzy",
                  "comment-draft",
                  "send",
                  "sparkle",
                  "insert",
                  "mic",
                  "thumbsdown-filled",
                  "thumbsup-filled",
                  "coffee",
                  "snake",
                  "game",
                  "vr",
                  "chip",
                  "piano",
                  "music",
                  "mic-filled",
                  "repo-fetch",
                  "copilot",
                  "lightbulb-sparkle",
                  "robot",
                  "sparkle-filled",
                  "diff-single",
                  "diff-multiple",
                  "surround-with",
                  "share",
                  "git-stash",
                  "git-stash-apply",
                  "git-stash-pop",
                  "vscode",
                  "vscode-insiders",
                  "code-oss",
                  "run-coverage",
                  "run-all-coverage",
                  "coverage",
                  "github-project",
                  "map-vertical",
                  "fold-vertical",
                  "map-vertical-filled",
                  "fold-vertical-filled",
                  "go-to-search",
                  "percentage",
                  "sort-percentage",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back",
                  "drop-down-button",
                  "symbol-customcolor",
                  "export",
                  "workspace-unspecified",
                  "newline",
                  "thumbsdown-filled",
                  "thumbsup-filled",
                  "git-fetch",
                  "lightbulb-sparkle-autofix",
                  "debug-breakpoint-pending"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(git-pull-request-label)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(terminal-decoration-success)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle-outline)",
                  "$(circle)",
                  "$(debug-breakpoint-unverified)",
                  "$(terminal-decoration-incomplete)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(diff-sidebyside)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(compare-changes)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(git-pull-request-milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(circle-small-filled)",
                  "$(debug-stackframe-dot)",
                  "$(terminal-decoration-mark)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(debug-alt)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(git-pull-request-reviewer)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(git-pull-request-assignee)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(issue-closed)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unknown)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(terminal-decoration-error)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(layout-sidebar-right-off)",
                  "$(layout-panel-off)",
                  "$(layout-sidebar-left-off)",
                  "$(blank)",
                  "$(heart-filled)",
                  "$(map)",
                  "$(map-horizontal)",
                  "$(fold-horizontal)",
                  "$(map-filled)",
                  "$(map-horizontal-filled)",
                  "$(fold-horizontal-filled)",
                  "$(circle-small)",
                  "$(bell-slash)",
                  "$(bell-slash-dot)",
                  "$(comment-unresolved)",
                  "$(git-pull-request-go-to-changes)",
                  "$(git-pull-request-new-changes)",
                  "$(search-fuzzy)",
                  "$(comment-draft)",
                  "$(send)",
                  "$(sparkle)",
                  "$(insert)",
                  "$(mic)",
                  "$(thumbsdown-filled)",
                  "$(thumbsup-filled)",
                  "$(coffee)",
                  "$(snake)",
                  "$(game)",
                  "$(vr)",
                  "$(chip)",
                  "$(piano)",
                  "$(music)",
                  "$(mic-filled)",
                  "$(repo-fetch)",
                  "$(copilot)",
                  "$(lightbulb-sparkle)",
                  "$(robot)",
                  "$(sparkle-filled)",
                  "$(diff-single)",
                  "$(diff-multiple)",
                  "$(surround-with)",
                  "$(share)",
                  "$(git-stash)",
                  "$(git-stash-apply)",
                  "$(git-stash-pop)",
                  "$(vscode)",
                  "$(vscode-insiders)",
                  "$(code-oss)",
                  "$(run-coverage)",
                  "$(run-all-coverage)",
                  "$(coverage)",
                  "$(github-project)",
                  "$(map-vertical)",
                  "$(fold-vertical)",
                  "$(map-vertical-filled)",
                  "$(fold-vertical-filled)",
                  "$(go-to-search)",
                  "$(percentage)",
                  "$(sort-percentage)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)",
                  "$(drop-down-button)",
                  "$(symbol-customcolor)",
                  "$(export)",
                  "$(workspace-unspecified)",
                  "$(newline)",
                  "$(thumbsdown-filled)",
                  "$(thumbsup-filled)",
                  "$(git-fetch)",
                  "$(lightbulb-sparkle-autofix)",
                  "$(debug-breakpoint-pending)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with the terminal icon.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          }
        ]
      },
      "defaultDefaultValue": {
        "bash": {
          "path": "bash",
          "args": [
            "-l"
          ],
          "icon": "terminal-bash"
        },
        "zsh": {
          "path": "zsh",
          "args": [
            "-l"
          ]
        },
        "fish": {
          "path": "fish",
          "args": [
            "-l"
          ]
        },
        "tmux": {
          "path": "tmux",
          "icon": "terminal-tmux"
        },
        "pwsh": {
          "path": "pwsh",
          "icon": "terminal-powershell"
        }
      },
      "scope": 3
    },
    "terminal.integrated.profiles.linux": {
      "restricted": true,
      "markdownDescription": "A set of terminal profile customizations for Linux which allows adding, removing or changing how terminals are launched. Profiles are made up of a mandatory path, optional arguments and other presentation options.\n\nTo override an existing profile use its profile name as the key, for example:\n\n```json\n\"terminal.integrated.profile.linux\": {\n  \"bash\": null\n}\n```\n\n[Read more about configuring profiles](https://code.visualstudio.com/docs/terminal/profiles).",
      "type": "object",
      "default": {
        "bash": {
          "path": "bash",
          "icon": "terminal-bash"
        },
        "zsh": {
          "path": "zsh"
        },
        "fish": {
          "path": "fish"
        },
        "tmux": {
          "path": "tmux",
          "icon": "terminal-tmux"
        },
        "pwsh": {
          "path": "pwsh",
          "icon": "terminal-powershell"
        }
      },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "object",
            "required": [
              "extensionIdentifier",
              "id",
              "title"
            ],
            "properties": {
              "extensionIdentifier": {
                "description": "The extension that contributed this profile.",
                "type": "string"
              },
              "id": {
                "description": "The id of the extension terminal",
                "type": "string"
              },
              "title": {
                "description": "The name of the extension terminal",
                "type": "string"
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Whether or not to replace the dynamic terminal title that detects what program is running with the static profile name.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with the terminal icon.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "git-pull-request-label",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "terminal-decoration-success",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle-outline",
                  "circle",
                  "debug-breakpoint-unverified",
                  "terminal-decoration-incomplete",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "diff-sidebyside",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "compare-changes",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "git-pull-request-milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "circle-small-filled",
                  "debug-stackframe-dot",
                  "terminal-decoration-mark",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "debug-alt",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "git-pull-request-reviewer",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "git-pull-request-assignee",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "server-process",
                  "server-environment",
                  "pass",
                  "issue-closed",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unknown",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "terminal-decoration-error",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "layout-sidebar-right-off",
                  "layout-panel-off",
                  "layout-sidebar-left-off",
                  "blank",
                  "heart-filled",
                  "map",
                  "map-horizontal",
                  "fold-horizontal",
                  "map-filled",
                  "map-horizontal-filled",
                  "fold-horizontal-filled",
                  "circle-small",
                  "bell-slash",
                  "bell-slash-dot",
                  "comment-unresolved",
                  "git-pull-request-go-to-changes",
                  "git-pull-request-new-changes",
                  "search-fuzzy",
                  "comment-draft",
                  "send",
                  "sparkle",
                  "insert",
                  "mic",
                  "thumbsdown-filled",
                  "thumbsup-filled",
                  "coffee",
                  "snake",
                  "game",
                  "vr",
                  "chip",
                  "piano",
                  "music",
                  "mic-filled",
                  "repo-fetch",
                  "copilot",
                  "lightbulb-sparkle",
                  "robot",
                  "sparkle-filled",
                  "diff-single",
                  "diff-multiple",
                  "surround-with",
                  "share",
                  "git-stash",
                  "git-stash-apply",
                  "git-stash-pop",
                  "vscode",
                  "vscode-insiders",
                  "code-oss",
                  "run-coverage",
                  "run-all-coverage",
                  "coverage",
                  "github-project",
                  "map-vertical",
                  "fold-vertical",
                  "map-vertical-filled",
                  "fold-vertical-filled",
                  "go-to-search",
                  "percentage",
                  "sort-percentage",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back",
                  "drop-down-button",
                  "symbol-customcolor",
                  "export",
                  "workspace-unspecified",
                  "newline",
                  "thumbsdown-filled",
                  "thumbsup-filled",
                  "git-fetch",
                  "lightbulb-sparkle-autofix",
                  "debug-breakpoint-pending"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(git-pull-request-label)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(terminal-decoration-success)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle-outline)",
                  "$(circle)",
                  "$(debug-breakpoint-unverified)",
                  "$(terminal-decoration-incomplete)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(diff-sidebyside)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(compare-changes)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(git-pull-request-milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(circle-small-filled)",
                  "$(debug-stackframe-dot)",
                  "$(terminal-decoration-mark)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(debug-alt)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(git-pull-request-reviewer)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(git-pull-request-assignee)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(issue-closed)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unknown)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(terminal-decoration-error)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(layout-sidebar-right-off)",
                  "$(layout-panel-off)",
                  "$(layout-sidebar-left-off)",
                  "$(blank)",
                  "$(heart-filled)",
                  "$(map)",
                  "$(map-horizontal)",
                  "$(fold-horizontal)",
                  "$(map-filled)",
                  "$(map-horizontal-filled)",
                  "$(fold-horizontal-filled)",
                  "$(circle-small)",
                  "$(bell-slash)",
                  "$(bell-slash-dot)",
                  "$(comment-unresolved)",
                  "$(git-pull-request-go-to-changes)",
                  "$(git-pull-request-new-changes)",
                  "$(search-fuzzy)",
                  "$(comment-draft)",
                  "$(send)",
                  "$(sparkle)",
                  "$(insert)",
                  "$(mic)",
                  "$(thumbsdown-filled)",
                  "$(thumbsup-filled)",
                  "$(coffee)",
                  "$(snake)",
                  "$(game)",
                  "$(vr)",
                  "$(chip)",
                  "$(piano)",
                  "$(music)",
                  "$(mic-filled)",
                  "$(repo-fetch)",
                  "$(copilot)",
                  "$(lightbulb-sparkle)",
                  "$(robot)",
                  "$(sparkle-filled)",
                  "$(diff-single)",
                  "$(diff-multiple)",
                  "$(surround-with)",
                  "$(share)",
                  "$(git-stash)",
                  "$(git-stash-apply)",
                  "$(git-stash-pop)",
                  "$(vscode)",
                  "$(vscode-insiders)",
                  "$(code-oss)",
                  "$(run-coverage)",
                  "$(run-all-coverage)",
                  "$(coverage)",
                  "$(github-project)",
                  "$(map-vertical)",
                  "$(fold-vertical)",
                  "$(map-vertical-filled)",
                  "$(fold-vertical-filled)",
                  "$(go-to-search)",
                  "$(percentage)",
                  "$(sort-percentage)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)",
                  "$(drop-down-button)",
                  "$(symbol-customcolor)",
                  "$(export)",
                  "$(workspace-unspecified)",
                  "$(newline)",
                  "$(thumbsdown-filled)",
                  "$(thumbsup-filled)",
                  "$(git-fetch)",
                  "$(lightbulb-sparkle-autofix)",
                  "$(debug-breakpoint-pending)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with the terminal icon.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          },
          {
            "type": "null"
          },
          {
            "type": "object",
            "required": [
              "path"
            ],
            "properties": {
              "path": {
                "description": "A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.",
                "type": [
                  "string",
                  "array"
                ],
                "items": {
                  "type": "string"
                }
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Whether or not to replace the dynamic terminal title that detects what program is running with the static profile name.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with the terminal icon.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "git-pull-request-label",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "terminal-decoration-success",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle-outline",
                  "circle",
                  "debug-breakpoint-unverified",
                  "terminal-decoration-incomplete",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "diff-sidebyside",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "compare-changes",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "git-pull-request-milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "circle-small-filled",
                  "debug-stackframe-dot",
                  "terminal-decoration-mark",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "debug-alt",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "git-pull-request-reviewer",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "git-pull-request-assignee",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "server-process",
                  "server-environment",
                  "pass",
                  "issue-closed",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unknown",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "terminal-decoration-error",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "layout-sidebar-right-off",
                  "layout-panel-off",
                  "layout-sidebar-left-off",
                  "blank",
                  "heart-filled",
                  "map",
                  "map-horizontal",
                  "fold-horizontal",
                  "map-filled",
                  "map-horizontal-filled",
                  "fold-horizontal-filled",
                  "circle-small",
                  "bell-slash",
                  "bell-slash-dot",
                  "comment-unresolved",
                  "git-pull-request-go-to-changes",
                  "git-pull-request-new-changes",
                  "search-fuzzy",
                  "comment-draft",
                  "send",
                  "sparkle",
                  "insert",
                  "mic",
                  "thumbsdown-filled",
                  "thumbsup-filled",
                  "coffee",
                  "snake",
                  "game",
                  "vr",
                  "chip",
                  "piano",
                  "music",
                  "mic-filled",
                  "repo-fetch",
                  "copilot",
                  "lightbulb-sparkle",
                  "robot",
                  "sparkle-filled",
                  "diff-single",
                  "diff-multiple",
                  "surround-with",
                  "share",
                  "git-stash",
                  "git-stash-apply",
                  "git-stash-pop",
                  "vscode",
                  "vscode-insiders",
                  "code-oss",
                  "run-coverage",
                  "run-all-coverage",
                  "coverage",
                  "github-project",
                  "map-vertical",
                  "fold-vertical",
                  "map-vertical-filled",
                  "fold-vertical-filled",
                  "go-to-search",
                  "percentage",
                  "sort-percentage",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back",
                  "drop-down-button",
                  "symbol-customcolor",
                  "export",
                  "workspace-unspecified",
                  "newline",
                  "thumbsdown-filled",
                  "thumbsup-filled",
                  "git-fetch",
                  "lightbulb-sparkle-autofix",
                  "debug-breakpoint-pending"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(git-pull-request-label)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(terminal-decoration-success)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle-outline)",
                  "$(circle)",
                  "$(debug-breakpoint-unverified)",
                  "$(terminal-decoration-incomplete)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(diff-sidebyside)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(compare-changes)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(git-pull-request-milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(circle-small-filled)",
                  "$(debug-stackframe-dot)",
                  "$(terminal-decoration-mark)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(debug-alt)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(git-pull-request-reviewer)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(git-pull-request-assignee)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(issue-closed)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unknown)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(terminal-decoration-error)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(layout-sidebar-right-off)",
                  "$(layout-panel-off)",
                  "$(layout-sidebar-left-off)",
                  "$(blank)",
                  "$(heart-filled)",
                  "$(map)",
                  "$(map-horizontal)",
                  "$(fold-horizontal)",
                  "$(map-filled)",
                  "$(map-horizontal-filled)",
                  "$(fold-horizontal-filled)",
                  "$(circle-small)",
                  "$(bell-slash)",
                  "$(bell-slash-dot)",
                  "$(comment-unresolved)",
                  "$(git-pull-request-go-to-changes)",
                  "$(git-pull-request-new-changes)",
                  "$(search-fuzzy)",
                  "$(comment-draft)",
                  "$(send)",
                  "$(sparkle)",
                  "$(insert)",
                  "$(mic)",
                  "$(thumbsdown-filled)",
                  "$(thumbsup-filled)",
                  "$(coffee)",
                  "$(snake)",
                  "$(game)",
                  "$(vr)",
                  "$(chip)",
                  "$(piano)",
                  "$(music)",
                  "$(mic-filled)",
                  "$(repo-fetch)",
                  "$(copilot)",
                  "$(lightbulb-sparkle)",
                  "$(robot)",
                  "$(sparkle-filled)",
                  "$(diff-single)",
                  "$(diff-multiple)",
                  "$(surround-with)",
                  "$(share)",
                  "$(git-stash)",
                  "$(git-stash-apply)",
                  "$(git-stash-pop)",
                  "$(vscode)",
                  "$(vscode-insiders)",
                  "$(code-oss)",
                  "$(run-coverage)",
                  "$(run-all-coverage)",
                  "$(coverage)",
                  "$(github-project)",
                  "$(map-vertical)",
                  "$(fold-vertical)",
                  "$(map-vertical-filled)",
                  "$(fold-vertical-filled)",
                  "$(go-to-search)",
                  "$(percentage)",
                  "$(sort-percentage)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)",
                  "$(drop-down-button)",
                  "$(symbol-customcolor)",
                  "$(export)",
                  "$(workspace-unspecified)",
                  "$(newline)",
                  "$(thumbsdown-filled)",
                  "$(thumbsup-filled)",
                  "$(git-fetch)",
                  "$(lightbulb-sparkle-autofix)",
                  "$(debug-breakpoint-pending)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with the terminal icon.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          }
        ]
      },
      "defaultDefaultValue": {
        "bash": {
          "path": "bash",
          "icon": "terminal-bash"
        },
        "zsh": {
          "path": "zsh"
        },
        "fish": {
          "path": "fish"
        },
        "tmux": {
          "path": "tmux",
          "icon": "terminal-tmux"
        },
        "pwsh": {
          "path": "pwsh",
          "icon": "terminal-powershell"
        }
      },
      "scope": 3
    },
    "terminal.integrated.useWslProfiles": {
      "description": "Controls whether or not WSL distros are shown in the terminal dropdown",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.ignoreProcessNames": {
      "markdownDescription": "A set of process names to ignore when using the `#terminal.integrated.confirmOnKill#` setting.",
      "type": "array",
      "items": {
        "type": "string",
        "uniqueItems": true
      },
      "default": [
        "starship",
        "oh-my-posh",
        "bash",
        "zsh"
      ],
      "defaultDefaultValue": [
        "starship",
        "oh-my-posh",
        "bash",
        "zsh"
      ],
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.sendKeybindingsToShell": {
      "markdownDescription": "Dispatches most keybindings to the terminal instead of the workbench, overriding `#terminal.integrated.commandsToSkipShell#`, which can be used alternatively for fine tuning.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.enabled": {
      "description": "Controls whether terminal tabs display as a list to the side of the terminal. When this is disabled a dropdown will display instead.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.enableAnimation": {
      "description": "Controls whether terminal tab statuses support animation (eg. in progress tasks).",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.hideCondition": {
      "description": "Controls whether the terminal tabs view will hide under certain conditions.",
      "type": "string",
      "enum": [
        "never",
        "singleTerminal",
        "singleGroup"
      ],
      "enumDescriptions": [
        "Never hide the terminal tabs view",
        "Hide the terminal tabs view when there is only a single terminal opened",
        "Hide the terminal tabs view when there is only a single terminal group opened"
      ],
      "default": "singleTerminal",
      "defaultDefaultValue": "singleTerminal",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.showActiveTerminal": {
      "description": "Shows the active terminal information in the view. This is particularly useful when the title within the tabs aren't visible.",
      "type": "string",
      "enum": [
        "always",
        "singleTerminal",
        "singleTerminalOrNarrow",
        "never"
      ],
      "enumDescriptions": [
        "Always show the active terminal",
        "Show the active terminal when it is the only terminal opened",
        "Show the active terminal when it is the only terminal opened or when the tabs view is in its narrow textless state",
        "Never show the active terminal"
      ],
      "default": "singleTerminalOrNarrow",
      "defaultDefaultValue": "singleTerminalOrNarrow",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.showActions": {
      "description": "Controls whether terminal split and kill buttons are displays next to the new terminal button.",
      "type": "string",
      "enum": [
        "always",
        "singleTerminal",
        "singleTerminalOrNarrow",
        "never"
      ],
      "enumDescriptions": [
        "Always show the actions",
        "Show the actions when it is the only terminal opened",
        "Show the actions when it is the only terminal opened or when the tabs view is in its narrow textless state",
        "Never show the actions"
      ],
      "default": "singleTerminalOrNarrow",
      "defaultDefaultValue": "singleTerminalOrNarrow",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.location": {
      "type": "string",
      "enum": [
        "left",
        "right"
      ],
      "enumDescriptions": [
        "Show the terminal tabs view to the left of the terminal",
        "Show the terminal tabs view to the right of the terminal"
      ],
      "default": "right",
      "description": "Controls the location of the terminal tabs, either to the left or right of the actual terminal(s).",
      "defaultDefaultValue": "right",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.defaultLocation": {
      "type": "string",
      "enum": [
        "editor",
        "view"
      ],
      "enumDescriptions": [
        "Create terminals in the editor",
        "Create terminals in the terminal view"
      ],
      "default": "view",
      "description": "Controls where newly created terminals will appear.",
      "defaultDefaultValue": "view",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.focusMode": {
      "type": "string",
      "enum": [
        "singleClick",
        "doubleClick"
      ],
      "enumDescriptions": [
        "Focus the terminal when clicking a terminal tab",
        "Focus the terminal when double-clicking a terminal tab"
      ],
      "default": "doubleClick",
      "description": "Controls whether focusing the terminal of a tab happens on double or single click.",
      "defaultDefaultValue": "doubleClick",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.macOptionIsMeta": {
      "description": "Controls whether to treat the option key as the meta key in the terminal on macOS.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.macOptionClickForcesSelection": {
      "description": "Controls whether to force selection when using Option+click on macOS. This will force a regular (line) selection and disallow the use of column selection mode. This enables copying and pasting using the regular terminal selection, for example, when mouse mode is enabled in tmux.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.altClickMovesCursor": {
      "markdownDescription": "If enabled, alt/option + click will reposition the prompt cursor to underneath the mouse when `#editor.multiCursorModifier#` is set to `'alt'` (the default value). This may not work reliably depending on your shell.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.copyOnSelection": {
      "description": "Controls whether text selected in the terminal will be copied to the clipboard.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.enableMultiLinePasteWarning": {
      "markdownDescription": "Controls whether to show a warning dialog when pasting multiple lines into the terminal.",
      "type": "string",
      "enum": [
        "auto",
        "always",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Enable the warning but do not show it when:\n\n- Bracketed paste mode is enabled (the shell supports multi-line paste natively)\n- The paste is handled by the shell's readline (in the case of pwsh)",
        "Always show the warning if the text contains a new line.",
        "Never show the warning."
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.drawBoldTextInBrightColors": {
      "description": "Controls whether bold text in the terminal will always use the \"bright\" ANSI color variant.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.fontFamily": {
      "markdownDescription": "Controls the font family of the terminal. Defaults to `#editor.fontFamily#`'s value.",
      "type": "string",
      "default": "",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.fontSize": {
      "description": "Controls the font size in pixels of the terminal.",
      "type": "number",
      "default": 14,
      "minimum": 6,
      "maximum": 100,
      "defaultDefaultValue": 14,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.letterSpacing": {
      "description": "Controls the letter spacing of the terminal. This is an integer value which represents the number of additional pixels to add between characters.",
      "type": "number",
      "default": 0,
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.lineHeight": {
      "description": "Controls the line height of the terminal. This number is multiplied by the terminal font size to get the actual line-height in pixels.",
      "type": "number",
      "default": 1,
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.minimumContrastRatio": {
      "markdownDescription": "When set, the foreground color of each cell will change to try meet the contrast ratio specified. Note that this will not apply to `powerline` characters per #146406. Example values:\n\n- 1: Do nothing and use the standard theme colors.\n- 4.5: [WCAG AA compliance (minimum)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html) (default).\n- 7: [WCAG AAA compliance (enhanced)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast7.html).\n- 21: White on black or black on white.",
      "type": "number",
      "default": 4.5,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": 4.5,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabStopWidth": {
      "markdownDescription": "The number of cells in a tab stop.",
      "type": "number",
      "minimum": 1,
      "default": 8,
      "defaultDefaultValue": 8,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.fastScrollSensitivity": {
      "markdownDescription": "Scrolling speed multiplier when pressing `Alt`.",
      "type": "number",
      "default": 5,
      "defaultDefaultValue": 5,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.mouseWheelScrollSensitivity": {
      "markdownDescription": "A multiplier to be used on the `deltaY` of mouse wheel scroll events.",
      "type": "number",
      "default": 1,
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.bellDuration": {
      "markdownDescription": "The number of milliseconds to show the bell within a terminal tab when triggered.",
      "type": "number",
      "default": 1000,
      "defaultDefaultValue": 1000,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.fontWeight": {
      "anyOf": [
        {
          "type": "number",
          "minimum": 1,
          "maximum": 1000,
          "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
        },
        {
          "type": "string",
          "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
        },
        {
          "enum": [
            "normal",
            "bold",
            "100",
            "200",
            "300",
            "400",
            "500",
            "600",
            "700",
            "800",
            "900"
          ]
        }
      ],
      "description": "The font weight to use within the terminal for non-bold text. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
      "default": "normal",
      "defaultDefaultValue": "normal",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.fontWeightBold": {
      "anyOf": [
        {
          "type": "number",
          "minimum": 1,
          "maximum": 1000,
          "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
        },
        {
          "type": "string",
          "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
        },
        {
          "enum": [
            "normal",
            "bold",
            "100",
            "200",
            "300",
            "400",
            "500",
            "600",
            "700",
            "800",
            "900"
          ]
        }
      ],
      "description": "The font weight to use within the terminal for bold text. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
      "default": "bold",
      "defaultDefaultValue": "bold",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.cursorBlinking": {
      "description": "Controls whether the terminal cursor blinks.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.cursorStyle": {
      "description": "Controls the style of terminal cursor when the terminal is focused.",
      "enum": [
        "block",
        "line",
        "underline"
      ],
      "default": "block",
      "defaultDefaultValue": "block",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.cursorStyleInactive": {
      "description": "Controls the style of terminal cursor when the terminal is not focused.",
      "enum": [
        "outline",
        "block",
        "line",
        "underline",
        "none"
      ],
      "default": "outline",
      "defaultDefaultValue": "outline",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.cursorWidth": {
      "markdownDescription": "Controls the width of the cursor when `#terminal.integrated.cursorStyle#` is set to `line`.",
      "type": "number",
      "default": 1,
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.scrollback": {
      "description": "Controls the maximum number of lines the terminal keeps in its buffer. We pre-allocate memory based on this value in order to ensure a smooth experience. As such, as the value increases, so will the amount of memory.",
      "type": "number",
      "default": 1000,
      "defaultDefaultValue": 1000,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.detectLocale": {
      "markdownDescription": "Controls whether to detect and set the `$LANG` environment variable to a UTF-8 compliant option since VS Code's terminal only supports UTF-8 encoded data coming from the shell.",
      "type": "string",
      "enum": [
        "auto",
        "off",
        "on"
      ],
      "markdownEnumDescriptions": [
        "Set the `$LANG` environment variable if the existing variable does not exist or it does not end in `'.UTF-8'`.",
        "Do not set the `$LANG` environment variable.",
        "Always set the `$LANG` environment variable."
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.gpuAcceleration": {
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off",
        "canvas"
      ],
      "markdownEnumDescriptions": [
        "Let VS Code detect which renderer will give the best experience.",
        "Enable GPU acceleration within the terminal.",
        "Disable GPU acceleration within the terminal. The terminal will render much slower when GPU acceleration is off but it should reliably work on all systems.",
        "Use the terminal's fallback canvas renderer which uses a 2d context instead of webgl which may perform better on some systems. Note that some features are limited in the canvas renderer like opaque selection."
      ],
      "default": "auto",
      "description": "Controls whether the terminal will leverage the GPU to do its rendering.",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.separator": {
      "type": "string",
      "default": " - ",
      "markdownDescription": "Separator used by `#terminal.integrated.tabs.title#` and `#terminal.integrated.tabs.description#`.",
      "defaultDefaultValue": " - ",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.title": {
      "type": "string",
      "default": "${process}",
      "markdownDescription": "Controls the terminal title. Variables are substituted based on the context:\n- `${cwd}`: the terminal's current working directory\n- `${cwdFolder}`: the terminal's current working directory, displayed for multi-root workspaces or in a single root workspace when the value differs from the initial working directory. On Windows, this will only be displayed when shell integration is enabled.\n- `${workspaceFolder}`: the workspace in which the terminal was launched\n- `${local}`: indicates a local terminal in a remote workspace\n- `${process}`: the name of the terminal process\n- `${separator}`: a conditional separator (` - `) that only shows when surrounded by variables with values or static text.\n- `${sequence}`: the name provided to the terminal by the process\n- `${task}`: indicates this terminal is associated with a task",
      "defaultDefaultValue": "${process}",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.description": {
      "type": "string",
      "default": "${task}${separator}${local}${separator}${cwdFolder}",
      "markdownDescription": "Controls the terminal description, which appears to the right of the title. Variables are substituted based on the context:\n- `${cwd}`: the terminal's current working directory\n- `${cwdFolder}`: the terminal's current working directory, displayed for multi-root workspaces or in a single root workspace when the value differs from the initial working directory. On Windows, this will only be displayed when shell integration is enabled.\n- `${workspaceFolder}`: the workspace in which the terminal was launched\n- `${local}`: indicates a local terminal in a remote workspace\n- `${process}`: the name of the terminal process\n- `${separator}`: a conditional separator (` - `) that only shows when surrounded by variables with values or static text.\n- `${sequence}`: the name provided to the terminal by the process\n- `${task}`: indicates this terminal is associated with a task",
      "defaultDefaultValue": "${task}${separator}${local}${separator}${cwdFolder}",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.rightClickBehavior": {
      "type": "string",
      "enum": [
        "default",
        "copyPaste",
        "paste",
        "selectWord",
        "nothing"
      ],
      "enumDescriptions": [
        "Show the context menu.",
        "Copy when there is a selection, otherwise paste.",
        "Paste on right click.",
        "Select the word under the cursor and show the context menu.",
        "Do nothing and pass event to terminal."
      ],
      "default": "copyPaste",
      "description": "Controls how terminal reacts to right click.",
      "defaultDefaultValue": "copyPaste",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.middleClickBehavior": {
      "type": "string",
      "enum": [
        "default",
        "paste"
      ],
      "enumDescriptions": [
        "The platform default to focus the terminal. On Linux this will also paste the selection.",
        "Paste on middle click."
      ],
      "default": "default",
      "description": "Controls how terminal reacts to middle click.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.confirmOnExit": {
      "description": "Controls whether to confirm when the window closes if there are active terminal sessions.",
      "type": "string",
      "enum": [
        "never",
        "always",
        "hasChildProcesses"
      ],
      "enumDescriptions": [
        "Never confirm.",
        "Always confirm if there are terminals.",
        "Confirm if there are any terminals that have child processes."
      ],
      "default": "never",
      "defaultDefaultValue": "never",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.confirmOnKill": {
      "description": "Controls whether to confirm killing terminals when they have child processes. When set to editor, terminals in the editor area will be marked as changed when they have child processes. Note that child process detection may not work well for shells like Git Bash which don't run their processes as child processes of the shell.",
      "type": "string",
      "enum": [
        "never",
        "editor",
        "panel",
        "always"
      ],
      "enumDescriptions": [
        "Never confirm.",
        "Confirm if the terminal is in the editor.",
        "Confirm if the terminal is in the panel.",
        "Confirm if the terminal is either in the editor or panel."
      ],
      "default": "editor",
      "defaultDefaultValue": "editor",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.enableBell": {
      "markdownDeprecationMessage": "This is now deprecated. Instead use the `terminal.integrated.enableVisualBell` and `accessibility.signals.terminalBell` settings.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false,
      "deprecationMessage": "This is now deprecated. Instead use the `terminal.integrated.enableVisualBell` and `accessibility.signals.terminalBell` settings."
    },
    "terminal.integrated.enableVisualBell": {
      "description": "Controls whether the visual terminal bell is enabled. This shows up next to the terminal's name.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.commandsToSkipShell": {
      "markdownDescription": "A set of command IDs whose keybindings will not be sent to the shell but instead always be handled by VS Code. This allows keybindings that would normally be consumed by the shell to act instead the same as when the terminal is not focused, for example `Ctrl+P` to launch Quick Open.\n\n&nbsp;\n\nMany commands are skipped by default. To override a default and pass that command's keybinding to the shell instead, add the command prefixed with the `-` character. For example add `-workbench.action.quickOpen` to allow `Ctrl+P` to reach the shell.\n\n&nbsp;\n\nThe following list of default skipped commands is truncated when viewed in Settings Editor. To see the full list, [open the default settings JSON](command:workbench.action.openRawDefaultSettings 'Open Default Settings (JSON)') and search for the first command from the list below.\n\n&nbsp;\n\nDefault Skipped Commands:\n\n- editor.action.accessibilityHelp\n- editor.action.toggleTabFocusMode\n- notification.acceptPrimaryAction\n- notifications.hideList\n- notifications.hideToasts\n- runCommands\n- workbench.action.closeQuickOpen\n- workbench.action.debug.continue\n- workbench.action.debug.pause\n- workbench.action.debug.restart\n- workbench.action.debug.run\n- workbench.action.debug.start\n- workbench.action.debug.stepInto\n- workbench.action.debug.stepOut\n- workbench.action.debug.stepOver\n- workbench.action.debug.stop\n- workbench.action.firstEditorInGroup\n- workbench.action.focusActiveEditorGroup\n- workbench.action.focusEighthEditorGroup\n- workbench.action.focusFifthEditorGroup\n- workbench.action.focusFirstEditorGroup\n- workbench.action.focusFourthEditorGroup\n- workbench.action.focusLastEditorGroup\n- workbench.action.focusNextPart\n- workbench.action.focusPreviousPart\n- workbench.action.focusSecondEditorGroup\n- workbench.action.focusSeventhEditorGroup\n- workbench.action.focusSixthEditorGroup\n- workbench.action.focusThirdEditorGroup\n- workbench.action.lastEditorInGroup\n- workbench.action.navigateDown\n- workbench.action.navigateLeft\n- workbench.action.navigateRight\n- workbench.action.navigateUp\n- workbench.action.nextEditor\n- workbench.action.nextEditorInGroup\n- workbench.action.nextPanelView\n- workbench.action.nextSideBarView\n- workbench.action.openNextRecentlyUsedEditor\n- workbench.action.openNextRecentlyUsedEditorInGroup\n- workbench.action.openPreviousRecentlyUsedEditor\n- workbench.action.openPreviousRecentlyUsedEditorInGroup\n- workbench.action.previousEditor\n- workbench.action.previousEditorInGroup\n- workbench.action.previousPanelView\n- workbench.action.previousSideBarView\n- workbench.action.quickOpen\n- workbench.action.quickOpenLeastRecentlyUsedEditor\n- workbench.action.quickOpenLeastRecentlyUsedEditorInGroup\n- workbench.action.quickOpenPreviousEditor\n- workbench.action.quickOpenPreviousRecentlyUsedEditor\n- workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup\n- workbench.action.quickOpenView\n- workbench.action.showCommands\n- workbench.action.tasks.build\n- workbench.action.tasks.reRunTask\n- workbench.action.tasks.restartTask\n- workbench.action.tasks.runTask\n- workbench.action.tasks.showLog\n- workbench.action.tasks.showTasks\n- workbench.action.tasks.terminate\n- workbench.action.tasks.test\n- workbench.action.terminal.acceptSelectedSuggestion\n- workbench.action.terminal.chat.cancel\n- workbench.action.terminal.chat.close\n- workbench.action.terminal.chat.discard\n- workbench.action.terminal.chat.feedbackHelpful\n- workbench.action.terminal.chat.feedbackReportIssue\n- workbench.action.terminal.chat.feedbackUnhelpful\n- workbench.action.terminal.chat.insertCommand\n- workbench.action.terminal.chat.makeRequest\n- workbench.action.terminal.chat.runCommand\n- workbench.action.terminal.chat.start\n- workbench.action.terminal.chat.viewInChat\n- workbench.action.terminal.clear\n- workbench.action.terminal.clearSelection\n- workbench.action.terminal.copyAndClearSelection\n- workbench.action.terminal.copyLastCommand\n- workbench.action.terminal.copyLastCommandAndLastCommandOutput\n- workbench.action.terminal.copyLastCommandOutput\n- workbench.action.terminal.copySelection\n- workbench.action.terminal.copySelectionAsHtml\n- workbench.action.terminal.deleteToLineStart\n- workbench.action.terminal.deleteWordLeft\n- workbench.action.terminal.deleteWordRight\n- workbench.action.terminal.findNext\n- workbench.action.terminal.findPrevious\n- workbench.action.terminal.focus\n- workbench.action.terminal.focusAccessibleBuffer\n- workbench.action.terminal.focusAtIndex1\n- workbench.action.terminal.focusAtIndex2\n- workbench.action.terminal.focusAtIndex3\n- workbench.action.terminal.focusAtIndex4\n- workbench.action.terminal.focusAtIndex5\n- workbench.action.terminal.focusAtIndex6\n- workbench.action.terminal.focusAtIndex7\n- workbench.action.terminal.focusAtIndex8\n- workbench.action.terminal.focusAtIndex9\n- workbench.action.terminal.focusFind\n- workbench.action.terminal.focusHover\n- workbench.action.terminal.focusNext\n- workbench.action.terminal.focusNextPane\n- workbench.action.terminal.focusPrevious\n- workbench.action.terminal.focusPreviousPane\n- workbench.action.terminal.goToRecentDirectory\n- workbench.action.terminal.hideFind\n- workbench.action.terminal.hideSuggestWidget\n- workbench.action.terminal.kill\n- workbench.action.terminal.killEditor\n- workbench.action.terminal.moveToEditor\n- workbench.action.terminal.moveToLineEnd\n- workbench.action.terminal.moveToLineStart\n- workbench.action.terminal.moveToTerminalPanel\n- workbench.action.terminal.new\n- workbench.action.terminal.newInActiveWorkspace\n- workbench.action.terminal.paste\n- workbench.action.terminal.pasteSelection\n- workbench.action.terminal.resizePaneDown\n- workbench.action.terminal.resizePaneLeft\n- workbench.action.terminal.resizePaneRight\n- workbench.action.terminal.resizePaneUp\n- workbench.action.terminal.runActiveFile\n- workbench.action.terminal.runRecentCommand\n- workbench.action.terminal.runSelectedText\n- workbench.action.terminal.scrollDown\n- workbench.action.terminal.scrollDownPage\n- workbench.action.terminal.scrollToBottom\n- workbench.action.terminal.scrollToNextCommand\n- workbench.action.terminal.scrollToPreviousCommand\n- workbench.action.terminal.scrollToTop\n- workbench.action.terminal.scrollUp\n- workbench.action.terminal.scrollUpPage\n- workbench.action.terminal.selectAll\n- workbench.action.terminal.selectNextPageSuggestion\n- workbench.action.terminal.selectNextSuggestion\n- workbench.action.terminal.selectPrevPageSuggestion\n- workbench.action.terminal.selectPrevSuggestion\n- workbench.action.terminal.selectToNextCommand\n- workbench.action.terminal.selectToNextLine\n- workbench.action.terminal.selectToPreviousCommand\n- workbench.action.terminal.selectToPreviousLine\n- workbench.action.terminal.sendSequence\n- workbench.action.terminal.sizeToContentWidth\n- workbench.action.terminal.split\n- workbench.action.terminal.splitInActiveWorkspace\n- workbench.action.terminal.toggleFindCaseSensitive\n- workbench.action.terminal.toggleFindRegex\n- workbench.action.terminal.toggleFindWholeWord\n- workbench.action.terminal.toggleTerminal\n- workbench.action.toggleFullScreen\n- workbench.action.toggleMaximizedPanel\n- workbench.action.togglePanel",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "defaultDefaultValue": [],
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.allowChords": {
      "markdownDescription": "Whether or not to allow chord keybindings in the terminal. Note that when this is true and the keystroke results in a chord it will bypass `#terminal.integrated.commandsToSkipShell#`, setting this to false is particularly useful when you want ctrl+k to go to your shell (not VS Code).",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.allowMnemonics": {
      "markdownDescription": "Whether to allow menubar mnemonics (for example Alt+F) to trigger the open of the menubar. Note that this will cause all alt keystrokes to skip the shell when true. This does nothing on macOS.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.env.osx": {
      "restricted": true,
      "markdownDescription": "Object with environment variables that will be added to the VS Code process to be used by the terminal on macOS. Set to `null` to delete the environment variable.",
      "type": "object",
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ]
      },
      "default": {},
      "defaultDefaultValue": {},
      "scope": 3
    },
    "terminal.integrated.env.linux": {
      "restricted": true,
      "markdownDescription": "Object with environment variables that will be added to the VS Code process to be used by the terminal on Linux. Set to `null` to delete the environment variable.",
      "type": "object",
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ]
      },
      "default": {},
      "defaultDefaultValue": {},
      "scope": 3
    },
    "terminal.integrated.env.windows": {
      "restricted": true,
      "markdownDescription": "Object with environment variables that will be added to the VS Code process to be used by the terminal on Windows. Set to `null` to delete the environment variable.",
      "type": "object",
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ]
      },
      "default": {},
      "defaultDefaultValue": {},
      "scope": 3
    },
    "terminal.integrated.environmentChangesIndicator": {
      "markdownDescription": "Whether to display the environment changes indicator on each terminal which explains whether extensions have made, or want to make changes to the terminal's environment.",
      "type": "string",
      "enum": [
        "off",
        "on",
        "warnonly"
      ],
      "enumDescriptions": [
        "Disable the indicator.",
        "Enable the indicator.",
        "Only show the warning indicator when a terminal's environment is 'stale', not the information indicator that shows a terminal has had its environment modified by an extension."
      ],
      "default": "warnonly",
      "defaultDefaultValue": "warnonly",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.environmentChangesRelaunch": {
      "markdownDescription": "Whether to relaunch terminals automatically if extensions want to contribute to their environment and have not been interacted with yet.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.showExitAlert": {
      "description": "Controls whether to show the alert \"The terminal process terminated with exit code\" when exit code is non-zero.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.splitCwd": {
      "description": "Controls the working directory a split terminal starts with.",
      "type": "string",
      "enum": [
        "workspaceRoot",
        "initial",
        "inherited"
      ],
      "enumDescriptions": [
        "A new split terminal will use the workspace root as the working directory. In a multi-root workspace a choice for which root folder to use is offered.",
        "A new split terminal will use the working directory that the parent terminal started with.",
        "On macOS and Linux, a new split terminal will use the working directory of the parent terminal. On Windows, this behaves the same as initial."
      ],
      "default": "inherited",
      "defaultDefaultValue": "inherited",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.windowsEnableConpty": {
      "description": "Whether to use ConPTY for Windows terminal process communication (requires Windows 10 build number 18309+). Winpty will be used if this is false.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.wordSeparators": {
      "markdownDescription": "A string containing all characters to be considered word separators when double-clicking to select word and in the fallback 'word' link detection. Since this is used for link detection, including characters such as `:` that are used when detecting links will cause the line and column part of links like `file:10:5` to be ignored.",
      "type": "string",
      "default": " ()[]{}',\"`─‘’“”|",
      "defaultDefaultValue": " ()[]{}',\"`─‘’“”|",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.enableFileLinks": {
      "description": "Whether to enable file links in terminals. Links can be slow when working on a network drive in particular because each file link is verified against the file system. Changing this will take effect only in new terminals.",
      "type": "string",
      "enum": [
        "off",
        "on",
        "notRemote"
      ],
      "enumDescriptions": [
        "Always off.",
        "Always on.",
        "Enable only when not in a remote workspace."
      ],
      "default": "on",
      "defaultDefaultValue": "on",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.allowedLinkSchemes": {
      "description": "An array of strings containing the URI schemes that the terminal is allowed to open links for. By default, only a small subset of possible schemes are allowed for security reasons.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "file",
        "http",
        "https",
        "mailto",
        "vscode",
        "vscode-insiders"
      ],
      "defaultDefaultValue": [
        "file",
        "http",
        "https",
        "mailto",
        "vscode",
        "vscode-insiders"
      ],
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.unicodeVersion": {
      "type": "string",
      "enum": [
        "6",
        "11"
      ],
      "enumDescriptions": [
        "Version 6 of Unicode. This is an older version which should work better on older systems.",
        "Version 11 of Unicode. This version provides better support on modern systems that use modern versions of Unicode."
      ],
      "default": "11",
      "description": "Controls what version of Unicode to use when evaluating the width of characters in the terminal. If you experience emoji or other wide characters not taking up the right amount of space or backspace either deleting too much or too little then you may want to try tweaking this setting.",
      "defaultDefaultValue": "11",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.localEchoLatencyThreshold": {
      "description": "Length of network delay, in milliseconds, where local edits will be echoed on the terminal without waiting for server acknowledgement. If '0', local echo will always be on, and if '-1' it will be disabled.",
      "type": "integer",
      "minimum": -1,
      "default": 30,
      "defaultDefaultValue": 30,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.localEchoEnabled": {
      "markdownDescription": "When local echo should be enabled. This will override `#terminal.integrated.localEchoLatencyThreshold#`",
      "type": "string",
      "enum": [
        "on",
        "off",
        "auto"
      ],
      "enumDescriptions": [
        "Always enabled",
        "Always disabled",
        "Enabled only for remote workspaces"
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.localEchoExcludePrograms": {
      "description": "Local echo will be disabled when any of these program names are found in the terminal title.",
      "type": "array",
      "items": {
        "type": "string",
        "uniqueItems": true
      },
      "default": [
        "vim",
        "vi",
        "nano",
        "tmux"
      ],
      "defaultDefaultValue": [
        "vim",
        "vi",
        "nano",
        "tmux"
      ],
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.localEchoStyle": {
      "description": "Terminal style of locally echoed text; either a font style or an RGB color.",
      "default": "dim",
      "anyOf": [
        {
          "enum": [
            "bold",
            "dim",
            "italic",
            "underlined",
            "inverted",
            "#ff0000"
          ]
        },
        {
          "type": "string",
          "format": "color-hex"
        }
      ],
      "defaultDefaultValue": "dim",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.enablePersistentSessions": {
      "description": "Persist terminal sessions/history for the workspace across window reloads.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.persistentSessionReviveProcess": {
      "markdownDescription": "When the terminal process must be shut down (for example on window or application close), this determines when the previous terminal session contents/history should be restored and processes be recreated when the workspace is next opened.\n\nCaveats:\n\n- Restoring of the process current working directory depends on whether it is supported by the shell.\n- Time to persist the session during shutdown is limited, so it may be aborted when using high-latency remote connections.",
      "type": "string",
      "enum": [
        "onExit",
        "onExitAndWindowClose",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Revive the processes after the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu).",
        "Revive the processes after the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu), or when the window is closed.",
        "Never restore the terminal buffers or recreate the process."
      ],
      "default": "onExit",
      "defaultDefaultValue": "onExit",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.hideOnStartup": {
      "description": "Whether to hide the terminal view on startup, avoiding creating a terminal when there are no persistent sessions.",
      "type": "string",
      "enum": [
        "never",
        "whenEmpty",
        "always"
      ],
      "markdownEnumDescriptions": [
        "Never hide the terminal view on startup.",
        "Only hide the terminal when there are no persistent sessions restored.",
        "Always hide the terminal, even when there are persistent sessions restored."
      ],
      "default": "never",
      "defaultDefaultValue": "never",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.customGlyphs": {
      "markdownDescription": "Whether to draw custom glyphs for block element and box drawing characters instead of using the font, which typically yields better rendering with continuous lines. Note that this doesn't work when `#terminal.integrated.gpuAcceleration#` is disabled.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.rescaleOverlappingGlyphs": {
      "markdownDescription": "Whether to rescale glyphs horizontally that are a single cell wide but have glyphs that would overlap following cell(s). This typically happens for ambiguous width characters (eg. the roman numeral characters U+2160+) which aren't featured in monospace fonts. Emoji glyphs are never rescaled.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.autoReplies": {
      "markdownDescription": "A set of messages that, when encountered in the terminal, will be automatically responded to. Provided the message is specific enough, this can help automate away common responses.\n\nRemarks:\n\n- Use `\"Terminate batch job (Y/N)\": \"Y\\r\"` to automatically respond to the terminate batch job prompt on Windows.\n- The message includes escape sequences so the reply might not happen with styled text.\n- Each reply can only happen once every second.\n- Use `\"\\r\"` in the reply to mean the enter key.\n- To unset a default key, set the value to null.\n- Restart VS Code if new don't apply.",
      "type": "object",
      "additionalProperties": {
        "oneOf": [
          {
            "type": "string",
            "description": "The reply to send to the process."
          },
          {
            "type": "null"
          }
        ]
      },
      "default": {},
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.shellIntegration.enabled": {
      "restricted": true,
      "markdownDescription": "Determines whether or not shell integration is auto-injected to support features like enhanced command tracking and current working directory detection. \n\nShell integration works by injecting the shell with a startup script. The script gives VS Code insight into what is happening within the terminal.\n\nSupported shells:\n\n- Linux/macOS: bash, fish, pwsh, zsh\n - Windows: pwsh, git bash\n\nThis setting applies only when terminals are created, so you will need to restart your terminals for it to take effect.\n\n Note that the script injection may not work if you have custom arguments defined in the terminal profile, have enabled `#editor.accessibilitySupport#`, have a [complex bash `PROMPT_COMMAND`](https://code.visualstudio.com/docs/editor/integrated-terminal#_complex-bash-promptcommand), or other unsupported setup. To disable decorations, see `#terminal.integrated.shellIntegrations.decorationsEnabled#`",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3
    },
    "terminal.integrated.shellIntegration.decorationsEnabled": {
      "restricted": true,
      "markdownDescription": "When shell integration is enabled, adds a decoration for each command.",
      "type": "string",
      "enum": [
        "both",
        "gutter",
        "overviewRuler",
        "never"
      ],
      "enumDescriptions": [
        "Show decorations in the gutter (left) and overview ruler (right)",
        "Show gutter decorations to the left of the terminal",
        "Show overview ruler decorations to the right of the terminal",
        "Do not show decorations"
      ],
      "default": "both",
      "defaultDefaultValue": "both",
      "scope": 3
    },
    "terminal.integrated.shellIntegration.history": {
      "restricted": true,
      "markdownDescription": "Controls the number of recently used commands to keep in the terminal command history. Set to 0 to disable terminal command history.",
      "type": "number",
      "default": 100,
      "defaultDefaultValue": 100,
      "scope": 3
    },
    "terminal.integrated.shellIntegration.suggestEnabled": {
      "restricted": true,
      "markdownDescription": "Enables experimental terminal Intellisense suggestions for supported shells when `#terminal.integrated.shellIntegration.enabled#` is set to `true`. If shell integration is installed manually, `VSCODE_SUGGEST` needs to be set to `1` before calling the script.",
      "type": "boolean",
      "default": false,
      "markdownDeprecationMessage": "This is an experimental setting and may break the terminal! Use at your own risk.",
      "defaultDefaultValue": false,
      "scope": 3,
      "deprecationMessage": "This is an experimental setting and may break the terminal! Use at your own risk."
    },
    "terminal.integrated.smoothScrolling": {
      "markdownDescription": "Controls whether the terminal will scroll using an animation.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.ignoreBracketedPasteMode": {
      "markdownDescription": "Controls whether the terminal will ignore bracketed paste mode even if the terminal was put into the mode, omitting the `\\x1b[200~` and `\\x1b[201~` sequences when pasting. This is useful when the shell is not respecting the mode which can happen in sub-shells for example.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.enableImages": {
      "restricted": true,
      "markdownDescription": "Enables image support in the terminal, this will only work when `#terminal.integrated.gpuAcceleration#` is enabled. Both sixel and iTerm's inline image protocol are supported on Linux and macOS, Windows support will light up automatically when ConPTY passes through the sequences. Images will currently not be restored between window reloads/reconnects.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3
    },
    "terminal.integrated.focusAfterRun": {
      "markdownDescription": "Controls whether the terminal, accessible buffer, or neither will be focused after `Terminal: Run Selected Text In Active Terminal` has been run.",
      "enum": [
        "terminal",
        "accessible-buffer",
        "none"
      ],
      "default": "none",
      "tags": [
        "accessibility"
      ],
      "markdownEnumDescriptions": [
        "Always focus the terminal.",
        "Always focus the accessible buffer.",
        "Do nothing."
      ],
      "defaultDefaultValue": "none",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.accessibleViewPreserveCursorPosition": {
      "markdownDescription": "Preserve the cursor position on reopen of the terminal's accessible view rather than setting it to the bottom of the buffer.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.accessibleViewFocusOnCommandExecution": {
      "markdownDescription": "Focus the terminal accessible view when a command is executed.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.stickyScroll.enabled": {
      "markdownDescription": "Shows the current command at the top of the terminal.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.stickyScroll.maxLineCount": {
      "markdownDescription": "Defines the maximum number of sticky lines to show. Sticky scroll lines will never exceed 40% of the viewport regardless of this setting.",
      "type": "number",
      "default": 5,
      "minimum": 1,
      "maximum": 10,
      "defaultDefaultValue": 5,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.mouseWheelZoom": {
      "markdownDescription": "Zoom the font of the terminal when using mouse wheel and holding `Ctrl`.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.explorerKind": {
      "type": "string",
      "enum": [
        "integrated",
        "external",
        "both"
      ],
      "enumDescriptions": [
        "Use VS Code's integrated terminal.",
        "Use the configured external terminal.",
        "Use the other two together."
      ],
      "description": "When opening a file from the Explorer in a terminal, determines what kind of terminal will be launched",
      "default": "integrated",
      "defaultDefaultValue": "integrated",
      "scope": 3,
      "restricted": false
    },
    "terminal.sourceControlRepositoriesKind": {
      "type": "string",
      "enum": [
        "integrated",
        "external",
        "both"
      ],
      "enumDescriptions": [
        "Use VS Code's integrated terminal.",
        "Use the configured external terminal.",
        "Use the other two together."
      ],
      "description": "When opening a repository from the Source Control Repositories view in a terminal, determines what kind of terminal will be launched",
      "default": "integrated",
      "defaultDefaultValue": "integrated",
      "scope": 3,
      "restricted": false
    },
    "css.trace.server": {
      "type": "string",
      "scope": 3,
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the CSS language server.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "css.format.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enable/disable default CSS formatter.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.format.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enable/disable default SCSS formatter.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.format.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enable/disable default LESS formatter.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "emmet.showExpandedAbbreviation": {
      "type": [
        "string"
      ],
      "enum": [
        "never",
        "always",
        "inMarkupAndStylesheetFilesOnly"
      ],
      "default": "always",
      "markdownDescription": "Shows expanded Emmet abbreviations as suggestions.\nThe option `\"inMarkupAndStylesheetFilesOnly\"` applies to html, haml, jade, slim, xml, xsl, css, scss, sass, less and stylus.\nThe option `\"always\"` applies to all parts of the file regardless of markup/css.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": "always",
      "restricted": false
    },
    "emmet.includeLanguages": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "markdownDescription": "Enable Emmet abbreviations in languages that are not supported by default. Add a mapping here between the language and Emmet supported language.\n For example: `{\"vue-html\": \"html\", \"javascript\": \"javascriptreact\"}`",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "emmet.variables": {
      "type": "object",
      "properties": {
        "lang": {
          "type": "string",
          "default": "en"
        },
        "charset": {
          "type": "string",
          "default": "UTF-8"
        }
      },
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "markdownDescription": "Variables to be used in Emmet snippets.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "emmet.syntaxProfiles": {
      "type": "object",
      "default": {},
      "markdownDescription": "Define profile for specified syntax or use your own profile with specific rules.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "emmet.excludeLanguages": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "markdown"
      ],
      "markdownDescription": "An array of languages where Emmet abbreviations should not be expanded.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": [
        "markdown"
      ],
      "restricted": false
    },
    "emmet.useInlineCompletions": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "If `true`, Emmet will use inline completions to suggest expansions. To prevent the non-inline completion item provider from showing up as often while this setting is `true`, turn `#editor.quickSuggestions#` to `inline` or `off` for the `other` item.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "emmet.preferences": {
      "type": "object",
      "default": {},
      "markdownDescription": "Preferences used to modify behavior of some actions and resolvers of Emmet.",
      "properties": {
        "css.intUnit": {
          "type": "string",
          "default": "px",
          "markdownDescription": "Default unit for integer values."
        },
        "css.floatUnit": {
          "type": "string",
          "default": "em",
          "markdownDescription": "Default unit for float values."
        },
        "css.propertyEnd": {
          "type": "string",
          "default": ";",
          "markdownDescription": "Symbol to be placed at the end of CSS property when expanding CSS abbreviations."
        },
        "sass.propertyEnd": {
          "type": "string",
          "default": "",
          "markdownDescription": "Symbol to be placed at the end of CSS property when expanding CSS abbreviations in Sass files."
        },
        "stylus.propertyEnd": {
          "type": "string",
          "default": "",
          "markdownDescription": "Symbol to be placed at the end of CSS property when expanding CSS abbreviations in Stylus files."
        },
        "css.valueSeparator": {
          "type": "string",
          "default": ": ",
          "markdownDescription": "Symbol to be placed at the between CSS property and value when expanding CSS abbreviations."
        },
        "sass.valueSeparator": {
          "type": "string",
          "default": ": ",
          "markdownDescription": "Symbol to be placed at the between CSS property and value when expanding CSS abbreviations in Sass files."
        },
        "stylus.valueSeparator": {
          "type": "string",
          "default": " ",
          "markdownDescription": "Symbol to be placed at the between CSS property and value when expanding CSS abbreviations in Stylus files."
        },
        "bem.elementSeparator": {
          "type": "string",
          "default": "__",
          "markdownDescription": "Element separator used for classes when using the BEM filter."
        },
        "bem.modifierSeparator": {
          "type": "string",
          "default": "_",
          "markdownDescription": "Modifier separator used for classes when using the BEM filter."
        },
        "filter.commentBefore": {
          "type": "string",
          "default": "",
          "markdownDescription": "A definition of comment that should be placed before matched element when comment filter is applied."
        },
        "filter.commentAfter": {
          "type": "string",
          "default": "\n<!-- /[#ID][.CLASS] -->",
          "markdownDescription": "A definition of comment that should be placed after matched element when comment filter is applied."
        },
        "filter.commentTrigger": {
          "type": "array",
          "default": [
            "id",
            "class"
          ],
          "markdownDescription": "A comma-separated list of attribute names that should exist in the abbreviation for the comment filter to be applied."
        },
        "format.noIndentTags": {
          "type": "array",
          "default": [
            "html"
          ],
          "markdownDescription": "An array of tag names that should never get inner indentation."
        },
        "format.forceIndentationForTags": {
          "type": "array",
          "default": [
            "body"
          ],
          "markdownDescription": "An array of tag names that should always get inner indentation."
        },
        "profile.allowCompactBoolean": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "If `true`, compact notation of boolean attributes are produced."
        },
        "css.webkitProperties": {
          "type": "string",
          "default": null,
          "markdownDescription": "Comma separated CSS properties that get the 'webkit' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'webkit' prefix."
        },
        "css.mozProperties": {
          "type": "string",
          "default": null,
          "markdownDescription": "Comma separated CSS properties that get the 'moz' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'moz' prefix."
        },
        "css.oProperties": {
          "type": "string",
          "default": null,
          "markdownDescription": "Comma separated CSS properties that get the 'o' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'o' prefix."
        },
        "css.msProperties": {
          "type": "string",
          "default": null,
          "markdownDescription": "Comma separated CSS properties that get the 'ms' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'ms' prefix."
        },
        "css.fuzzySearchMinScore": {
          "type": "number",
          "default": 0.3,
          "markdownDescription": "The minimum score (from 0 to 1) that fuzzy-matched abbreviation should achieve. Lower values may produce many false-positive matches, higher values may reduce possible matches."
        },
        "output.inlineBreak": {
          "type": "number",
          "default": 0,
          "markdownDescription": "The number of sibling inline elements needed for line breaks to be placed between those elements. If `0`, inline elements are always expanded onto a single line."
        },
        "output.reverseAttributes": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "If `true`, reverses attribute merging directions when resolving snippets."
        },
        "output.selfClosingStyle": {
          "type": "string",
          "enum": [
            "html",
            "xhtml",
            "xml"
          ],
          "default": "html",
          "markdownDescription": "Style of self-closing tags: html (`<br>`), xml (`<br/>`) or xhtml (`<br />`)."
        },
        "css.color.short": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "If `true`, color values like `#f` will be expanded to `#fff` instead of `#ffffff`."
        }
      },
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "emmet.showSuggestionsAsSnippets": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "If `true`, then Emmet suggestions will show up as snippets allowing you to order them as per `#editor.snippetSuggestions#` setting.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "emmet.optimizeStylesheetParsing": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When set to `false`, the whole file is parsed to determine if current position is valid for expanding Emmet abbreviations. When set to `true`, only the content around the current position in CSS/SCSS/Less files is parsed.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.autoRepositoryDetection": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "subFolders",
        "openEditors"
      ],
      "enumDescriptions": [
        "Scan for both subfolders of the current opened folder and parent folders of open files.",
        "Disable automatic repository scanning.",
        "Scan for subfolders of the currently opened folder.",
        "Scan for parent folders of open files."
      ],
      "description": "Configures when repositories should be automatically detected.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.autorefresh": {
      "type": "boolean",
      "description": "Whether auto refreshing is enabled.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.branchValidationRegex": {
      "type": "string",
      "description": "A regular expression to validate new branch names.",
      "default": "",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "git.branchWhitespaceChar": {
      "type": "string",
      "description": "The character to replace whitespace in new branch names, and to separate segments of a randomly generated branch name.",
      "default": "-",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "-",
      "restricted": false
    },
    "git.confirmSync": {
      "type": "boolean",
      "description": "Confirm before synchronizing Git repositories.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.checkoutType": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "local",
          "tags",
          "remote"
        ],
        "enumDescriptions": [
          "Local branches",
          "Tags",
          "Remote branches"
        ]
      },
      "uniqueItems": true,
      "markdownDescription": "Controls what type of Git refs are listed when running `Checkout to...`.",
      "default": [
        "local",
        "remote",
        "tags"
      ],
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [
        "local",
        "remote",
        "tags"
      ],
      "restricted": false
    },
    "git.ignoreLegacyWarning": {
      "type": "boolean",
      "description": "Ignores the legacy Git warning.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoreMissingGitWarning": {
      "type": "boolean",
      "description": "Ignores the warning when Git is missing.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoreWindowsGit27Warning": {
      "type": "boolean",
      "description": "Ignores the warning when Git 2.25 - 2.26 is installed on Windows.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoreLimitWarning": {
      "type": "boolean",
      "description": "Ignores the warning when there are too many changes in a repository.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoreRebaseWarning": {
      "type": "boolean",
      "description": "Ignores the warning when it looks like the branch might have been rebased when pulling.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.useEditorAsCommitInput": {
      "type": "boolean",
      "description": "Controls whether a full text editor will be used to author commit messages, whenever no message is provided in the commit input box.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.decorations.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether Git contributes colors and badges to the Explorer and the Open Editors view.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.openAfterClone": {
      "type": "string",
      "enum": [
        "always",
        "alwaysNewWindow",
        "whenNoFolderOpen",
        "prompt"
      ],
      "enumDescriptions": [
        "Always open in current window.",
        "Always open in a new window.",
        "Only open in current window when no folder is opened.",
        "Always prompt for action."
      ],
      "default": "prompt",
      "description": "Controls whether to open a repository automatically after cloning.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "git.showInlineOpenFileAction": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to show an inline Open File action in the Git changes view.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.showPushSuccessNotification": {
      "type": "boolean",
      "description": "Controls whether to show a notification when a push is successful.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.inputValidation": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether to show commit message input validation diagnostics.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.inputValidationLength": {
      "type": "number",
      "default": 72,
      "description": "Controls the commit message length threshold for showing a warning.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 72,
      "restricted": false
    },
    "git.inputValidationSubjectLength": {
      "type": [
        "number",
        "null"
      ],
      "default": 50,
      "markdownDescription": "Controls the commit message subject length threshold for showing a warning. Unset it to inherit the value of `#git.inputValidationLength#`.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 50,
      "restricted": false
    },
    "git.ignoredRepositories": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "scope": 3,
      "description": "List of Git repositories to ignore.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "git.allowForcePush": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether force push (with or without lease) is enabled.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.useForcePushWithLease": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether force pushing uses the safer force-with-lease variant.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.useForcePushIfIncludes": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether force pushing uses the safer force-if-includes variant. Note: This setting requires the `#git.useForcePushWithLease#` setting to be enabled, and Git version `2.30.0` or later.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.confirmForcePush": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to ask for confirmation before force-pushing.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.allowNoVerifyCommit": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether commits without running pre-commit and commit-msg hooks are allowed.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.confirmNoVerifyCommit": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to ask for confirmation before committing without verification.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.branchSortOrder": {
      "type": "string",
      "enum": [
        "committerdate",
        "alphabetically"
      ],
      "default": "committerdate",
      "description": "Controls the sort order for branches.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "committerdate",
      "restricted": false
    },
    "git.terminalAuthentication": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to enable VS Code to be the authentication handler for Git processes spawned in the Integrated Terminal. Note: Terminals need to be restarted to pick up a change in this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.terminalGitEditor": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether to enable VS Code to be the Git editor for Git processes spawned in the integrated terminal. Note: Terminals need to be restarted to pick up a change in this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.useIntegratedAskPass": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether GIT_ASKPASS should be overwritten to use the integrated version.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.githubAuthentication": {
      "markdownDeprecationMessage": "This setting is now deprecated, please use `#github.gitAuthentication#` instead.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "default": null,
      "restricted": false,
      "deprecationMessage": "This setting is now deprecated, please use `#github.gitAuthentication#` instead."
    },
    "git.timeline.date": {
      "type": "string",
      "enum": [
        "committed",
        "authored"
      ],
      "enumDescriptions": [
        "Use the committed date",
        "Use the authored date"
      ],
      "default": "committed",
      "description": "Controls which date to use for items in the Timeline view.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "committed",
      "restricted": false
    },
    "git.timeline.showAuthor": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to show the commit author in the Timeline view.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.timeline.showUncommitted": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether to show uncommitted changes in the Timeline view.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.commandsToLog": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "markdownDescription": "List of git commands (ex: commit, push) that would have their `stdout` logged to the [git output](command:git.showOutput). If the git command has a client-side hook configured, the client-side hook's `stdout` will also be logged to the [git output](command:git.showOutput).",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "git.mergeEditor": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Open the merge editor for files that are currently under conflict.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "github.gitProtocol": {
      "type": "string",
      "enum": [
        "https",
        "ssh"
      ],
      "default": "https",
      "description": "Controls which protocol is used to clone a GitHub repository",
      "scope": 3,
      "source": {
        "id": "vscode.github",
        "displayName": "GitHub"
      },
      "defaultDefaultValue": "https",
      "restricted": false
    },
    "github-enterprise.uri": {
      "type": "string",
      "description": "GitHub Enterprise Server URI",
      "scope": 3,
      "source": {
        "id": "vscode.github-authentication",
        "displayName": "GitHub Authentication"
      },
      "default": "",
      "restricted": true
    },
    "html.format.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enable/disable default HTML formatter.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.trace.server": {
      "type": "string",
      "scope": 3,
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the HTML language server.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "json.validate.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enable/disable JSON validation.",
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "json.format.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enable/disable default JSON formatter",
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "json.format.keepLines": {
      "type": "boolean",
      "scope": 3,
      "default": false,
      "description": "Keep all existing new lines when formatting.",
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "json.trace.server": {
      "type": "string",
      "scope": 3,
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the JSON language server.",
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "json.colorDecorators.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enables or disables color decorators",
      "deprecationMessage": "The setting `json.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`.",
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "json.maxItemsComputed": {
      "type": "number",
      "default": 5000,
      "description": "The maximum number of outline symbols and folding regions computed (limited for performance reasons).",
      "scope": 3,
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": 5000,
      "restricted": false
    },
    "json.schemaDownload.enable": {
      "type": "boolean",
      "default": true,
      "description": "When enabled, JSON schemas can be fetched from http and https locations.",
      "tags": [
        "usesOnlineServices"
      ],
      "scope": 3,
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.trace.extension": {
      "type": "string",
      "enum": [
        "off",
        "verbose"
      ],
      "default": "off",
      "description": "Enable debug logging for the Markdown extension.",
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "markdown.trace.server": {
      "type": "string",
      "scope": 3,
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the Markdown language server.",
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "markdown.server.log": {
      "type": "string",
      "scope": 3,
      "enum": [
        "off",
        "debug",
        "trace"
      ],
      "default": "off",
      "description": "Controls the logging level of the Markdown language server.",
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "markdown.editor.drop.copyIntoWorkspace": {
      "type": "string",
      "markdownDescription": "Controls if files outside of the workspace that are dropped into a Markdown editor should be copied into the workspace.\n\nUse `#markdown.copyFiles.destination#` to configure where copied dropped files should be created",
      "default": "mediaFiles",
      "enum": [
        "mediaFiles",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Try to copy external image and video files into the workspace.",
        "Do not copy external files into the workspace."
      ],
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "mediaFiles",
      "restricted": false
    },
    "markdown.editor.filePaste.copyIntoWorkspace": {
      "type": "string",
      "markdownDescription": "Controls if files outside of the workspace that are pasted into a Markdown editor should be copied into the workspace.\n\nUse `#markdown.copyFiles.destination#` to configure where copied files should be created.",
      "default": "mediaFiles",
      "enum": [
        "mediaFiles",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Try to copy external image and video files into the workspace.",
        "Do not copy external files into the workspace."
      ],
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "mediaFiles",
      "restricted": false
    },
    "markdown.editor.filePaste.videoSnippet": {
      "type": "string",
      "markdownDescription": "Snippet used when adding videos to Markdown. This snippet can use the following variables:\n- `${src}` — The resolved path of the video file.\n- `${title}` — The title used for the video. A snippet placeholder will automatically be created for this variable.",
      "default": "<video controls src=\"${src}\" title=\"${title}\"></video>",
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "<video controls src=\"${src}\" title=\"${title}\"></video>",
      "restricted": false
    },
    "markdown.editor.filePaste.audioSnippet": {
      "type": "string",
      "markdownDescription": "Snippet used when adding audio to Markdown. This snippet can use the following variables:\n- `${src}` — The resolved path of the audio  file.\n- `${title}` — The title used for the audio. A snippet placeholder will automatically be created for this variable.",
      "default": "<audio controls src=\"${src}\" title=\"${title}\"></audio>",
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "<audio controls src=\"${src}\" title=\"${title}\"></audio>",
      "restricted": false
    },
    "markdown.updateLinksOnFileMove.enabled": {
      "type": "string",
      "enum": [
        "prompt",
        "always",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Prompt on each file move.",
        "Always update links automatically.",
        "Never try to update link and don't prompt."
      ],
      "default": "never",
      "markdownDescription": "Try to update links in Markdown files when a file is renamed/moved in the workspace. Use `#markdown.updateLinksOnFileMove.include#` to configure which files trigger link updates.",
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "never",
      "restricted": false
    },
    "markdown.updateLinksOnFileMove.include": {
      "type": "array",
      "markdownDescription": "Glob patterns that specifies files that trigger automatic link updates. See `#markdown.updateLinksOnFileMove.enabled#` for details about this feature.",
      "scope": 3,
      "items": {
        "type": "string",
        "description": "The glob pattern to match file paths against. Set to true to enable the pattern."
      },
      "default": [
        "**/*.{md,mkd,mdwn,mdown,markdown,markdn,mdtxt,mdtext,workbook}",
        "**/*.{jpg,jpe,jpeg,png,bmp,gif,ico,webp,avif,tiff,svg,mp4}"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": [
        "**/*.{md,mkd,mdwn,mdown,markdown,markdn,mdtxt,mdtext,workbook}",
        "**/*.{jpg,jpe,jpeg,png,bmp,gif,ico,webp,avif,tiff,svg,mp4}"
      ],
      "restricted": false
    },
    "markdown.updateLinksOnFileMove.enableForDirectories": {
      "type": "boolean",
      "default": true,
      "description": "Enable updating links when a directory is moved or renamed in the workspace.",
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.copyFiles.destination": {
      "type": "object",
      "markdownDescription": "Configures the path and file name of files created by copy/paste or drag and drop. This is a map of globs that match against a Markdown document path to the destination path where the new file should be created.\n\nThe destination path may use the following variables:\n\n- `${documentDirName}` — Absolute parent directory path of the Markdown document, e.g. `/Users/me/myProject/docs`.\n- `${documentRelativeDirName}` — Relative parent directory path of the Markdown document, e.g. `docs`. This is the same as `${documentDirName}` if the file is not part of a workspace.\n- `${documentFileName}` — The full filename of the Markdown document, e.g. `README.md`.\n- `${documentBaseName}` — The basename of the Markdown document, e.g. `README`.\n- `${documentExtName}` — The extension of the Markdown document, e.g. `md`.\n- `${documentFilePath}` — Absolute path of the Markdown document, e.g. `/Users/me/myProject/docs/README.md`.\n- `${documentRelativeFilePath}` — Relative path of the Markdown document, e.g. `docs/README.md`. This is the same as `${documentFilePath}` if the file is not part of a workspace.\n- `${documentWorkspaceFolder}` — The workspace folder for the Markdown document, e.g. `/Users/me/myProject`. This is the same as `${documentDirName}` if the file is not part of a workspace.\n- `${fileName}` — The file name of the dropped file, e.g. `image.png`.\n- `${fileExtName}` — The extension of the dropped file, e.g. `png`.",
      "additionalProperties": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "default": {},
      "restricted": false
    },
    "markdown.copyFiles.overwriteBehavior": {
      "type": "string",
      "markdownDescription": "Controls if files created by drop or paste should overwrite existing files.",
      "default": "nameIncrementally",
      "enum": [
        "nameIncrementally",
        "overwrite"
      ],
      "markdownEnumDescriptions": [
        "If a file with the same name already exists, append a number to the file name, for example: `image.png` becomes `image-1.png`.",
        "If a file with the same name already exists, overwrite it."
      ],
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "nameIncrementally",
      "restricted": false
    },
    "markdown.preferredMdPathExtensionStyle": {
      "type": "string",
      "default": "auto",
      "markdownDescription": "Controls if file extensions (for example `.md`) are added or not for links to Markdown files. This setting is used when file paths are added by tooling such as path completions or file renames.",
      "enum": [
        "auto",
        "includeExtension",
        "removeExtension"
      ],
      "markdownEnumDescriptions": [
        "For existing paths, try to maintain the file extension style. For new paths, add file extensions.",
        "Prefer including the file extension. For example, path completions to a file named `file.md` will insert `file.md`.",
        "Prefer removing the file extension. For example, path completions to a file named `file.md` will insert `file` without the `.md`."
      ],
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "markdown.math.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable rendering math in the built-in Markdown preview.",
      "scope": 3,
      "source": {
        "id": "vscode.markdown-math",
        "displayName": "Markdown Math"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "mediaPreview.video.autoPlay": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Start playing videos on mute automatically.",
      "scope": 3,
      "source": {
        "id": "vscode.media-preview",
        "displayName": "Media Preview"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "mediaPreview.video.loop": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Loop videos over again automatically.",
      "scope": 3,
      "source": {
        "id": "vscode.media-preview",
        "displayName": "Media Preview"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "merge-conflict.codeLens.enabled": {
      "type": "boolean",
      "description": "Create a CodeLens for merge conflict blocks within editor.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.merge-conflict",
        "displayName": "Merge Conflict"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "merge-conflict.decorators.enabled": {
      "type": "boolean",
      "description": "Create decorators for merge conflict blocks within editor.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.merge-conflict",
        "displayName": "Merge Conflict"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "merge-conflict.autoNavigateNextConflict.enabled": {
      "type": "boolean",
      "description": "Whether to automatically navigate to the next merge conflict after resolving a merge conflict.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.merge-conflict",
        "displayName": "Merge Conflict"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "merge-conflict.diffViewPosition": {
      "type": "string",
      "enum": [
        "Current",
        "Beside",
        "Below"
      ],
      "description": "Controls where the diff view should be opened when comparing changes in merge conflicts.",
      "enumDescriptions": [
        "Open the diff view in the current editor group.",
        "Open the diff view next to the current editor group.",
        "Open the diff view below the current editor group."
      ],
      "default": "Current",
      "scope": 3,
      "source": {
        "id": "vscode.merge-conflict",
        "displayName": "Merge Conflict"
      },
      "defaultDefaultValue": "Current",
      "restricted": false
    },
    "microsoft-sovereign-cloud.environment": {
      "type": "string",
      "markdownDescription": "The Sovereign Cloud to use for authentication. If you select `custom`, you must also set the `#microsoft-sovereign-cloud.customEnvironment#` setting.",
      "enum": [
        "ChinaCloud",
        "USGovernment",
        "custom"
      ],
      "enumDescriptions": [
        "Azure China",
        "Azure US Government",
        "A custom Microsoft Sovereign Cloud"
      ],
      "scope": 3,
      "source": {
        "id": "vscode.microsoft-authentication",
        "displayName": "Microsoft Account"
      },
      "default": "",
      "restricted": false
    },
    "microsoft-sovereign-cloud.customEnvironment": {
      "type": "object",
      "additionalProperties": true,
      "markdownDescription": "The custom configuration for the Sovereign Cloud to use with the Microsoft Sovereign Cloud authentication provider. This along with setting `#microsoft-sovereign-cloud.environment#` to `custom` is required to use this feature.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the custom Sovereign Cloud."
        },
        "portalUrl": {
          "type": "string",
          "description": "The portal URL for the custom Sovereign Cloud."
        },
        "managementEndpointUrl": {
          "type": "string",
          "description": "The management endpoint for the custom Sovereign Cloud."
        },
        "resourceManagerEndpointUrl": {
          "type": "string",
          "description": "The resource manager endpoint for the custom Sovereign Cloud."
        },
        "activeDirectoryEndpointUrl": {
          "type": "string",
          "description": "The Active Directory endpoint for the custom Sovereign Cloud."
        },
        "activeDirectoryResourceId": {
          "type": "string",
          "description": "The Active Directory resource ID for the custom Sovereign Cloud."
        }
      },
      "required": [
        "name",
        "portalUrl",
        "managementEndpointUrl",
        "resourceManagerEndpointUrl",
        "activeDirectoryEndpointUrl",
        "activeDirectoryResourceId"
      ],
      "scope": 3,
      "source": {
        "id": "vscode.microsoft-authentication",
        "displayName": "Microsoft Account"
      },
      "default": {},
      "restricted": false
    },
    "debug.javascript.codelens.npmScripts": {
      "enum": [
        "top",
        "all",
        "never"
      ],
      "default": "top",
      "description": "Where a \"Run\" and \"Debug\" code lens should be shown in your npm scripts. It may be on \"all\", scripts, on \"top\" of the script section, or \"never\".",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": "top",
      "restricted": false
    },
    "debug.javascript.terminalOptions": {
      "type": "object",
      "description": "Default launch options for the JavaScript debug terminal and npm scripts.",
      "default": {},
      "properties": {
        "resolveSourceMapLocations": {
          "type": [
            "array",
            "null"
          ],
          "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
          "default": [
            "${workspaceFolder}/**",
            "!**/node_modules/**"
          ],
          "items": {
            "type": "string"
          }
        },
        "outFiles": {
          "type": [
            "array"
          ],
          "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
          "default": [
            "${workspaceFolder}/**/*.(m|c|)js",
            "!**/node_modules/**"
          ],
          "items": {
            "type": "string"
          }
        },
        "pauseForSourceMap": {
          "type": "boolean",
          "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
          "default": false
        },
        "showAsyncStacks": {
          "description": "Show the async calls that led to the current call stack.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "required": [
                "onAttach"
              ],
              "properties": {
                "onAttach": {
                  "type": "number",
                  "default": 32
                }
              }
            },
            {
              "type": "object",
              "required": [
                "onceBreakpointResolved"
              ],
              "properties": {
                "onceBreakpointResolved": {
                  "type": "number",
                  "default": 32
                }
              }
            }
          ]
        },
        "skipFiles": {
          "type": "array",
          "description": "An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`",
          "default": [
            "<node_internals>/**"
          ]
        },
        "smartStep": {
          "type": "boolean",
          "description": "Automatically step through generated code that cannot be mapped back to the original source.",
          "default": true
        },
        "sourceMaps": {
          "type": "boolean",
          "description": "Use JavaScript source maps (if they exist).",
          "default": true
        },
        "sourceMapRenames": {
          "type": "boolean",
          "default": true,
          "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
        },
        "sourceMapPathOverrides": {
          "type": "object",
          "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
          "default": {
            "webpack://?:*/*": "${workspaceFolder}/*",
            "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
            "meteor://💻app/*": "${workspaceFolder}/*"
          }
        },
        "timeout": {
          "type": "number",
          "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
          "default": 10000
        },
        "timeouts": {
          "type": "object",
          "description": "Timeouts for several debugger operations.",
          "default": {},
          "properties": {
            "sourceMapMinPause": {
              "type": "number",
              "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
              "default": 1000
            },
            "sourceMapCumulativePause": {
              "type": "number",
              "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
              "default": 1000
            },
            "hoverEvaluation": {
              "type": "number",
              "description": "Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.",
              "default": 500
            }
          },
          "additionalProperties": false,
          "markdownDescription": "Timeouts for several debugger operations."
        },
        "trace": {
          "description": "Configures what diagnostic output is produced.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean",
              "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "stdio": {
                  "type": "boolean",
                  "description": "Whether to return trace data from the launched application or browser."
                },
                "logFile": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Configures where on disk logs are written."
                }
              }
            }
          ]
        },
        "outputCapture": {
          "enum": [
            "console",
            "std"
          ],
          "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
          "default": "console"
        },
        "enableContentValidation": {
          "default": true,
          "type": "boolean",
          "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
        },
        "customDescriptionGenerator": {
          "type": "string",
          "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
        },
        "customPropertiesGenerator": {
          "type": "string",
          "deprecated": true,
          "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
        },
        "cascadeTerminateToConfigurations": {
          "type": "array",
          "items": {
            "type": "string",
            "uniqueItems": true
          },
          "default": [],
          "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
        },
        "enableDWARF": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function."
        },
        "cwd": {
          "type": "string",
          "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
          "default": "${workspaceFolder}",
          "docDefault": "localRoot || ${workspaceFolder}"
        },
        "localRoot": {
          "type": [
            "string",
            "null"
          ],
          "description": "Path to the local directory containing the program.",
          "default": null
        },
        "remoteRoot": {
          "type": [
            "string",
            "null"
          ],
          "description": "Absolute path to the remote directory containing the program.",
          "default": null
        },
        "autoAttachChildProcesses": {
          "type": "boolean",
          "description": "Attach debugger to new child processes automatically.",
          "default": true
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          },
          "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
          "default": {}
        },
        "envFile": {
          "type": "string",
          "description": "Absolute path to a file containing environment variable definitions.",
          "default": "${workspaceFolder}/.env"
        },
        "runtimeSourcemapPausePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
          "default": []
        },
        "nodeVersionHint": {
          "type": "number",
          "minimum": 8,
          "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
          "default": 12
        },
        "command": {
          "type": [
            "string",
            "null"
          ],
          "description": "Command to run in the launched terminal. If not provided, the terminal will open without launching a program.",
          "default": "npm start"
        }
      },
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "debug.javascript.automaticallyTunnelRemoteServer": {
      "type": "boolean",
      "description": "When debugging a remote web app, configures whether to automatically tunnel the remote server to your local machine.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "debug.javascript.debugByLinkOptions": {
      "default": "on",
      "description": "Options used when debugging open links clicked from inside the JavaScript Debug Terminal. Can be set to \"off\" to disable this behavior, or \"always\" to enable debugging in all terminals.",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "on",
            "off",
            "always"
          ]
        },
        {
          "type": "object",
          "properties": {
            "resolveSourceMapLocations": {
              "type": [
                "array",
                "null"
              ],
              "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
              "default": null,
              "items": {
                "type": "string"
              }
            },
            "outFiles": {
              "type": [
                "array"
              ],
              "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
              "default": [
                "${workspaceFolder}/**/*.(m|c|)js",
                "!**/node_modules/**"
              ],
              "items": {
                "type": "string"
              }
            },
            "pauseForSourceMap": {
              "type": "boolean",
              "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
              "default": false
            },
            "showAsyncStacks": {
              "description": "Show the async calls that led to the current call stack.",
              "default": true,
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "object",
                  "required": [
                    "onAttach"
                  ],
                  "properties": {
                    "onAttach": {
                      "type": "number",
                      "default": 32
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "onceBreakpointResolved"
                  ],
                  "properties": {
                    "onceBreakpointResolved": {
                      "type": "number",
                      "default": 32
                    }
                  }
                }
              ]
            },
            "skipFiles": {
              "type": "array",
              "description": "An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`",
              "default": [
                "<node_internals>/**"
              ]
            },
            "smartStep": {
              "type": "boolean",
              "description": "Automatically step through generated code that cannot be mapped back to the original source.",
              "default": true
            },
            "sourceMaps": {
              "type": "boolean",
              "description": "Use JavaScript source maps (if they exist).",
              "default": true
            },
            "sourceMapRenames": {
              "type": "boolean",
              "default": true,
              "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
            },
            "sourceMapPathOverrides": {
              "type": "object",
              "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
              "default": {
                "webpack://?:*/*": "${workspaceFolder}/*",
                "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
                "meteor://💻app/*": "${workspaceFolder}/*"
              }
            },
            "timeout": {
              "type": "number",
              "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
              "default": 10000
            },
            "timeouts": {
              "type": "object",
              "description": "Timeouts for several debugger operations.",
              "default": {},
              "properties": {
                "sourceMapMinPause": {
                  "type": "number",
                  "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
                  "default": 1000
                },
                "sourceMapCumulativePause": {
                  "type": "number",
                  "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
                  "default": 1000
                },
                "hoverEvaluation": {
                  "type": "number",
                  "description": "Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.",
                  "default": 500
                }
              },
              "additionalProperties": false,
              "markdownDescription": "Timeouts for several debugger operations."
            },
            "trace": {
              "description": "Configures what diagnostic output is produced.",
              "default": true,
              "oneOf": [
                {
                  "type": "boolean",
                  "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
                },
                {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "stdio": {
                      "type": "boolean",
                      "description": "Whether to return trace data from the launched application or browser."
                    },
                    "logFile": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Configures where on disk logs are written."
                    }
                  }
                }
              ]
            },
            "outputCapture": {
              "enum": [
                "console",
                "std"
              ],
              "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
              "default": "console"
            },
            "enableContentValidation": {
              "default": true,
              "type": "boolean",
              "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
            },
            "customDescriptionGenerator": {
              "type": "string",
              "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
            },
            "customPropertiesGenerator": {
              "type": "string",
              "deprecated": true,
              "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
            },
            "cascadeTerminateToConfigurations": {
              "type": "array",
              "items": {
                "type": "string",
                "uniqueItems": true
              },
              "default": [],
              "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
            },
            "enableDWARF": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function."
            },
            "disableNetworkCache": {
              "type": "boolean",
              "description": "Controls whether to skip the network cache for each request",
              "default": true
            },
            "pathMapping": {
              "type": "object",
              "description": "A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk",
              "default": {}
            },
            "webRoot": {
              "type": "string",
              "description": "This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"",
              "default": "${workspaceFolder}"
            },
            "urlFilter": {
              "type": "string",
              "description": "Will search for a page with this url and attach to it, if found. Can have * wildcards.",
              "default": ""
            },
            "url": {
              "type": "string",
              "description": "Will search for a tab with this exact url and attach to it, if found",
              "default": "http://localhost:8080"
            },
            "inspectUri": {
              "type": [
                "string",
                "null"
              ],
              "description": "Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n",
              "default": null
            },
            "vueComponentPaths": {
              "type": "array",
              "description": "A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.",
              "default": [
                "${workspaceFolder}/**/*.vue"
              ]
            },
            "server": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Configures a web server to start up. Takes the same configuration as the 'node' launch task.",
                  "additionalProperties": false,
                  "default": {
                    "program": "node my-server.js"
                  },
                  "properties": {
                    "resolveSourceMapLocations": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
                      "default": [
                        "${workspaceFolder}/**",
                        "!**/node_modules/**"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "outFiles": {
                      "type": [
                        "array"
                      ],
                      "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
                      "default": [
                        "${workspaceFolder}/**/*.(m|c|)js",
                        "!**/node_modules/**"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "pauseForSourceMap": {
                      "type": "boolean",
                      "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
                      "default": false
                    },
                    "showAsyncStacks": {
                      "description": "Show the async calls that led to the current call stack.",
                      "default": true,
                      "oneOf": [
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "object",
                          "required": [
                            "onAttach"
                          ],
                          "properties": {
                            "onAttach": {
                              "type": "number",
                              "default": 32
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "onceBreakpointResolved"
                          ],
                          "properties": {
                            "onceBreakpointResolved": {
                              "type": "number",
                              "default": 32
                            }
                          }
                        }
                      ]
                    },
                    "skipFiles": {
                      "type": "array",
                      "description": "An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`",
                      "default": [
                        "<node_internals>/**"
                      ]
                    },
                    "smartStep": {
                      "type": "boolean",
                      "description": "Automatically step through generated code that cannot be mapped back to the original source.",
                      "default": true
                    },
                    "sourceMaps": {
                      "type": "boolean",
                      "description": "Use JavaScript source maps (if they exist).",
                      "default": true
                    },
                    "sourceMapRenames": {
                      "type": "boolean",
                      "default": true,
                      "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
                    },
                    "sourceMapPathOverrides": {
                      "type": "object",
                      "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
                      "default": {
                        "webpack://?:*/*": "${workspaceFolder}/*",
                        "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
                        "meteor://💻app/*": "${workspaceFolder}/*"
                      }
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
                      "default": 10000
                    },
                    "timeouts": {
                      "type": "object",
                      "description": "Timeouts for several debugger operations.",
                      "default": {},
                      "properties": {
                        "sourceMapMinPause": {
                          "type": "number",
                          "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
                          "default": 1000
                        },
                        "sourceMapCumulativePause": {
                          "type": "number",
                          "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
                          "default": 1000
                        },
                        "hoverEvaluation": {
                          "type": "number",
                          "description": "Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.",
                          "default": 500
                        }
                      },
                      "additionalProperties": false,
                      "markdownDescription": "Timeouts for several debugger operations."
                    },
                    "trace": {
                      "description": "Configures what diagnostic output is produced.",
                      "default": true,
                      "oneOf": [
                        {
                          "type": "boolean",
                          "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
                        },
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "stdio": {
                              "type": "boolean",
                              "description": "Whether to return trace data from the launched application or browser."
                            },
                            "logFile": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Configures where on disk logs are written."
                            }
                          }
                        }
                      ]
                    },
                    "outputCapture": {
                      "enum": [
                        "console",
                        "std"
                      ],
                      "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
                      "default": "console"
                    },
                    "enableContentValidation": {
                      "default": true,
                      "type": "boolean",
                      "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
                    },
                    "customDescriptionGenerator": {
                      "type": "string",
                      "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
                    },
                    "customPropertiesGenerator": {
                      "type": "string",
                      "deprecated": true,
                      "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
                    },
                    "cascadeTerminateToConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "uniqueItems": true
                      },
                      "default": [],
                      "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
                    },
                    "enableDWARF": {
                      "type": "boolean",
                      "default": true,
                      "markdownDescription": "Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function."
                    },
                    "cwd": {
                      "type": "string",
                      "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
                      "default": "${workspaceFolder}"
                    },
                    "localRoot": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Path to the local directory containing the program.",
                      "default": null
                    },
                    "remoteRoot": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Absolute path to the remote directory containing the program.",
                      "default": null
                    },
                    "autoAttachChildProcesses": {
                      "type": "boolean",
                      "description": "Attach debugger to new child processes automatically.",
                      "default": true
                    },
                    "env": {
                      "type": "object",
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
                      "default": {}
                    },
                    "envFile": {
                      "type": "string",
                      "description": "Absolute path to a file containing environment variable definitions.",
                      "default": "${workspaceFolder}/.env"
                    },
                    "runtimeSourcemapPausePatterns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
                      "default": []
                    },
                    "nodeVersionHint": {
                      "type": "number",
                      "minimum": 8,
                      "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
                      "default": 12
                    },
                    "program": {
                      "type": "string",
                      "description": "Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.",
                      "default": ""
                    },
                    "stopOnEntry": {
                      "type": [
                        "boolean",
                        "string"
                      ],
                      "description": "Automatically stop program after launch.",
                      "default": true
                    },
                    "console": {
                      "type": "string",
                      "enum": [
                        "internalConsole",
                        "integratedTerminal",
                        "externalTerminal"
                      ],
                      "enumDescriptions": [
                        "VS Code Debug Console (which doesn't support to read input from a program)",
                        "VS Code's integrated terminal",
                        "External terminal that can be configured via user settings"
                      ],
                      "description": "Where to launch the debug target.",
                      "default": "internalConsole"
                    },
                    "args": {
                      "type": [
                        "array",
                        "string"
                      ],
                      "description": "Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.",
                      "items": {
                        "type": "string"
                      },
                      "default": []
                    },
                    "restart": {
                      "description": "Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.",
                      "default": true,
                      "oneOf": [
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "delay": {
                              "type": "number",
                              "minimum": 0,
                              "default": 1000
                            },
                            "maxAttempts": {
                              "type": "number",
                              "minimum": 0,
                              "default": 10
                            }
                          }
                        }
                      ]
                    },
                    "runtimeExecutable": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "markdownDescription": "Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.",
                      "default": "node"
                    },
                    "runtimeVersion": {
                      "type": "string",
                      "markdownDescription": "Version of `node` runtime to use. Requires `nvm`.",
                      "default": "default"
                    },
                    "runtimeArgs": {
                      "type": "array",
                      "description": "Optional arguments passed to the runtime executable.",
                      "items": {
                        "type": "string"
                      },
                      "default": []
                    },
                    "profileStartup": {
                      "type": "boolean",
                      "description": "If true, will start profiling as soon as the process launches",
                      "default": true
                    },
                    "attachSimplePort": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string",
                          "pattern": "^\\${.*}$"
                        }
                      ],
                      "description": "If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.",
                      "default": 9229
                    },
                    "killBehavior": {
                      "type": "string",
                      "enum": [
                        "forceful",
                        "polite",
                        "none"
                      ],
                      "default": "forceful",
                      "markdownDescription": "Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "JavaScript Debug Terminal",
                  "additionalProperties": false,
                  "default": {
                    "program": "npm start"
                  },
                  "properties": {
                    "resolveSourceMapLocations": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
                      "default": [
                        "${workspaceFolder}/**",
                        "!**/node_modules/**"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "outFiles": {
                      "type": [
                        "array"
                      ],
                      "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
                      "default": [
                        "${workspaceFolder}/**/*.(m|c|)js",
                        "!**/node_modules/**"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "pauseForSourceMap": {
                      "type": "boolean",
                      "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
                      "default": false
                    },
                    "showAsyncStacks": {
                      "description": "Show the async calls that led to the current call stack.",
                      "default": true,
                      "oneOf": [
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "object",
                          "required": [
                            "onAttach"
                          ],
                          "properties": {
                            "onAttach": {
                              "type": "number",
                              "default": 32
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "onceBreakpointResolved"
                          ],
                          "properties": {
                            "onceBreakpointResolved": {
                              "type": "number",
                              "default": 32
                            }
                          }
                        }
                      ]
                    },
                    "skipFiles": {
                      "type": "array",
                      "description": "An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`",
                      "default": [
                        "<node_internals>/**"
                      ]
                    },
                    "smartStep": {
                      "type": "boolean",
                      "description": "Automatically step through generated code that cannot be mapped back to the original source.",
                      "default": true
                    },
                    "sourceMaps": {
                      "type": "boolean",
                      "description": "Use JavaScript source maps (if they exist).",
                      "default": true
                    },
                    "sourceMapRenames": {
                      "type": "boolean",
                      "default": true,
                      "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
                    },
                    "sourceMapPathOverrides": {
                      "type": "object",
                      "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
                      "default": {
                        "webpack://?:*/*": "${workspaceFolder}/*",
                        "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
                        "meteor://💻app/*": "${workspaceFolder}/*"
                      }
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
                      "default": 10000
                    },
                    "timeouts": {
                      "type": "object",
                      "description": "Timeouts for several debugger operations.",
                      "default": {},
                      "properties": {
                        "sourceMapMinPause": {
                          "type": "number",
                          "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
                          "default": 1000
                        },
                        "sourceMapCumulativePause": {
                          "type": "number",
                          "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
                          "default": 1000
                        },
                        "hoverEvaluation": {
                          "type": "number",
                          "description": "Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.",
                          "default": 500
                        }
                      },
                      "additionalProperties": false,
                      "markdownDescription": "Timeouts for several debugger operations."
                    },
                    "trace": {
                      "description": "Configures what diagnostic output is produced.",
                      "default": true,
                      "oneOf": [
                        {
                          "type": "boolean",
                          "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
                        },
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "stdio": {
                              "type": "boolean",
                              "description": "Whether to return trace data from the launched application or browser."
                            },
                            "logFile": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Configures where on disk logs are written."
                            }
                          }
                        }
                      ]
                    },
                    "outputCapture": {
                      "enum": [
                        "console",
                        "std"
                      ],
                      "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
                      "default": "console"
                    },
                    "enableContentValidation": {
                      "default": true,
                      "type": "boolean",
                      "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
                    },
                    "customDescriptionGenerator": {
                      "type": "string",
                      "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
                    },
                    "customPropertiesGenerator": {
                      "type": "string",
                      "deprecated": true,
                      "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
                    },
                    "cascadeTerminateToConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "uniqueItems": true
                      },
                      "default": [],
                      "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
                    },
                    "enableDWARF": {
                      "type": "boolean",
                      "default": true,
                      "markdownDescription": "Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function."
                    },
                    "cwd": {
                      "type": "string",
                      "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
                      "default": "${workspaceFolder}",
                      "docDefault": "localRoot || ${workspaceFolder}"
                    },
                    "localRoot": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Path to the local directory containing the program.",
                      "default": null
                    },
                    "remoteRoot": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Absolute path to the remote directory containing the program.",
                      "default": null
                    },
                    "autoAttachChildProcesses": {
                      "type": "boolean",
                      "description": "Attach debugger to new child processes automatically.",
                      "default": true
                    },
                    "env": {
                      "type": "object",
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
                      "default": {}
                    },
                    "envFile": {
                      "type": "string",
                      "description": "Absolute path to a file containing environment variable definitions.",
                      "default": "${workspaceFolder}/.env"
                    },
                    "runtimeSourcemapPausePatterns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
                      "default": []
                    },
                    "nodeVersionHint": {
                      "type": "number",
                      "minimum": 8,
                      "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
                      "default": 12
                    },
                    "command": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Command to run in the launched terminal. If not provided, the terminal will open without launching a program.",
                      "default": "npm start"
                    }
                  }
                }
              ]
            },
            "perScriptSourcemaps": {
              "type": "string",
              "default": "auto",
              "enum": [
                "yes",
                "no",
                "auto"
              ],
              "description": "Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate."
            },
            "port": {
              "type": "number",
              "description": "Port for the browser to listen on. Defaults to \"0\", which will cause the browser to be debugged via pipes, which is generally more secure and should be chosen unless you need to attach to the browser from another tool.",
              "default": 0
            },
            "file": {
              "type": "string",
              "description": "A local html file to open in the browser",
              "default": "${workspaceFolder}/index.html"
            },
            "userDataDir": {
              "type": [
                "string",
                "boolean"
              ],
              "description": "By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile. A new browser can't be launched if an instance is already running from `userDataDir`.",
              "default": true
            },
            "includeDefaultArgs": {
              "type": "boolean",
              "description": "Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.",
              "default": true
            },
            "includeLaunchArgs": {
              "type": "boolean",
              "description": "Advanced: whether any default launch/debugging arguments are set on the browser. The debugger will assume the browser will use pipe debugging such as that which is provided with `--remote-debugging-pipe`.",
              "default": true
            },
            "runtimeExecutable": {
              "type": [
                "string",
                "null"
              ],
              "description": "Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.",
              "default": "stable"
            },
            "runtimeArgs": {
              "type": "array",
              "description": "Optional arguments passed to the runtime executable.",
              "items": {
                "type": "string"
              },
              "default": []
            },
            "env": {
              "type": "object",
              "description": "Optional dictionary of environment key/value pairs for the browser.",
              "default": {}
            },
            "cwd": {
              "type": "string",
              "description": "Optional working directory for the runtime executable.",
              "default": null
            },
            "profileStartup": {
              "type": "boolean",
              "description": "If true, will start profiling soon as the process launches",
              "default": true
            },
            "cleanUp": {
              "type": "string",
              "enum": [
                "wholeBrowser",
                "onlyTab"
              ],
              "description": "What clean-up to do after the debugging session finishes. Close only the tab being debug, vs. close the whole browser.",
              "default": "wholeBrowser"
            },
            "browserLaunchLocation": {
              "description": "Forces the browser to be launched in one location. In a remote workspace (through ssh or WSL, for example) this can be used to open the browser on the remote machine rather than locally.",
              "default": null,
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "enum": [
                    "ui",
                    "workspace"
                  ]
                }
              ]
            },
            "enabled": {
              "type": "string",
              "enum": [
                "on",
                "off",
                "always"
              ]
            }
          }
        }
      ],
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": "on",
      "restricted": false
    },
    "debug.javascript.pickAndAttachOptions": {
      "type": "object",
      "default": {},
      "markdownDescription": "Default options used when debugging a process through the `Debug: Attach to Node.js Process` command",
      "properties": {
        "resolveSourceMapLocations": {
          "type": [
            "array",
            "null"
          ],
          "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
          "default": [
            "${workspaceFolder}/**",
            "!**/node_modules/**"
          ],
          "items": {
            "type": "string"
          }
        },
        "outFiles": {
          "type": [
            "array"
          ],
          "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
          "default": [
            "${workspaceFolder}/**/*.(m|c|)js",
            "!**/node_modules/**"
          ],
          "items": {
            "type": "string"
          }
        },
        "pauseForSourceMap": {
          "type": "boolean",
          "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
          "default": false
        },
        "showAsyncStacks": {
          "description": "Show the async calls that led to the current call stack.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "required": [
                "onAttach"
              ],
              "properties": {
                "onAttach": {
                  "type": "number",
                  "default": 32
                }
              }
            },
            {
              "type": "object",
              "required": [
                "onceBreakpointResolved"
              ],
              "properties": {
                "onceBreakpointResolved": {
                  "type": "number",
                  "default": 32
                }
              }
            }
          ]
        },
        "skipFiles": {
          "type": "array",
          "description": "An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`",
          "default": [
            "<node_internals>/**"
          ]
        },
        "smartStep": {
          "type": "boolean",
          "description": "Automatically step through generated code that cannot be mapped back to the original source.",
          "default": true
        },
        "sourceMaps": {
          "type": "boolean",
          "description": "Use JavaScript source maps (if they exist).",
          "default": true
        },
        "sourceMapRenames": {
          "type": "boolean",
          "default": true,
          "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
        },
        "sourceMapPathOverrides": {
          "type": "object",
          "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
          "default": {
            "webpack://?:*/*": "${workspaceFolder}/*",
            "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
            "meteor://💻app/*": "${workspaceFolder}/*"
          }
        },
        "timeout": {
          "type": "number",
          "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
          "default": 10000
        },
        "timeouts": {
          "type": "object",
          "description": "Timeouts for several debugger operations.",
          "default": {},
          "properties": {
            "sourceMapMinPause": {
              "type": "number",
              "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
              "default": 1000
            },
            "sourceMapCumulativePause": {
              "type": "number",
              "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
              "default": 1000
            },
            "hoverEvaluation": {
              "type": "number",
              "description": "Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.",
              "default": 500
            }
          },
          "additionalProperties": false,
          "markdownDescription": "Timeouts for several debugger operations."
        },
        "trace": {
          "description": "Configures what diagnostic output is produced.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean",
              "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "stdio": {
                  "type": "boolean",
                  "description": "Whether to return trace data from the launched application or browser."
                },
                "logFile": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Configures where on disk logs are written."
                }
              }
            }
          ]
        },
        "outputCapture": {
          "enum": [
            "console",
            "std"
          ],
          "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
          "default": "console"
        },
        "enableContentValidation": {
          "default": true,
          "type": "boolean",
          "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
        },
        "customDescriptionGenerator": {
          "type": "string",
          "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
        },
        "customPropertiesGenerator": {
          "type": "string",
          "deprecated": true,
          "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
        },
        "cascadeTerminateToConfigurations": {
          "type": "array",
          "items": {
            "type": "string",
            "uniqueItems": true
          },
          "default": [],
          "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
        },
        "enableDWARF": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function."
        },
        "cwd": {
          "type": "string",
          "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
          "default": "${workspaceFolder}",
          "docDefault": "localRoot || ${workspaceFolder}"
        },
        "localRoot": {
          "type": [
            "string",
            "null"
          ],
          "description": "Path to the local directory containing the program.",
          "default": null
        },
        "remoteRoot": {
          "type": [
            "string",
            "null"
          ],
          "description": "Absolute path to the remote directory containing the program.",
          "default": null
        },
        "autoAttachChildProcesses": {
          "type": "boolean",
          "description": "Attach debugger to new child processes automatically.",
          "default": true
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          },
          "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
          "default": {}
        },
        "envFile": {
          "type": "string",
          "description": "Absolute path to a file containing environment variable definitions.",
          "default": "${workspaceFolder}/.env"
        },
        "runtimeSourcemapPausePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
          "default": []
        },
        "nodeVersionHint": {
          "type": "number",
          "minimum": 8,
          "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
          "default": 12
        },
        "address": {
          "type": "string",
          "description": "TCP/IP address of process to be debugged. Default is 'localhost'.",
          "default": "localhost"
        },
        "port": {
          "description": "Debug port to attach to. Default is 9229.",
          "default": 9229,
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "string",
              "pattern": "^\\${.*}$"
            }
          ]
        },
        "websocketAddress": {
          "type": "string",
          "description": "Exact websocket address to attach to. If unspecified, it will be discovered from the address and port."
        },
        "remoteHostHeader": {
          "type": "string",
          "description": "Explicit Host header to use when connecting to the websocket of inspector. If unspecified, the host header will be set to 'localhost'. This is useful when the inspector is running behind a proxy that only accept particular Host header."
        },
        "restart": {
          "description": "Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "delay": {
                  "type": "number",
                  "minimum": 0,
                  "default": 1000
                },
                "maxAttempts": {
                  "type": "number",
                  "minimum": 0,
                  "default": 10
                }
              }
            }
          ]
        },
        "processId": {
          "type": "string",
          "description": "ID of process to attach to.",
          "default": "${command:PickProcess}"
        },
        "attachExistingChildren": {
          "type": "boolean",
          "description": "Whether to attempt to attach to already-spawned child processes.",
          "default": false
        },
        "continueOnAttach": {
          "type": "boolean",
          "markdownDescription": "If true, we'll automatically resume programs launched and waiting on `--inspect-brk`",
          "default": true
        }
      },
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "debug.javascript.autoAttachFilter": {
      "type": "string",
      "default": "disabled",
      "enum": [
        "always",
        "smart",
        "onlyWithFlag",
        "disabled"
      ],
      "enumDescriptions": [
        "Auto attach to every Node.js process launched in the terminal.",
        "Auto attach when running scripts that aren't in a node_modules folder.",
        "Only auto attach when the `--inspect` is given.",
        "Auto attach is disabled and not shown in status bar."
      ],
      "markdownDescription": "Configures which processes to automatically attach and debug when `#debug.node.autoAttach#` is on. A Node process launched with the `--inspect` flag will always be attached to, regardless of this setting.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": "disabled",
      "restricted": false
    },
    "debug.javascript.autoAttachSmartPattern": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "${workspaceFolder}/**",
        "!**/node_modules/**",
        "**/$KNOWN_TOOLS$/**"
      ],
      "markdownDescription": "Configures glob patterns for determining when to attach in \"smart\" `#debug.javascript.autoAttachFilter#` mode. `$KNOWN_TOOLS$` is replaced with a list of names of common test and code runners. [Read more on the VS Code docs](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach-smart-patterns).",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": [
        "${workspaceFolder}/**",
        "!**/node_modules/**",
        "**/$KNOWN_TOOLS$/**"
      ],
      "restricted": false
    },
    "debug.javascript.breakOnConditionalError": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Whether to stop when conditional breakpoints throw an error.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "debug.javascript.unmapMissingSources": {
      "type": "boolean",
      "default": false,
      "description": "Configures whether sourcemapped file where the original file can't be read will automatically be unmapped. If this is false (default), a prompt is shown.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "debug.javascript.defaultRuntimeExecutable": {
      "type": "object",
      "default": {
        "pwa-node": "node"
      },
      "markdownDescription": "The default `runtimeExecutable` used for launch configurations, if unspecified. This can be used to config custom paths to Node.js or browser installations.",
      "properties": {
        "pwa-node": {
          "type": "string"
        },
        "pwa-chrome": {
          "type": "string"
        },
        "pwa-msedge": {
          "type": "string"
        }
      },
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": {
        "pwa-node": "node"
      },
      "restricted": false
    },
    "debug.javascript.resourceRequestOptions": {
      "type": "object",
      "default": {},
      "markdownDescription": "Request options to use when loading resources, such as source maps, in the debugger. You may need to configure this if your sourcemaps require authentication or use a self-signed certificate, for instance. Options are used to create a request using the [`got`](https://github.com/sindresorhus/got) library.\n\nA common case to disable certificate verification can be done by passing `{ \"https\": { \"rejectUnauthorized\": false } }`.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "npm.scriptExplorerAction": {
      "type": "string",
      "enum": [
        "open",
        "run"
      ],
      "markdownDescription": "The default click action used in the NPM Scripts Explorer: `open` or `run`, the default is `open`.",
      "scope": 3,
      "default": "open",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": "open",
      "restricted": false
    },
    "npm.fetchOnlinePackageInfo": {
      "type": "boolean",
      "description": "Fetch data from https://registry.npmjs.org and https://registry.bower.io to provide auto-completion and information on hover features on npm dependencies.",
      "default": true,
      "scope": 3,
      "tags": [
        "usesOnlineServices"
      ],
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "npm.scriptHover": {
      "type": "boolean",
      "description": "Display hover with 'Run' and 'Debug' commands for scripts.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "php.suggest.basic": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the built-in PHP language suggestions are enabled. The support suggests PHP globals and variables.",
      "scope": 3,
      "source": {
        "id": "vscode.php-language-features",
        "displayName": "PHP Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "php.validate.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable built-in PHP validation.",
      "scope": 3,
      "source": {
        "id": "vscode.php-language-features",
        "displayName": "PHP Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "php.validate.run": {
      "type": "string",
      "enum": [
        "onSave",
        "onType"
      ],
      "default": "onSave",
      "description": "Whether the linter is run on save or on type.",
      "scope": 3,
      "source": {
        "id": "vscode.php-language-features",
        "displayName": "PHP Language Features"
      },
      "defaultDefaultValue": "onSave",
      "restricted": false
    },
    "references.preferredLocation": {
      "description": "Controls whether 'Peek References' or 'Find References' is invoked when selecting CodeLens references.",
      "type": "string",
      "default": "peek",
      "enum": [
        "peek",
        "view"
      ],
      "enumDescriptions": [
        "Show references in peek editor.",
        "Show references in separate view."
      ],
      "scope": 3,
      "source": {
        "id": "vscode.references-view",
        "displayName": "Reference Search View"
      },
      "defaultDefaultValue": "peek",
      "restricted": false
    },
    "simpleBrowser.focusLockIndicator.enabled": {
      "type": "boolean",
      "default": true,
      "title": "Focus Lock Indicator Enabled",
      "description": "Enable/disable the floating indicator that shows when focused in the simple browser.",
      "scope": 3,
      "source": {
        "id": "vscode.simple-browser",
        "displayName": "Simple Browser"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.tsdk": {
      "type": "string",
      "markdownDescription": "Specifies the folder path to the tsserver and `lib*.d.ts` files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.\n\n- When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.\n- When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.\n\nSee the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "default": "",
      "restricted": true
    },
    "typescript.disableAutomaticTypeAcquisition": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Disables [automatic type acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.",
      "scope": 3,
      "tags": [
        "usesOnlineServices"
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.enablePromptUseWorkspaceTsdk": {
      "type": "boolean",
      "default": false,
      "description": "Enables prompting of users to use the TypeScript version configured in the workspace for Intellisense.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.check.npmIsInstalled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Check if npm is installed for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.referencesCodeLens.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable references CodeLens in JavaScript files.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.referencesCodeLens.showOnAllFunctions": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable references CodeLens on all functions in JavaScript files.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.referencesCodeLens.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable references CodeLens in TypeScript files.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.referencesCodeLens.showOnAllFunctions": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable references CodeLens on all functions in TypeScript files.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.implementationsCodeLens.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable implementations CodeLens. This CodeLens shows the implementers of an interface.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.implementationsCodeLens.showOnInterfaceMethods": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable implementations CodeLens on interface methods.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.tsserver.enableTracing": {
      "type": "boolean",
      "default": false,
      "description": "Enables tracing TS server performance to a directory. These trace files can be used to diagnose TS Server performance issues. The log may contain file paths, source code, and other potentially sensitive information from your project.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.tsserver.log": {
      "type": "string",
      "enum": [
        "off",
        "terse",
        "normal",
        "verbose"
      ],
      "default": "off",
      "description": "Enables logging of the TS server to a file. This log can be used to diagnose TS Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "typescript.reportStyleChecksAsWarnings": {
      "type": "boolean",
      "default": true,
      "description": "Report style checks as warnings.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.validate.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable TypeScript validation.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable default TypeScript formatter.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.validate.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable JavaScript validation.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable default JavaScript formatter.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "js/ts.implicitProjectConfig.module": {
      "type": "string",
      "markdownDescription": "Sets the module system for the program. See more: https://www.typescriptlang.org/tsconfig#module.",
      "default": "ESNext",
      "enum": [
        "CommonJS",
        "AMD",
        "System",
        "UMD",
        "ES6",
        "ES2015",
        "ES2020",
        "ESNext",
        "None",
        "ES2022",
        "Node12",
        "NodeNext"
      ],
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "ESNext",
      "restricted": false
    },
    "js/ts.implicitProjectConfig.target": {
      "type": "string",
      "default": "ES2020",
      "markdownDescription": "Set target JavaScript language version for emitted JavaScript and include library declarations. See more: https://www.typescriptlang.org/tsconfig#target.",
      "enum": [
        "ES3",
        "ES5",
        "ES6",
        "ES2015",
        "ES2016",
        "ES2017",
        "ES2018",
        "ES2019",
        "ES2020",
        "ES2021",
        "ES2022",
        "ESNext"
      ],
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "ES2020",
      "restricted": false
    },
    "javascript.implicitProjectConfig.checkJs": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable semantic checking of JavaScript files. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "markdownDeprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.checkJs`.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false,
      "deprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.checkJs`."
    },
    "js/ts.implicitProjectConfig.checkJs": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable semantic checking of JavaScript files. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.implicitProjectConfig.experimentalDecorators": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable `experimentalDecorators` in JavaScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "markdownDeprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.experimentalDecorators`.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false,
      "deprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.experimentalDecorators`."
    },
    "js/ts.implicitProjectConfig.experimentalDecorators": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable `experimentalDecorators` in JavaScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "js/ts.implicitProjectConfig.strictNullChecks": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable/disable [strict null checks](https://www.typescriptlang.org/tsconfig#strictNullChecks) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "js/ts.implicitProjectConfig.strictFunctionTypes": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable/disable [strict function types](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.tsc.autoDetect": {
      "type": "string",
      "default": "on",
      "enum": [
        "on",
        "off",
        "build",
        "watch"
      ],
      "markdownEnumDescriptions": [
        "Create both build and watch tasks.",
        "Disable this feature.",
        "Only create single run compile tasks.",
        "Only create compile and watch tasks."
      ],
      "description": "Controls auto detection of tsc tasks.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "on",
      "restricted": false
    },
    "typescript.locale": {
      "type": "string",
      "default": "auto",
      "enum": [
        "auto",
        "de",
        "es",
        "en",
        "fr",
        "it",
        "ja",
        "ko",
        "ru",
        "zh-CN",
        "zh-TW"
      ],
      "enumDescriptions": [
        "Use VS Code's configured display language",
        "Deutsch",
        "español",
        "English",
        "français",
        "italiano",
        "日本語",
        "한국어",
        "русский",
        "中文(简体)",
        "中文(繁體)"
      ],
      "markdownDescription": "Sets the locale used to report JavaScript and TypeScript errors. Defaults to use VS Code's locale.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.preferences.includePackageJsonAutoImports": {
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "enumDescriptions": [
        "Search dependencies based on estimated performance impact.",
        "Always search dependencies.",
        "Never search dependencies."
      ],
      "default": "auto",
      "markdownDescription": "Enable/disable searching `package.json` dependencies for available auto imports.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.surveys.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enabled/disable occasional surveys that help us improve VS Code's JavaScript and TypeScript support.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.tsserver.useSeparateSyntaxServer": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable spawning a separate TypeScript server that can more quickly respond to syntax related operations, such as calculating folding or computing document symbols.",
      "markdownDeprecationMessage": "This setting has been deprecated in favor of `typescript.tsserver.useSyntaxServer`.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false,
      "deprecationMessage": "This setting has been deprecated in favor of `typescript.tsserver.useSyntaxServer`."
    },
    "typescript.tsserver.useSyntaxServer": {
      "type": "string",
      "scope": 3,
      "description": "Controls if TypeScript launches a dedicated server to more quickly handle syntax related operations, such as computing code folding.",
      "default": "auto",
      "enum": [
        "always",
        "never",
        "auto"
      ],
      "enumDescriptions": [
        "Use a lighter weight syntax server to handle all IntelliSense operations. This syntax server can only provide IntelliSense for opened files.",
        "Don't use a dedicated syntax server. Use a single server to handle all IntelliSense operations.",
        "Spawn both a full server and a lighter weight server dedicated to syntax operations. The syntax server is used to speed up syntax operations and provide IntelliSense while projects are loading."
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.tsserver.maxTsServerMemory": {
      "type": "number",
      "default": 3072,
      "markdownDescription": "The maximum amount of memory (in MB) to allocate to the TypeScript server process. To use a memory limit greater than 4 GB, use `#typescript.tsserver.nodePath#` to run TS Server with a custom Node installation.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": 3072,
      "restricted": false
    },
    "typescript.tsserver.experimental.enableProjectDiagnostics": {
      "type": "boolean",
      "default": false,
      "description": "(Experimental) Enables project wide error reporting.",
      "scope": 3,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.tsserver.experimental.useVsCodeWatcher": {
      "type": "boolean",
      "description": "Use VS Code's file watchers instead of TypeScript's. Requires using TypeScript 5.4+ in the workspace.",
      "default": true,
      "tags": [
        "experimental"
      ],
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "defaultValueSource": "Experiments",
      "restricted": false
    },
    "typescript.tsserver.watchOptions": {
      "type": "object",
      "description": "Configure which watching strategies should be used to keep track of files and directories.",
      "scope": 3,
      "properties": {
        "watchFile": {
          "type": "string",
          "description": "Strategy for how individual files are watched.",
          "enum": [
            "fixedChunkSizePolling",
            "fixedPollingInterval",
            "priorityPollingInterval",
            "dynamicPriorityPolling",
            "useFsEvents",
            "useFsEventsOnParentDirectory"
          ],
          "enumDescriptions": [
            "Polls files in chunks at regular interval.",
            "Check every file for changes several times a second at a fixed interval.",
            "Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.",
            "Use a dynamic queue where less-frequently modified files will be checked less often.",
            "Attempt to use the operating system/file system's native events for file changes.",
            "Attempt to use the operating system/file system's native events to listen for changes on a file's containing directories. This can use fewer file watchers, but might be less accurate."
          ],
          "default": "useFsEvents"
        },
        "watchDirectory": {
          "type": "string",
          "description": "Strategy for how entire directory trees are watched under systems that lack recursive file-watching functionality.",
          "enum": [
            "fixedChunkSizePolling",
            "fixedPollingInterval",
            "dynamicPriorityPolling",
            "useFsEvents"
          ],
          "enumDescriptions": [
            "Polls directories in chunks at regular interval.",
            "Check every directory for changes several times a second at a fixed interval.",
            "Use a dynamic queue where less-frequently modified directories will be checked less often.",
            "Attempt to use the operating system/file system's native events for directory changes."
          ],
          "default": "useFsEvents"
        },
        "fallbackPolling": {
          "type": "string",
          "description": "When using file system events, this option specifies the polling strategy that gets used when the system runs out of native file watchers and/or doesn't support native file watchers.",
          "enum": [
            "fixedPollingInterval",
            "priorityPollingInterval",
            "dynamicPriorityPolling"
          ],
          "enumDescriptions": [
            "configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval",
            "configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval",
            "configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling"
          ]
        },
        "synchronousWatchDirectory": {
          "type": "boolean",
          "description": "Disable deferred watching on directories. Deferred watching is useful when lots of file changes might occur at once (e.g. a change in node_modules from running npm install), but you might want to disable it with this flag for some less-common setups."
        }
      },
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "default": {},
      "restricted": false
    },
    "typescript.workspaceSymbols.scope": {
      "type": "string",
      "enum": [
        "allOpenProjects",
        "currentProject"
      ],
      "enumDescriptions": [
        "Search all open JavaScript or TypeScript projects for symbols.",
        "Only search for symbols in the current JavaScript or TypeScript project."
      ],
      "default": "allOpenProjects",
      "markdownDescription": "Controls which files are searched by [Go to Symbol in Workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "allOpenProjects",
      "restricted": false
    },
    "typescript.tsserver.web.projectWideIntellisense.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable project-wide IntelliSense on web. Requires that VS Code is running in a trusted context.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.tsserver.web.projectWideIntellisense.suppressSemanticErrors": {
      "type": "boolean",
      "default": true,
      "description": "Suppresses semantic errors. This is needed when using external packages as these can't be included analyzed on web.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.tsserver.nodePath": {
      "type": "string",
      "description": "Run TS Server on a custom Node installation. This can be a path to a Node executable, or 'node' if you want VS Code to detect a Node installation.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "default": "",
      "restricted": true
    },
    "typescript.experimental.tsserver.web.typeAcquisition.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable package acquisition on the web.",
      "scope": 3,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.preferGoToSourceDefinition": {
      "type": "boolean",
      "default": false,
      "description": "Makes Go to Definition avoid type declaration files when possible by triggering Go to Source Definition instead. This allows Go to Source Definition to be triggered with the mouse gesture.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.preferGoToSourceDefinition": {
      "type": "boolean",
      "default": false,
      "description": "Makes Go to Definition avoid type declaration files when possible by triggering Go to Source Definition instead. This allows Go to Source Definition to be triggered with the mouse gesture.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.workspaceSymbols.excludeLibrarySymbols": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Exclude symbols that come from library files in Go to Symbol in Workspace results. Requires using TypeScript 5.3+ in the workspace.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular2-files.menu.component": {
      "type": "boolean",
      "default": true,
      "description": "Shows or hides the menu item.",
      "scope": 3,
      "source": {
        "id": "alexiv.vscode-angular2-files",
        "displayName": "Angular Files"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular2-files.menu.directive": {
      "type": "boolean",
      "default": true,
      "description": "Shows or hides the menu item.",
      "scope": 3,
      "source": {
        "id": "alexiv.vscode-angular2-files",
        "displayName": "Angular Files"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular2-files.menu.pipe": {
      "type": "boolean",
      "default": true,
      "description": "Shows or hides the menu item.",
      "scope": 3,
      "source": {
        "id": "alexiv.vscode-angular2-files",
        "displayName": "Angular Files"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular2-files.menu.service": {
      "type": "boolean",
      "default": true,
      "description": "Shows or hides the menu item.",
      "scope": 3,
      "source": {
        "id": "alexiv.vscode-angular2-files",
        "displayName": "Angular Files"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular2-files.menu.class": {
      "type": "boolean",
      "default": true,
      "description": "Shows or hides the menu item.",
      "scope": 3,
      "source": {
        "id": "alexiv.vscode-angular2-files",
        "displayName": "Angular Files"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular2-files.menu.interface": {
      "type": "boolean",
      "default": true,
      "description": "Shows or hides the menu item.",
      "scope": 3,
      "source": {
        "id": "alexiv.vscode-angular2-files",
        "displayName": "Angular Files"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular2-files.menu.route": {
      "type": "boolean",
      "default": true,
      "description": "Shows or hides the menu item.",
      "scope": 3,
      "source": {
        "id": "alexiv.vscode-angular2-files",
        "displayName": "Angular Files"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular2-files.menu.enum": {
      "type": "boolean",
      "default": true,
      "description": "Shows or hides the menu item.",
      "scope": 3,
      "source": {
        "id": "alexiv.vscode-angular2-files",
        "displayName": "Angular Files"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular2-files.menu.module": {
      "type": "boolean",
      "default": true,
      "description": "Shows or hides the menu item.",
      "scope": 3,
      "source": {
        "id": "alexiv.vscode-angular2-files",
        "displayName": "Angular Files"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular.log": {
      "type": "string",
      "enum": [
        "off",
        "terse",
        "normal",
        "verbose"
      ],
      "default": "off",
      "description": "Enables logging of the Angular server to a file. This log can be used to diagnose Angular Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.",
      "scope": 3,
      "source": {
        "id": "Angular.ng-template",
        "displayName": "Angular Language Service"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "angular.view-engine": {
      "type": "boolean",
      "default": false,
      "description": "Use legacy View Engine language service. This option is incompatible with projects using Angular v13 and above.",
      "scope": 3,
      "source": {
        "id": "Angular.ng-template",
        "displayName": "Angular Language Service"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular.enable-strict-mode-prompt": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Prompt to enable the [strictTemplates](https://angular.io/guide/angular-compiler-options#stricttemplates) flag in [angularCompilerOptions](https://angular.io/guide/angular-compiler-options). Note that strict mode is only available when using Ivy.",
      "scope": 3,
      "source": {
        "id": "Angular.ng-template",
        "displayName": "Angular Language Service"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular.trace.server": {
      "type": "string",
      "scope": 3,
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the Angular language server.",
      "source": {
        "id": "Angular.ng-template",
        "displayName": "Angular Language Service"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "angular.suggest.includeAutomaticOptionalChainCompletions": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable showing completions on potentially undefined values that insert an optional chain call. Requires TS 3.7+ and strict null checks to be enabled.",
      "scope": 3,
      "source": {
        "id": "Angular.ng-template",
        "displayName": "Angular Language Service"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular.suggest.includeCompletionsWithSnippetText": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable snippet completions from Angular language server. Requires using TypeScript 4.3+ in the workspace.",
      "scope": 3,
      "source": {
        "id": "Angular.ng-template",
        "displayName": "Angular Language Service"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular.forceStrictTemplates": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enabling this option will force the language service to use [strictTemplates](https://angular.io/guide/angular-compiler-options#stricttemplates) and ignore the user settings in the `tsconfig.json`.",
      "scope": 3,
      "source": {
        "id": "Angular.ng-template",
        "displayName": "Angular Language Service"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "tailwindCSS.emmetCompletions": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "tailwindCSS.includeLanguages": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "markdownDescription": "Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.\n E.g.: `{\"plaintext\": \"html\"}`",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "tailwindCSS.files.exclude": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "**/.git/**",
        "**/node_modules/**",
        "**/.hg/**",
        "**/.svn/**"
      ],
      "markdownDescription": "Configure glob patterns to exclude from all IntelliSense features. Inherits all glob patterns from the `#files.exclude#` setting.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": [
        "**/.git/**",
        "**/node_modules/**",
        "**/.hg/**",
        "**/.svn/**"
      ],
      "restricted": false
    },
    "tailwindCSS.classAttributes": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "class",
        "className",
        "ngClass"
      ],
      "markdownDescription": "The HTML attributes for which to provide class completions, hover previews, linting etc.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": [
        "class",
        "className",
        "ngClass"
      ],
      "restricted": false
    },
    "tailwindCSS.experimental.configFile": {
      "type": [
        "null",
        "string",
        "object"
      ],
      "default": null,
      "markdownDescription": "Manually specify the Tailwind config file or files that should be read to provide IntelliSense features. Can either be a single string value, or an object where each key is a config file path and each value is a glob or array of globs representing the set of files that the config file applies to.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "tailwindCSS.showPixelEquivalents": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Show `px` equivalents for `rem` CSS values.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.rootFontSize": {
      "type": "number",
      "default": 16,
      "markdownDescription": "Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `#tailwindCSS.showPixelEquivalents#`.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": 16,
      "restricted": false
    },
    "tailwindCSS.inspectPort": {
      "type": [
        "number",
        "null"
      ],
      "default": null,
      "markdownDescription": "Enable the Node.js inspector agent for the language server and listen on the specified port.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "js-auto-backticks.enableRevert": {
      "type": "boolean",
      "default": false,
      "description": "Revert to regular quotes after removing last placeholder of a template string.",
      "scope": 3,
      "source": {
        "id": "chamboug.js-auto-backticks",
        "displayName": "Javascript Auto Backticks"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "js-auto-backticks.preferredStandardQuotes": {
      "type": "string",
      "enum": [
        "auto",
        "single",
        "double"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Auto detect",
        "Single quotes",
        "Double quotes"
      ],
      "description": "Specifies preferred quotation marks when reverting standard string.",
      "scope": 3,
      "source": {
        "id": "chamboug.js-auto-backticks",
        "displayName": "Javascript Auto Backticks"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "path-intellisense.extensionOnImport": {
      "type": "boolean",
      "default": false,
      "description": "Adds the file extension to a import statements",
      "scope": 3,
      "source": {
        "id": "christian-kohler.path-intellisense",
        "displayName": "Path Intellisense"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "path-intellisense.mappings": {
      "type": "object",
      "default": {},
      "description": "Mappings for paths.  The values should be interpreted as absolute paths (and can use '${workspaceFolder}')",
      "scope": 3,
      "source": {
        "id": "christian-kohler.path-intellisense",
        "displayName": "Path Intellisense"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "path-intellisense.showHiddenFiles": {
      "type": "boolean",
      "default": false,
      "description": "Show hidden files",
      "scope": 3,
      "source": {
        "id": "christian-kohler.path-intellisense",
        "displayName": "Path Intellisense"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "path-intellisense.autoSlashAfterDirectory": {
      "type": "boolean",
      "default": false,
      "description": "Automatically adds slash after directory",
      "scope": 3,
      "source": {
        "id": "christian-kohler.path-intellisense",
        "displayName": "Path Intellisense"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "path-intellisense.absolutePathToWorkspace": {
      "type": "boolean",
      "default": true,
      "description": "Sets an absolute path to the current workspace",
      "scope": 3,
      "source": {
        "id": "christian-kohler.path-intellisense",
        "displayName": "Path Intellisense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "path-intellisense.absolutePathTo": {
      "type": "string",
      "description": "If defined, unmapped absolute path imports are based on this location.  Takes priority over 'absolutePathToWorkspace' if both are defined",
      "scope": 3,
      "source": {
        "id": "christian-kohler.path-intellisense",
        "displayName": "Path Intellisense"
      },
      "default": "",
      "restricted": false
    },
    "path-intellisense.showOnAbsoluteSlash": {
      "type": "boolean",
      "default": true,
      "description": "Shows suggestions when the import starts with a forward slash ('/')",
      "scope": 3,
      "source": {
        "id": "christian-kohler.path-intellisense",
        "displayName": "Path Intellisense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "path-intellisense.ignoreTsConfigBaseUrl": {
      "type": "boolean",
      "default": false,
      "description": "Ignores tsconfig file for mappings",
      "scope": 3,
      "source": {
        "id": "christian-kohler.path-intellisense",
        "displayName": "Path Intellisense"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "path-intellisense.autoTriggerNextSuggestion": {
      "type": "boolean",
      "default": false,
      "description": "Automatically triggers next suggestion after previous suggestion",
      "scope": 3,
      "source": {
        "id": "christian-kohler.path-intellisense",
        "displayName": "Path Intellisense"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.trace.server": {
      "scope": 3,
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off"
        },
        {
          "type": "object",
          "properties": {
            "verbosity": {
              "type": "string",
              "enum": [
                "off",
                "messages",
                "verbose"
              ],
              "default": "off"
            },
            "format": {
              "type": "string",
              "enum": [
                "text",
                "json"
              ],
              "default": "text"
            }
          }
        }
      ],
      "default": "off",
      "description": "Traces the communication between VSCode and the eslint linter service.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "eslint.debug": {
      "scope": 3,
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enables ESLint debug mode (same as `--debug` on the command line)",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "reactSnippets.settings.prettierEnabled": {
      "type": "boolean",
      "markdownDescription": "[EXPERIMENTAL: MIGHT NOT WORK]: Integrate prettier settings with code generated from snippets.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "dsznajder.es7-react-js-snippets",
        "displayName": "ES7+ React/Redux/React-Native snippets"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "reactSnippets.settings.importReactOnTop": {
      "type": "boolean",
      "markdownDescription": "Controls if snippets should add `import React from 'react';` at the top of components.\nUse if you have React +17 and use jsx transform.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "dsznajder.es7-react-js-snippets",
        "displayName": "ES7+ React/Redux/React-Native snippets"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "reactSnippets.settings.typescript": {
      "type": "boolean",
      "markdownDescription": "Controls if React components have typescript Props typing.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "dsznajder.es7-react-js-snippets",
        "displayName": "ES7+ React/Redux/React-Native snippets"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "reactSnippets.settings.languageScopes": {
      "type": "string",
      "markdownDescription": "defines the language scopes for which the snippets will be available.\nUse comma separated values.\nFor example: `typescript,typescriptreact,javascript,javascriptreact`",
      "default": "typescript,typescriptreact,javascript,javascriptreact",
      "scope": 3,
      "source": {
        "id": "dsznajder.es7-react-js-snippets",
        "displayName": "ES7+ React/Redux/React-Native snippets"
      },
      "defaultDefaultValue": "typescript,typescriptreact,javascript,javascriptreact",
      "restricted": false
    },
    "reactSnippets.settings.typescriptPropsStatePrefix": {
      "type": "string",
      "markdownDescription": "Controls which prefix for typescript snippets should use for props/state.",
      "default": "type",
      "enum": [
        "type",
        "interface"
      ],
      "scope": 3,
      "source": {
        "id": "dsznajder.es7-react-js-snippets",
        "displayName": "ES7+ React/Redux/React-Native snippets"
      },
      "defaultDefaultValue": "type",
      "restricted": false
    },
    "editorconfig.generateAuto": {
      "type": "boolean",
      "default": true,
      "description": "Automatically generates an .editorconfig file according to your current editor settings.",
      "scope": 3,
      "source": {
        "id": "EditorConfig.EditorConfig",
        "displayName": "EditorConfig for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "editorconfig.template": {
      "type": "string",
      "default": "default",
      "description": "If generateAuto is false, this template path will be used for each newly-generated .editorconfig file.",
      "scope": 3,
      "source": {
        "id": "EditorConfig.EditorConfig",
        "displayName": "EditorConfig for VS Code"
      },
      "defaultDefaultValue": "default",
      "restricted": false
    },
    "prettier.disableLanguages": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "deprecationMessage": "This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.",
      "markdownDescription": "A list of languages IDs to disable this extension on.",
      "scope": 3,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "default": [],
      "restricted": false
    },
    "prettier.documentSelectors": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "markdownDescription": "A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter.",
      "scope": 3,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "default": [],
      "restricted": true
    },
    "yarn.bin": {
      "type": "string",
      "default": "yarn",
      "description": "yarn bin name",
      "scope": 3,
      "source": {
        "id": "gamunu.vscode-yarn",
        "displayName": "yarn"
      },
      "defaultDefaultValue": "yarn",
      "restricted": false
    },
    "angular2-switcher.openSideBySide": {
      "type": "boolean",
      "default": false,
      "description": "Open files side by side.",
      "scope": 3,
      "source": {
        "id": "infinity1207.angular2-switcher",
        "displayName": "angular2-switcher"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "reuseView": {
      "type": "boolean",
      "default": false,
      "description": "Reuse opened view",
      "scope": 3,
      "source": {
        "id": "infinity1207.angular2-switcher",
        "displayName": "angular2-switcher"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular2-switcher.styleFormats": {
      "type": "array",
      "default": [
        ".scss",
        ".sass",
        ".less",
        ".css"
      ],
      "description": "The order of angular2-switcher find corresponding style file.",
      "scope": 3,
      "source": {
        "id": "infinity1207.angular2-switcher",
        "displayName": "angular2-switcher"
      },
      "defaultDefaultValue": [
        ".scss",
        ".sass",
        ".less",
        ".css"
      ],
      "restricted": false
    },
    "angular2-switcher.templateFormats": {
      "type": "array",
      "default": [
        ".html"
      ],
      "description": "The order of angular2-switcher find corresponding template file.",
      "scope": 3,
      "source": {
        "id": "infinity1207.angular2-switcher",
        "displayName": "angular2-switcher"
      },
      "defaultDefaultValue": [
        ".html"
      ],
      "restricted": false
    },
    "angular2-switcher.specFormats": {
      "type": "array",
      "default": [
        ".spec.ts",
        ".stories.ts"
      ],
      "description": "The order of angular2-switcher find corresponding spec file.",
      "scope": 3,
      "source": {
        "id": "infinity1207.angular2-switcher",
        "displayName": "angular2-switcher"
      },
      "defaultDefaultValue": [
        ".spec.ts",
        ".stories.ts"
      ],
      "restricted": false
    },
    "angular-file-changer.openSideBySide": {
      "type": "boolean",
      "default": false,
      "description": "Open files side by side to Angular Component Typescript file.",
      "scope": 3,
      "source": {
        "id": "john-crowson.angular-file-changer",
        "displayName": "Angular File Changer (Supporting Touch Bar and NgRx)"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "pythonIndent.useTabOnHangingIndent": {
      "type": "boolean",
      "default": false,
      "description": "After creating a hanging indent, press tab to leave the indented section and go to the ending bracket.",
      "scope": 3,
      "source": {
        "id": "KevinRose.vsc-python-indent",
        "displayName": "Python Indent"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "pythonIndent.trimLinesWithOnlyWhitespace": {
      "type": "boolean",
      "default": false,
      "description": "Trims lines that contain only whitespace after pressing Enter on them.",
      "scope": 3,
      "source": {
        "id": "KevinRose.vsc-python-indent",
        "displayName": "Python Indent"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "pythonIndent.keepHangingBracketOnLine": {
      "type": "boolean",
      "default": false,
      "description": "When creating a hanging indent, do not put the closing bracket on its own line.",
      "scope": 3,
      "source": {
        "id": "KevinRose.vsc-python-indent",
        "displayName": "Python Indent"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.experiments.enabled": {
      "default": true,
      "description": "Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.",
      "scope": 3,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.experiments.optInto": {
      "default": [],
      "markdownDescription": "List of experiment to opt into. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.",
      "items": {
        "enum": [
          "All",
          "pythonSurveyNotification",
          "pythonPromptNewToolsExt",
          "pythonTerminalEnvVarActivation",
          "pythonDiscoveryUsingWorkers",
          "pythonTestAdapter",
          "pythonREPLSmartSend",
          "pythonRecommendTensorboardExt"
        ],
        "enumDescriptions": [
          "Combined list of all experiments.",
          "Denotes the Python Survey Notification experiment.",
          "Denotes the Python Prompt New Tools Extension experiment.",
          "Enables use of environment variables to activate terminals instead of sending activation commands.",
          "Enables use of worker threads to do heavy computation when discovering interpreters.",
          "Denotes the Python Test Adapter experiment.",
          "Denotes the Python REPL Smart Send experiment.",
          "Denotes the Tensorboard Extension recommendation experiment."
        ]
      },
      "scope": 3,
      "type": "array",
      "uniqueItems": true,
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.experiments.optOutFrom": {
      "default": [],
      "markdownDescription": "List of experiment to opt out of. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.",
      "items": {
        "enum": [
          "All",
          "pythonSurveyNotification",
          "pythonPromptNewToolsExt",
          "pythonTerminalEnvVarActivation",
          "pythonDiscoveryUsingWorkers",
          "pythonTestAdapter",
          "pythonREPLSmartSend"
        ],
        "enumDescriptions": [
          "Combined list of all experiments.",
          "Denotes the Python Survey Notification experiment.",
          "Denotes the Python Prompt New Tools Extension experiment.",
          "Enables use of environment variables to activate terminals instead of sending activation commands.",
          "Enables use of worker threads to do heavy computation when discovering interpreters.",
          "Denotes the Python Test Adapter experiment.",
          "Denotes the Python REPL Smart Send experiment."
        ]
      },
      "scope": 3,
      "type": "array",
      "uniqueItems": true,
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.languageServer": {
      "default": "Default",
      "description": "Defines type of the language server.",
      "enum": [
        "Default",
        "Jedi",
        "Pylance",
        "None"
      ],
      "enumDescriptions": [
        "Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.",
        "Use Jedi behind the Language Server Protocol (LSP) as a language server.",
        "Use Pylance as a language server.",
        "Disable language server capabilities."
      ],
      "scope": 3,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Default",
      "restricted": false
    },
    "python.analysis.logLevel": {
      "type": "string",
      "default": "Information",
      "description": "Specifies the level of logging for the Output panel",
      "enum": [
        "Error",
        "Warning",
        "Information",
        "Trace"
      ],
      "scope": 3,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "Information",
      "restricted": false
    },
    "remote.SSH.defaultForwardedPorts": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "remotePort"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "remotePort": {
            "type": "number"
          },
          "localPort": {
            "type": "number"
          }
        }
      },
      "description": "A list of ports to forward when the connection is established.",
      "default": [],
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "remote.SSH.remoteServerListenOnSocket": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When true, the remote VS Code server will listen on a socket path instead of opening a port. Only valid for Linux and macOS remotes. After toggling this setting, run the command \"Kill VS Code Server on Host...\" for it to take effect. Requires OpenSSH 6.7+. Disables the \"local server\" connection multiplexing mode. Requires `AllowStreamLocalForwarding` to be enabled for the SSH server.",
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.WSL.fileWatcher.polling": {
      "type": "boolean",
      "description": "If set, polling is used for file watching inside WSL1. Polling can be CPU intensive but fixes the WSL1 issue that folders can not be renamed when watched. This option requires restart to take effect.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-wsl",
        "displayName": "WSL"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.WSL.fileWatcher.pollingInterval": {
      "type": "number",
      "markdownDescription": "The file watcher polling interval in ms used inside WSL1 distros if `#remote.WSL.fileWatcher.polling#` is set.\nThis option requires restart to take effect.",
      "default": 5000,
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-wsl",
        "displayName": "WSL"
      },
      "defaultDefaultValue": 5000,
      "restricted": false
    },
    "remote.WSL.debug": {
      "type": "boolean",
      "description": "If set, the output in the WSL log shows debug information.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-wsl",
        "displayName": "WSL"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.WSL.useShellEnvironment": {
      "type": "boolean",
      "description": "If set, the WSL windows gets the environment from the shell it was opened from.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-wsl",
        "displayName": "WSL"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "remote.WSL1.connectionMethod": {
      "type": "string",
      "deprecationMessage": "No longer used, 'wsl.exe' is now always used to forward the connection to WSL.",
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-wsl",
        "displayName": "WSL"
      },
      "default": "",
      "restricted": false
    },
    "remote.WSL2.connectionMethod": {
      "type": "string",
      "deprecationMessage": "No longer used, 'wsl.exe' is  now always used to forward the connection to WSL.",
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-wsl",
        "displayName": "WSL"
      },
      "default": "",
      "restricted": false
    },
    "remote.WSL.downloadInBackground": {
      "type": "boolean",
      "description": "If set, the WSL extension will download the latest server build in the background. It does this for all WSL platforms that were used in the last 2 weeks.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-wsl",
        "displayName": "WSL"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "indentRainbow.includedLanguages": {
      "type": "array",
      "default": [],
      "description": "For which languages indent-rainbow should be activated. When empty will use for all languages.",
      "scope": 3,
      "source": {
        "id": "oderwat.indent-rainbow"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "indentRainbow.excludedLanguages": {
      "type": "array",
      "default": [
        "plaintext"
      ],
      "description": "For which languages indent-rainbow should be deactivated. When left empty will ignore.",
      "scope": 3,
      "source": {
        "id": "oderwat.indent-rainbow"
      },
      "defaultDefaultValue": [
        "plaintext"
      ],
      "restricted": false
    },
    "indentRainbow.ignoreErrorLanguages": {
      "type": "array",
      "default": [
        "markdown"
      ],
      "description": "For which languages indent-rainbow should skip indent error detection (use '*' to deactivate errors for all languages).",
      "scope": 3,
      "source": {
        "id": "oderwat.indent-rainbow"
      },
      "defaultDefaultValue": [
        "markdown"
      ],
      "restricted": false
    },
    "indentRainbow.updateDelay": {
      "type": "integer",
      "default": 100,
      "description": "The delay in ms until the editor gets updated.",
      "scope": 3,
      "source": {
        "id": "oderwat.indent-rainbow"
      },
      "defaultDefaultValue": 100,
      "restricted": false
    },
    "indentRainbow.indentSetter": {
      "type": "object",
      "default": {},
      "description": "Automatically change indent settings for languages (see README.md for details).",
      "scope": 3,
      "source": {
        "id": "oderwat.indent-rainbow"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "indentRainbow.errorColor": {
      "type": "string",
      "default": "rgba(128,32,32,0.6)",
      "description": "Indent color for when there is an error in the indentation, for example if you have your tabs set to 2 spaces but the indent is 3 spaces. Can be any type of web based color format (hex, rgba, rgb).",
      "scope": 3,
      "source": {
        "id": "oderwat.indent-rainbow"
      },
      "defaultDefaultValue": "rgba(128,32,32,0.6)",
      "restricted": false
    },
    "indentRainbow.tabmixColor": {
      "type": "string",
      "default": "rgba(128,32,96,0.6)",
      "description": "Indent color for when there is a mix between spaces and tabs in the indentation. Can be any type of web based color format (hex, rgba, rgb) or a empty string(to be disabled this coloring).",
      "scope": 3,
      "source": {
        "id": "oderwat.indent-rainbow"
      },
      "defaultDefaultValue": "rgba(128,32,96,0.6)",
      "restricted": false
    },
    "indentRainbow.ignoreLinePatterns": {
      "type": "array",
      "default": [
        "/[ \t]* [*]/g",
        "/[ \t]+[/]{2}/g"
      ],
      "description": "Skip error highlighting for RegEx patterns. Defaults to c/cpp decorated block and full line comments.",
      "scope": 3,
      "source": {
        "id": "oderwat.indent-rainbow"
      },
      "defaultDefaultValue": [
        "/[ \t]* [*]/g",
        "/[ \t]+[/]{2}/g"
      ],
      "restricted": false
    },
    "indentRainbow.colors": {
      "type": "array",
      "default": [
        "rgba(255,255,64,0.07)",
        "rgba(127,255,127,0.07)",
        "rgba(255,127,255,0.07)",
        "rgba(79,236,236,0.07)"
      ],
      "description": "An array with color (hex, rgba, rgb) strings which are used as colors, can be any length.",
      "scope": 3,
      "source": {
        "id": "oderwat.indent-rainbow"
      },
      "defaultDefaultValue": [
        "rgba(255,255,64,0.07)",
        "rgba(127,255,127,0.07)",
        "rgba(255,127,255,0.07)",
        "rgba(79,236,236,0.07)"
      ],
      "restricted": false
    },
    "indentRainbow.colorOnWhiteSpaceOnly": {
      "type": "boolean",
      "default": false,
      "description": "If error color is disabled, indent colors will be rendered until the length of rendered characters (white spaces, tabs, and other ones) is divisible by tabsize. Turn on this option to render white spaces and tabs only.",
      "scope": 3,
      "source": {
        "id": "oderwat.indent-rainbow"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "indentRainbow.indicatorStyle": {
      "type": "string",
      "default": "classic",
      "enum": [
        "classic",
        "light"
      ],
      "markdownDescription": "Classic mode uses a full colored tab to indicate the indendation. Light mode will only display a colored border similar to the default indent guide lines. You can disable the default indicators with `#editor.guides.indentation#`.",
      "scope": 3,
      "source": {
        "id": "oderwat.indent-rainbow"
      },
      "defaultDefaultValue": "classic",
      "restricted": false
    },
    "indentRainbow.lightIndicatorStyleLineWidth": {
      "type": "number",
      "default": 1,
      "description": "This property defines the indent indicator lineWidth when using light mode.",
      "scope": 3,
      "source": {
        "id": "oderwat.indent-rainbow"
      },
      "defaultDefaultValue": 1,
      "restricted": false
    },
    "material-icon-theme.activeIconPack": {
      "type": "string",
      "default": "angular",
      "description": "Select an icon pack that enables specific icons.",
      "enumDescriptions": [
        "Icons for Angular.",
        "Icons for Angular and ngrx.",
        "Icons for React.",
        "Icons for React and Redux.",
        "Icons for Qwik.",
        "Icons for Vue.",
        "Icons for Vue and Vuex.",
        "Icons for NestJS.",
        "No icon pack enabled."
      ],
      "enum": [
        "angular",
        "angular_ngrx",
        "react",
        "react_redux",
        "qwik",
        "vue",
        "vue_vuex",
        "nest",
        "none"
      ],
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": "angular",
      "restricted": false
    },
    "material-icon-theme.files.associations": {
      "type": "object",
      "default": {},
      "description": "Set custom file icon associations.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "material-icon-theme.folders.associations": {
      "type": "object",
      "default": {},
      "description": "Set custom folder icon associations.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "material-icon-theme.languages.associations": {
      "type": "object",
      "default": {},
      "description": "Set custom language icon associations.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "material-icon-theme.files.customClones": {
      "type": "array",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the custom icon"
          },
          "base": {
            "type": "string",
            "description": "Icon used as a base to create the custom cloned icon"
          },
          "color": {
            "type": "string",
            "description": "Color used as a base to recolor the icon"
          },
          "lightColor": {
            "type": "string",
            "description": "Color used as a base to recolor the icon when the theme is light"
          },
          "fileNames": {
            "type": "array",
            "default": [],
            "description": "File names to associate with the custom icon",
            "items": {
              "type": "string"
            }
          },
          "fileExtensions": {
            "type": "array",
            "default": [],
            "description": "File extensions to associate with the custom icon",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "description": "Clone any existing icon and create a new one with custom colors and associations",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "material-icon-theme.folders.customClones": {
      "type": "array",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the custom icon"
          },
          "base": {
            "type": "string",
            "description": "Icon used as a base to create the custom cloned icon"
          },
          "color": {
            "type": "string",
            "description": "Color used as a base to recolor the icon"
          },
          "lightColor": {
            "type": "string",
            "description": "Color used as a base to recolor the icon when the theme is light"
          },
          "folderNames": {
            "type": "array",
            "description": "Folder names to associate with the custom icon",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "description": "Clone any existing icon and create a new one with custom colors and associations",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "material-icon-theme.folders.theme": {
      "type": "string",
      "default": "specific",
      "description": "Set the type for the folder icons.",
      "enumDescriptions": [
        "Select specific folder icons.",
        "Select classic folder icons.",
        "No folder icons."
      ],
      "enum": [
        "specific",
        "classic",
        "none"
      ],
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": "specific",
      "restricted": false
    },
    "material-icon-theme.folders.color": {
      "type": "string",
      "default": "#90a4ae",
      "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
      "description": "Change the color of the folder icons.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": "#90a4ae",
      "restricted": false
    },
    "material-icon-theme.files.color": {
      "type": "string",
      "default": "#90a4ae",
      "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
      "description": "Change the color of the file icons.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": "#90a4ae",
      "restricted": false
    },
    "material-icon-theme.opacity": {
      "type": "number",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "description": "Change the opacity of the icons.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": 1,
      "restricted": false
    },
    "material-icon-theme.hidesExplorerArrows": {
      "type": "boolean",
      "default": false,
      "description": "Hide explorer arrows before folder.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "material-icon-theme.saturation": {
      "type": "number",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "description": "Change the saturation of the icons.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": 1,
      "restricted": false
    },
    "quicktype.justTypes": {
      "type": "boolean",
      "default": true,
      "description": "Produce only types; no (de-)serialization code",
      "scope": 3,
      "source": {
        "id": "quicktype.quicktype",
        "displayName": "Paste JSON as Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "quicktype.inferMaps": {
      "type": "boolean",
      "default": true,
      "description": "Infer maps when object keys look like map keys.",
      "scope": 3,
      "source": {
        "id": "quicktype.quicktype",
        "displayName": "Paste JSON as Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "quicktype.inferEnums": {
      "type": "boolean",
      "default": true,
      "description": "Infer enums when there aren't many different string values.",
      "scope": 3,
      "source": {
        "id": "quicktype.quicktype",
        "displayName": "Paste JSON as Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "quicktype.inferDateTimes": {
      "type": "boolean",
      "default": true,
      "description": "Use date-time types for strings that look like date-times.",
      "scope": 3,
      "source": {
        "id": "quicktype.quicktype",
        "displayName": "Paste JSON as Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "quicktype.inferUuids": {
      "type": "boolean",
      "default": true,
      "description": "Use UUID types for strings that look like UUIDs.",
      "scope": 3,
      "source": {
        "id": "quicktype.quicktype",
        "displayName": "Paste JSON as Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "quicktype.inferIntegerStrings": {
      "type": "boolean",
      "default": true,
      "description": "Convert stringified integers into integers, and back.",
      "scope": 3,
      "source": {
        "id": "quicktype.quicktype",
        "displayName": "Paste JSON as Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "quicktype.inferBooleanStrings": {
      "type": "boolean",
      "default": true,
      "description": "Convert stringified booleans into booleans, and back.",
      "scope": 3,
      "source": {
        "id": "quicktype.quicktype",
        "displayName": "Paste JSON as Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescriptHero.verbosity": {
      "enum": [
        "error",
        "warn",
        "info",
        "debug"
      ],
      "default": "warn",
      "description": "Defines the log output level in the output window. In the log file, it's always info or debug.",
      "scope": 3,
      "source": {
        "id": "rbbit.typescript-hero",
        "displayName": "TypeScript Hero"
      },
      "defaultDefaultValue": "warn",
      "restricted": false
    },
    "java.server.launchMode": {
      "type": "string",
      "enum": [
        "Standard",
        "LightWeight",
        "Hybrid"
      ],
      "enumDescriptions": [
        "Provides full features such as intellisense, refactoring, building, Maven/Gradle support etc.",
        "Starts a syntax server with lower start-up cost. Only provides syntax features such as outline, navigation, javadoc, syntax errors.",
        "Provides full features with better responsiveness. It starts a standard language server and a secondary syntax server. The syntax server provides syntax features until the standard server is ready."
      ],
      "description": "The launch mode for the Java extension",
      "default": "Hybrid",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "Hybrid",
      "restricted": false
    },
    "java.sharedIndexes.enabled": {
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "markdownDescription": "[Experimental] Specify whether to share indexes between different workspaces. When set to `auto`, shared indexes will be enabled in Visual Studio Code - Insiders.",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "java.sharedIndexes.location": {
      "type": "string",
      "markdownDescription": "Specifies a common index location for all workspaces. See default values as follows:\n \nWindows: First use `\"$APPDATA\\\\.jdt\\\\index\"`, or `\"~\\\\.jdt\\\\index\"` if it does not exist\n \nmacOS: `\"~/Library/Caches/.jdt/index\"`\n \nLinux: First use `\"$XDG_CACHE_HOME/.jdt/index\"`, or `\"~/.cache/.jdt/index\"` if it does not exist",
      "default": "",
      "scope": 3,
      "order": 60,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "java.jdt.ls.lombokSupport.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Whether to load lombok processors from project classpath",
      "scope": 3,
      "order": 70,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.jdt.ls.protobufSupport.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specify whether to automatically add Protobuf output source directories to the classpath.\n\n**Note:** Only works for Gradle `com.google.protobuf` plugin `0.8.4` or higher.",
      "scope": 3,
      "order": 80,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.jdt.ls.androidSupport.enabled": {
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "markdownDescription": "[Experimental] Specify whether to enable Android project importing. When set to `auto`, the Android support will be enabled in Visual Studio Code - Insiders.\n\n**Note:** Only works for Android Gradle Plugin `3.2.0` or higher.",
      "scope": 3,
      "order": 90,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "java.trace.server": {
      "type": "string",
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the Java language server.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "redhat.telemetry.enabled": {
      "type": "boolean",
      "default": null,
      "markdownDescription": "Enable usage data and errors to be sent to Red Hat servers. Read our [privacy statement](https://developers.redhat.com/article/tool-data-collection).",
      "scope": 3,
      "tags": [
        "usesOnlineServices",
        "telemetry"
      ],
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "java.import.projectSelection": {
      "type": "string",
      "enum": [
        "manual",
        "automatic"
      ],
      "enumDescriptions": [
        "Manually select the build configuration files.",
        "Let extension automatically scan and select the build configuration files."
      ],
      "default": "automatic",
      "markdownDescription": "[Experimental] Specifies how to select build configuration files to import. \nNote: Currently, `Gradle` projects cannot be partially imported.",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "automatic",
      "restricted": false
    },
    "java.configuration.updateBuildConfiguration": {
      "type": [
        "string"
      ],
      "enum": [
        "disabled",
        "interactive",
        "automatic"
      ],
      "default": "interactive",
      "description": "Specifies how modifications on build files update the Java classpath/configuration",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "interactive",
      "restricted": false
    },
    "java.import.exclusions": {
      "type": "array",
      "description": "Configure glob patterns for excluding folders. Use `!` to negate patterns to allow subfolders imports. You have to include a parent directory. The order is important.",
      "default": [
        "**/node_modules/**",
        "**/.metadata/**",
        "**/archetype-resources/**",
        "**/META-INF/maven/**"
      ],
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [
        "**/node_modules/**",
        "**/.metadata/**",
        "**/archetype-resources/**",
        "**/META-INF/maven/**"
      ],
      "restricted": false
    },
    "java.project.resourceFilters": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^(?!\\*).*"
      },
      "default": [
        "node_modules",
        "\\.git"
      ],
      "markdownDescription": "Excludes files and folders from being refreshed by the Java Language Server, which can improve the overall performance. For example, [\"node_modules\",\"\\.git\"] will exclude all files and folders named `node_modules` or `.git`. Pattern expressions must be compatible with `java.util.regex.Pattern`. Defaults to [\"node_modules\",\"\\.git\"].",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [
        "node_modules",
        "\\.git"
      ],
      "restricted": false
    },
    "java.configuration.checkProjectSettingsExclusions": {
      "deprecationMessage": "Please use 'java.import.generatesMetadataFilesAtProjectRoot' to control whether to generate the project metadata files at the project root. And use 'files.exclude' to control whether to hide the project metadata files from the file explorer.",
      "type": "boolean",
      "default": false,
      "description": "Controls whether to exclude extension-generated project settings files (.project, .classpath, .factorypath, .settings/) from the file explorer.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.import.generatesMetadataFilesAtProjectRoot": {
      "type": "boolean",
      "markdownDescription": "Specify whether the project metadata files(.project, .classpath, .factorypath, .settings/) will be generated at the project root. Click [HERE](command:_java.metadataFilesGeneration) to learn how to change the setting to make it take effect.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.showBuildStatusOnStart.enabled": {
      "anyOf": [
        {
          "enum": [
            "notification",
            "terminal",
            "off"
          ],
          "enumDescriptions": [
            "Show the build status via progress notification on start",
            "Show the build status via terminal on start",
            "Do not show any build status on start"
          ]
        },
        "boolean"
      ],
      "description": "Automatically show build status on startup.",
      "default": "notification",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "notification",
      "restricted": false
    },
    "java.project.encoding": {
      "enum": [
        "ignore",
        "warning",
        "setDefault"
      ],
      "enumDescriptions": [
        "Ignore project encoding settings",
        "Show warning if a project has no explicit encoding set",
        "Set the default workspace encoding settings"
      ],
      "default": "ignore",
      "markdownDescription": "Project encoding settings",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "java.project.sourcePaths": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "markdownDescription": "Relative paths to the workspace where stores the source files. `Only` effective in the `WORKSPACE` scope. The setting will `NOT` affect Maven or Gradle project.",
      "default": [],
      "scope": 3,
      "order": 10,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "java.project.outputPath": {
      "type": [
        "string",
        "null"
      ],
      "markdownDescription": "A relative path to the workspace where stores the compiled output. `Only` effective in the `WORKSPACE` scope. The setting will `NOT` affect Maven or Gradle project.",
      "default": "",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "java.project.referencedLibraries": {
      "type": [
        "array",
        "object"
      ],
      "description": "Configure glob patterns for referencing local libraries to a Java project.",
      "default": [
        "lib/**/*.jar"
      ],
      "properties": {
        "include": {
          "type": "array"
        },
        "exclude": {
          "type": "array"
        },
        "sources": {
          "type": "object"
        }
      },
      "required": [
        "include"
      ],
      "additionalProperties": false,
      "scope": 3,
      "order": 30,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [
        "lib/**/*.jar"
      ],
      "restricted": false
    },
    "java.import.maven.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable the Maven importer.",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.import.maven.offline.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable the Maven offline mode.",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.import.maven.disableTestClasspathFlag": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable test classpath segregation. When enabled, this permits the usage of test resources within a Maven project as dependencies within the compile scope of other projects.",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.maven.downloadSources": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable download of Maven source artifacts as part of importing Maven projects.",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.maven.updateSnapshots": {
      "type": "boolean",
      "default": false,
      "description": "Force update of Snapshots/Releases.",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.configuration.maven.userSettings": {
      "type": "string",
      "default": null,
      "description": "Path to Maven's user settings.xml",
      "scope": 3,
      "order": 60,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "java.configuration.maven.globalSettings": {
      "type": "string",
      "default": null,
      "description": "Path to Maven's global settings.xml",
      "scope": 3,
      "order": 70,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "java.configuration.maven.notCoveredPluginExecutionSeverity": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Specifies severity if the plugin execution is not covered by Maven build lifecycle.",
      "scope": 3,
      "order": 80,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "java.configuration.maven.defaultMojoExecutionAction": {
      "type": "string",
      "enum": [
        "ignore",
        "warn",
        "error",
        "execute"
      ],
      "default": "ignore",
      "description": "Specifies default mojo execution action when no associated metadata can be detected.",
      "scope": 3,
      "order": 90,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "java.configuration.maven.lifecycleMappings": {
      "type": "string",
      "default": null,
      "description": "Path to Maven's lifecycle mappings xml",
      "scope": 3,
      "order": 100,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "java.import.gradle.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable the Gradle importer.",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.import.gradle.wrapper.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Use Gradle from the 'gradle-wrapper.properties' file.",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.import.gradle.version": {
      "type": "string",
      "default": null,
      "description": "Use Gradle from the specific version if the Gradle wrapper is missing or disabled.",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "java.import.gradle.offline.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable the Gradle offline mode.",
      "scope": 3,
      "order": 60,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.import.gradle.annotationProcessing.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable the annotation processing on Gradle projects and delegate Annotation Processing to JDT APT. Only works for Gradle 5.2 or higher.",
      "scope": 3,
      "order": 90,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.autobuild.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable the 'auto build'",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.maxConcurrentBuilds": {
      "type": "integer",
      "default": 1,
      "description": "Max simultaneous project builds",
      "scope": 3,
      "minimum": 1,
      "order": 20,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": 1,
      "restricted": false
    },
    "java.settings.url": {
      "type": "string",
      "markdownDescription": "Specifies the url or file path to the workspace Java settings. See [Setting Global Preferences](https://github.com/redhat-developer/vscode-java/wiki/Settings-Global-Preferences)",
      "default": null,
      "scope": 3,
      "order": 30,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "java.compile.nullAnalysis.nonnull": {
      "type": "array",
      "default": [
        "javax.annotation.Nonnull",
        "org.eclipse.jdt.annotation.NonNull",
        "org.springframework.lang.NonNull"
      ],
      "markdownDescription": "Specify the Nonnull annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in project dependencies. This setting will be ignored if `java.compile.nullAnalysis.mode` is set to `disabled`",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [
        "javax.annotation.Nonnull",
        "org.eclipse.jdt.annotation.NonNull",
        "org.springframework.lang.NonNull"
      ],
      "restricted": false
    },
    "java.compile.nullAnalysis.nullable": {
      "type": "array",
      "default": [
        "javax.annotation.Nullable",
        "org.eclipse.jdt.annotation.Nullable",
        "org.springframework.lang.Nullable"
      ],
      "markdownDescription": "Specify the Nullable annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in project dependencies. This setting will be ignored if `java.compile.nullAnalysis.mode` is set to `disabled`",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [
        "javax.annotation.Nullable",
        "org.eclipse.jdt.annotation.Nullable",
        "org.springframework.lang.Nullable"
      ],
      "restricted": false
    },
    "java.compile.nullAnalysis.nonnullbydefault": {
      "type": "array",
      "default": [
        "javax.annotation.ParametersAreNonnullByDefault",
        "org.eclipse.jdt.annotation.NonNullByDefault",
        "org.springframework.lang.NonNullApi"
      ],
      "markdownDescription": "Specify the NonNullByDefault annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in project dependencies. This setting will be ignored if `java.compile.nullAnalysis.mode` is set to `disabled`",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [
        "javax.annotation.ParametersAreNonnullByDefault",
        "org.eclipse.jdt.annotation.NonNullByDefault",
        "org.springframework.lang.NonNullApi"
      ],
      "restricted": false
    },
    "java.compile.nullAnalysis.mode": {
      "type": "string",
      "enum": [
        "disabled",
        "interactive",
        "automatic"
      ],
      "default": "interactive",
      "markdownDescription": "Specify how to enable the annotation-based null analysis.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "interactive",
      "restricted": false
    },
    "java.errors.incompleteClasspath.severity": {
      "type": [
        "string"
      ],
      "enum": [
        "ignore",
        "info",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Specifies the severity of the message when the classpath is incomplete for a Java file",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "java.configuration.detectJdksAtStart": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Automatically detect JDKs installed on local machine at startup. If you have specified the same JDK version in `#java.configuration.runtimes#`, the extension will use that version first.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.format.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable default Java formatter",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.format.settings.url": {
      "type": "string",
      "markdownDescription": "Specifies the url or file path to the [Eclipse formatter xml settings](https://github.com/redhat-developer/vscode-java/wiki/Formatter-settings).",
      "default": null,
      "scope": 3,
      "order": 20,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "java.format.settings.profile": {
      "type": "string",
      "description": "Optional formatter profile name from the Eclipse formatter settings.",
      "default": null,
      "scope": 3,
      "order": 30,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "java.format.comments.enabled": {
      "type": "boolean",
      "description": "Includes the comments during code formatting.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.format.onType.enabled": {
      "type": "boolean",
      "description": "Enable/disable automatic block formatting when typing `;`, `<enter>` or `}`",
      "default": true,
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.completion.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable code completion support",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.completion.postfix.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable/disable postfix completion support. `#editor.snippetSuggestions#` can be used to customize how postfix snippets are sorted.",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.completion.chain.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable chain completion support. Chain completions are only available when completions are invoked by the completions shortcut",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.completion.favoriteStaticMembers": {
      "type": "array",
      "description": "Defines a list of static members or types with static members. Content assist will propose those static members even if the import is missing.",
      "default": [
        "org.junit.Assert.*",
        "org.junit.Assume.*",
        "org.junit.jupiter.api.Assertions.*",
        "org.junit.jupiter.api.Assumptions.*",
        "org.junit.jupiter.api.DynamicContainer.*",
        "org.junit.jupiter.api.DynamicTest.*",
        "org.mockito.Mockito.*",
        "org.mockito.ArgumentMatchers.*",
        "org.mockito.Answers.*"
      ],
      "scope": 3,
      "order": 40,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [
        "org.junit.Assert.*",
        "org.junit.Assume.*",
        "org.junit.jupiter.api.Assertions.*",
        "org.junit.jupiter.api.Assumptions.*",
        "org.junit.jupiter.api.DynamicContainer.*",
        "org.junit.jupiter.api.DynamicTest.*",
        "org.mockito.Mockito.*",
        "org.mockito.ArgumentMatchers.*",
        "org.mockito.Answers.*"
      ],
      "restricted": false
    },
    "java.completion.filteredTypes": {
      "type": "array",
      "description": "Defines the type filters. All types whose fully qualified name matches the selected filter strings will be ignored in content assist or quick fix proposals and when organizing imports. For example 'java.awt.*' will hide all types from the awt packages.",
      "default": [
        "java.awt.*",
        "com.sun.*",
        "sun.*",
        "jdk.*",
        "org.graalvm.*",
        "io.micrometer.shaded.*"
      ],
      "scope": 3,
      "order": 50,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [
        "java.awt.*",
        "com.sun.*",
        "sun.*",
        "jdk.*",
        "org.graalvm.*",
        "io.micrometer.shaded.*"
      ],
      "restricted": false
    },
    "java.completion.guessMethodArguments": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        "auto",
        "off",
        "insertParameterNames",
        "insertBestGuessedArguments"
      ],
      "enumDescriptions": [
        "Use 'off' only when using Visual Studio Code - Insiders, other platform will defaults to 'insertBestGuessedArguments'.",
        "Method arguments will not be inserted during completion.",
        "The parameter names will be inserted during completion.",
        "The best guessed arguments will be inserted during completion according to the code context."
      ],
      "default": "auto",
      "description": "Specify how the arguments will be filled during completion.",
      "scope": 3,
      "order": 60,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "java.completion.matchCase": {
      "type": "string",
      "enum": [
        "firstLetter",
        "off"
      ],
      "enumDescriptions": [
        "Match case for the first letter when doing completion.",
        "Do not match case when doing completion."
      ],
      "default": "firstLetter",
      "markdownDescription": "Specify whether to match case for code completion.",
      "scope": 3,
      "order": 70,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "firstLetter",
      "restricted": false
    },
    "java.completion.importOrder": {
      "type": "array",
      "description": "Defines the sorting order of import statements. A package or type name prefix (e.g. 'org.eclipse') is a valid entry. An import is always added to the most specific group. As a result, the empty string (e.g. '') can be used to group all other imports. Static imports are prefixed with a '#'",
      "default": [
        "#",
        "java",
        "javax",
        "org",
        "com",
        ""
      ],
      "scope": 3,
      "order": 80,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [
        "#",
        "java",
        "javax",
        "org",
        "com",
        ""
      ],
      "restricted": false
    },
    "java.completion.lazyResolveTextEdit.enabled": {
      "type": "boolean",
      "default": true,
      "description": "[Experimental] Enable/disable lazily resolving text edits for code completion.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.completion.maxResults": {
      "type": "integer",
      "default": 0,
      "markdownDescription": "Maximum number of completion results (not including snippets).\n`0` (the default value) disables the limit, all results are returned. In case of performance problems, consider setting a sensible limit.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": 0,
      "restricted": false
    },
    "java.signatureHelp.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable the signature help.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.signatureHelp.description.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable to show the description in signature help.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.completion.collapseCompletionItems": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable the collapse of overloaded methods in completion items. Overrides `#java.completion.guessMethodArguments#`.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.templates.fileHeader": {
      "type": "array",
      "markdownDescription": "Specifies the file header comment for new Java file. Supports configuring multi-line comments with an array of strings, and using ${variable} to reference the [predefined variables](command:_java.templateVariables).",
      "scope": 3,
      "default": [],
      "order": 10,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "java.templates.typeComment": {
      "type": "array",
      "markdownDescription": "Specifies the type comment for new Java type. Supports configuring multi-line comments with an array of strings, and using ${variable} to reference the [predefined variables](command:_java.templateVariables).",
      "scope": 3,
      "default": [],
      "order": 20,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "java.codeGeneration.insertionLocation": {
      "type": "string",
      "enum": [
        "afterCursor",
        "beforeCursor",
        "lastMember"
      ],
      "enumDescriptions": [
        "Insert the generated code after the member where the cursor is located.",
        "Insert the generated code before the member where the cursor is located.",
        "Insert the generated code as the last member of the target type."
      ],
      "description": "Specifies the insertion location of the code generated by source actions.",
      "default": "afterCursor",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "afterCursor",
      "restricted": false
    },
    "java.codeGeneration.addFinalForNewDeclaration": {
      "type": "string",
      "enum": [
        "none",
        "fields",
        "variables",
        "all"
      ],
      "enumDescriptions": [
        "Do not generate final modifier.",
        "Generate 'final' modifier only for new field declarations.",
        "Generate 'final' modifier only for new variable declarations.",
        "Generate 'final' modifier for all new declarations."
      ],
      "description": "Whether to generate the 'final' modifer for code actions that create new declarations.",
      "default": "none",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "none",
      "restricted": false
    },
    "java.codeGeneration.hashCodeEquals.useJava7Objects": {
      "type": "boolean",
      "description": "Use Objects.hash and Objects.equals when generating the hashCode and equals methods. This setting only applies to Java 7 and higher.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.codeGeneration.hashCodeEquals.useInstanceof": {
      "type": "boolean",
      "description": "Use 'instanceof' to compare types when generating the hashCode and equals methods.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.codeGeneration.useBlocks": {
      "type": "boolean",
      "description": "Use blocks in 'if' statements when generating the methods.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.codeGeneration.generateComments": {
      "type": "boolean",
      "description": "Generate method comments when generating the methods.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.codeGeneration.toString.template": {
      "type": "string",
      "description": "The template for generating the toString method.",
      "default": "${object.className} [${member.name()}=${member.value}, ${otherMembers}]",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "${object.className} [${member.name()}=${member.value}, ${otherMembers}]",
      "restricted": false
    },
    "java.codeGeneration.toString.codeStyle": {
      "type": "string",
      "enum": [
        "STRING_CONCATENATION",
        "STRING_BUILDER",
        "STRING_BUILDER_CHAINED",
        "STRING_FORMAT"
      ],
      "enumDescriptions": [
        "String concatenation",
        "StringBuilder/StringBuffer",
        "StringBuilder/StringBuffer - chained call",
        "String.format/MessageFormat"
      ],
      "description": "The code style for generating the toString method.",
      "default": "STRING_CONCATENATION",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "STRING_CONCATENATION",
      "restricted": false
    },
    "java.codeGeneration.toString.skipNullValues": {
      "type": "boolean",
      "description": "Skip null values when generating the toString method.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.codeGeneration.toString.listArrayContents": {
      "type": "boolean",
      "description": "List contents of arrays instead of using native toString().",
      "default": true,
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.codeGeneration.toString.limitElements": {
      "type": "integer",
      "description": "Limit number of items in arrays/collections/maps to list, if 0 then list all.",
      "default": 0,
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": 0,
      "restricted": false
    },
    "java.edit.smartSemicolonDetection.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Defines the `smart semicolon` detection. Defaults to `false`.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.cleanup.actions": {
      "type": "array",
      "markdownDescription": "The list of clean ups to be run on the current document when it's saved or when the cleanup command is issued. Clean ups can automatically fix code style or programming mistakes. Click [HERE](command:_java.learnMoreAboutCleanUps) to learn more about what each clean up does.",
      "items": {
        "type": "string",
        "enum": [
          "qualifyMembers",
          "qualifyStaticMembers",
          "addOverride",
          "addDeprecated",
          "stringConcatToTextBlock",
          "invertEquals",
          "addFinalModifier",
          "instanceofPatternMatch",
          "lambdaExpressionFromAnonymousClass",
          "lambdaExpression",
          "switchExpression",
          "tryWithResource",
          "renameFileToType"
        ]
      },
      "default": [
        "renameFileToType"
      ],
      "scope": 3,
      "order": 10,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [
        "renameFileToType"
      ],
      "restricted": false
    },
    "java.cleanup.actionsOnSave": {
      "type": "array",
      "deprecationMessage": "Deprecated, please use 'java.cleanup.actions' instead.",
      "items": {
        "type": "string",
        "enum": [
          "qualifyMembers",
          "qualifyStaticMembers",
          "addOverride",
          "addDeprecated",
          "stringConcatToTextBlock",
          "invertEquals",
          "addFinalModifier",
          "instanceofPatternMatch",
          "lambdaExpressionFromAnonymousClass",
          "lambdaExpression",
          "switchExpression",
          "tryWithResource"
        ]
      },
      "default": [],
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "java.saveActions.cleanup": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable cleanup actions on save.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.saveActions.organizeImports": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable auto organize imports on save action",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.sources.organizeImports.starThreshold": {
      "type": "integer",
      "description": "Specifies the number of imports added before a star-import declaration is used.",
      "default": 99,
      "scope": 3,
      "minimum": 1,
      "order": 30,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": 99,
      "restricted": false
    },
    "java.sources.organizeImports.staticStarThreshold": {
      "type": "integer",
      "description": "Specifies the number of static imports added before a star-import declaration is used.",
      "default": 99,
      "scope": 3,
      "minimum": 1,
      "order": 40,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": 99,
      "restricted": false
    },
    "java.quickfix.showAt": {
      "type": "string",
      "enum": [
        "line",
        "problem"
      ],
      "default": "line",
      "description": "Show quickfixes at the problem or line level.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "line",
      "restricted": false
    },
    "java.codeAction.sortMembers.avoidVolatileChanges": {
      "type": "boolean",
      "default": true,
      "description": "Reordering of fields, enum constants, and initializers can result in semantic and runtime changes due to different initialization and persistence order. This setting prevents this from occurring.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.refactoring.extract.interface.replace": {
      "type": "boolean",
      "markdownDescription": "Specify whether to replace all the occurrences of the subtype with the new extracted interface.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.referencesCodeLens.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable the references code lens.",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.implementationsCodeLens.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable the implementations code lens.",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.references.includeAccessors": {
      "type": "boolean",
      "default": true,
      "description": "Include getter, setter and builder/constructor when finding references.",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.references.includeDecompiledSources": {
      "type": "boolean",
      "default": true,
      "description": "Include the decompiled sources when finding references.",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.symbols.includeSourceMethodDeclarations": {
      "type": "boolean",
      "markdownDescription": "Include method declarations from source files in symbol search.",
      "default": false,
      "scope": 3,
      "order": 50,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.typeHierarchy.lazyLoad": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable lazy loading the content in type hierarchy. Lazy loading could save a lot of loading time but every type should be expanded manually to load its content.",
      "scope": 3,
      "order": 60,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.inlayHints.parameterNames.enabled": {
      "type": "string",
      "enum": [
        "none",
        "literals",
        "all"
      ],
      "enumDescriptions": [
        "Disable parameter name hints",
        "Enable parameter name hints only for literal arguments",
        "Enable parameter name hints for literal and non-literal arguments"
      ],
      "default": "literals",
      "markdownDescription": "Enable/disable inlay hints for parameter names:\n```java\n\nInteger.valueOf(/* s: */ '123', /* radix: */ 10)\n \n```\n `#java.inlayHints.parameterNames.exclusions#` can be used to disable the inlay hints for methods.",
      "scope": 3,
      "order": 70,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "literals",
      "restricted": false
    },
    "java.inlayHints.parameterNames.exclusions": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "markdownDescription": "The patterns for the methods that will be disabled to show the inlay hints. Supported pattern examples:\n - `java.lang.Math.*` - All the methods from java.lang.Math.\n - `*.Arrays.asList` - Methods named as 'asList' in the types named as 'Arrays'.\n - `*.println(*)` - Methods named as 'println'.\n - `(from, to)` - Methods with two parameters named as 'from' and 'to'.\n - `(arg*)` - Methods with one parameter whose name starts with 'arg'.",
      "scope": 3,
      "order": 80,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "java.eclipse.downloadSources": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable download of Maven source artifacts for Eclipse projects.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.contentProvider.preferred": {
      "type": "string",
      "description": "Preferred content provider (a 3rd party decompiler id, usually)",
      "default": null,
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "java.foldingRange.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable smart folding range support. If disabled, it will use the default indentation-based folding range provided by VS Code.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.selectionRange.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable Smart Selection support for Java. Disabling this option will not affect the VS Code built-in word-based and bracket-based smart selection.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.edit.validateAllOpenBuffersOnChanges": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Specifies whether to recheck all open Java files for diagnostics when editing a Java file.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.editor.reloadChangedSources": {
      "type": "string",
      "enum": [
        "ask",
        "auto",
        "manual"
      ],
      "enumDescriptions": [
        "Ask to reload the sources of the open class files",
        "Automatically reload the sources of the open class files",
        "Manually reload the sources of the open class files"
      ],
      "default": "ask",
      "markdownDescription": "Specifies whether to reload the sources of the open class files when their source jar files are changed.",
      "scope": 3,
      "source": {
        "id": "redhat.java",
        "displayName": "Language Support for Java(TM) by Red Hat"
      },
      "defaultDefaultValue": "ask",
      "restricted": false
    },
    "rust-analyzer.cargoRunner": {
      "type": [
        "null",
        "string"
      ],
      "default": null,
      "description": "Custom cargo runner extension ID.",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.runnables.extraEnv": {
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "platform": {
                "type": [
                  "null",
                  "string",
                  "array"
                ],
                "default": null,
                "markdownDescription": "Platform(s) filter like \"win32\" or [\"linux\", \"win32\"]. See [process.platform](https://nodejs.org/api/process.html#processplatform) values."
              },
              "mask": {
                "type": "string",
                "description": "Runnable name mask"
              },
              "env": {
                "type": "object",
                "description": "Variables in form of { \"key\": \"value\"}"
              }
            }
          }
        },
        {
          "type": "object",
          "description": "Variables in form of { \"key\": \"value\"}"
        }
      ],
      "default": null,
      "markdownDescription": "Environment variables passed to the runnable launched using `Test` or `Debug` lens or `rust-analyzer.run` command.",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.runnables.problemMatcher": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "$rustc"
      ],
      "markdownDescription": "Problem matchers to use for `rust-analyzer.run` command, eg `[\"$rustc\", \"$rust-panic\"]`.",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [
        "$rustc"
      ],
      "restricted": false
    },
    "rust-analyzer.statusBar.clickAction": {
      "type": "string",
      "enum": [
        "stopServer",
        "openLogs"
      ],
      "enumDescriptions": [
        "Stop Server",
        "Open Logs"
      ],
      "default": "openLogs",
      "markdownDescription": "Action to run when clicking the extension status bar item.",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "openLogs",
      "restricted": false
    },
    "rust-analyzer.server.extraEnv": {
      "type": [
        "null",
        "object"
      ],
      "additionalProperties": {
        "type": [
          "string",
          "number"
        ]
      },
      "default": null,
      "markdownDescription": "Extra environment variables that will be passed to the rust-analyzer executable. Useful for passing e.g. `RA_LOG` for debugging.",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.trace.server": {
      "type": "string",
      "scope": 3,
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "enumDescriptions": [
        "No traces",
        "Error only",
        "Full log"
      ],
      "default": "off",
      "description": "Trace requests to the rust-analyzer (this is usually overly verbose and not recommended for regular users).",
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "rust-analyzer.trace.extension": {
      "description": "Enable logging of VS Code extensions itself.",
      "type": "boolean",
      "default": false,
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.debug.engine": {
      "type": "string",
      "enum": [
        "auto",
        "vadimcn.vscode-lldb",
        "ms-vscode.cpptools"
      ],
      "default": "auto",
      "description": "Preferred debug engine.",
      "markdownEnumDescriptions": [
        "First try to use [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb), if it's not installed try to use [MS C++ tools](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools).",
        "Use [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb)",
        "Use [MS C++ tools](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools)"
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "rust-analyzer.debug.sourceFileMap": {
      "type": [
        "object",
        "string"
      ],
      "const": "auto",
      "description": "Optional source file mappings passed to the debug engine.",
      "default": {
        "/rustc/<id>": "${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"
      },
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": {
        "/rustc/<id>": "${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"
      },
      "restricted": false
    },
    "rust-analyzer.debug.openDebugPane": {
      "markdownDescription": "Whether to open up the `Debug Panel` on debugging start.",
      "type": "boolean",
      "default": false,
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.debug.engineSettings": {
      "type": "object",
      "default": {},
      "markdownDescription": "Optional settings passed to the debug engine. Example: `{ \"lldb\": { \"terminal\":\"external\"} }`",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "rust-analyzer.restartServerOnConfigChange": {
      "markdownDescription": "Whether to restart the server automatically when certain settings that require a restart are changed.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.typing.continueCommentsOnNewline": {
      "markdownDescription": "Whether to prefix newlines after comments with the corresponding comment prefix.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.diagnostics.previewRustcOutput": {
      "markdownDescription": "Whether to show the main part of the rendered rustc output of a diagnostic message.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.diagnostics.useRustcErrorCode": {
      "markdownDescription": "Whether to show diagnostics using the original rustc error code. If this is false, all rustc diagnostics will have the code 'rustc(Click for full compiler diagnostics)'",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.discoverProjectRunner": {
      "markdownDescription": "Sets the extension responsible for determining which extension the rust-analyzer extension uses to generate `rust-project.json` files. This should should only be used\n if a build system like Buck or Bazel is also in use.",
      "default": null,
      "type": [
        "null",
        "string"
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.showUnlinkedFileNotification": {
      "markdownDescription": "Whether to show a notification for unlinked files asking the user to add the corresponding Cargo.toml to the linked projects setting.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.showRequestFailedErrorNotification": {
      "markdownDescription": "Whether to show error notifications for failing requests.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.showDependenciesExplorer": {
      "markdownDescription": "Whether to show the dependencies view.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.testExplorer": {
      "markdownDescription": "Whether to show the test explorer.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.assist.emitMustUse": {
      "markdownDescription": "Whether to insert #[must_use] when generating `as_` methods\nfor enum variants.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.assist.expressionFillDefault": {
      "markdownDescription": "Placeholder expression to use for missing expressions in assists.",
      "default": "todo",
      "type": "string",
      "enum": [
        "todo",
        "default"
      ],
      "enumDescriptions": [
        "Fill missing expressions with the `todo` macro",
        "Fill missing expressions with reasonable defaults, `new` or `default` constructors."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "todo",
      "restricted": false
    },
    "rust-analyzer.cachePriming.enable": {
      "markdownDescription": "Warm up caches on project load.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.cachePriming.numThreads": {
      "markdownDescription": "How many worker threads to handle priming caches. The default `0` means to pick automatically.",
      "default": 0,
      "type": "number",
      "minimum": 0,
      "maximum": 255,
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": 0,
      "restricted": false
    },
    "rust-analyzer.cargo.allTargets": {
      "markdownDescription": "Pass `--all-targets` to cargo invocation.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.cargo.autoreload": {
      "markdownDescription": "Automatically refresh project info via `cargo metadata` on\n`Cargo.toml` or `.cargo/config.toml` changes.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.cargo.buildScripts.enable": {
      "markdownDescription": "Run build scripts (`build.rs`) for more precise code analysis.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.cargo.buildScripts.invocationLocation": {
      "markdownDescription": "Specifies the working directory for running build scripts.\n- \"workspace\": run build scripts for a workspace in the workspace's root directory.\n    This is incompatible with `#rust-analyzer.cargo.buildScripts.invocationStrategy#` set to `once`.\n- \"root\": run build scripts in the project's root directory.\nThis config only has an effect when `#rust-analyzer.cargo.buildScripts.overrideCommand#`\nis set.",
      "default": "workspace",
      "type": "string",
      "enum": [
        "workspace",
        "root"
      ],
      "enumDescriptions": [
        "The command will be executed in the corresponding workspace root.",
        "The command will be executed in the project root."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "workspace",
      "restricted": false
    },
    "rust-analyzer.cargo.buildScripts.invocationStrategy": {
      "markdownDescription": "Specifies the invocation strategy to use when running the build scripts command.\nIf `per_workspace` is set, the command will be executed for each workspace.\nIf `once` is set, the command will be executed once.\nThis config only has an effect when `#rust-analyzer.cargo.buildScripts.overrideCommand#`\nis set.",
      "default": "per_workspace",
      "type": "string",
      "enum": [
        "per_workspace",
        "once"
      ],
      "enumDescriptions": [
        "The command will be executed for each workspace.",
        "The command will be executed once."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "per_workspace",
      "restricted": false
    },
    "rust-analyzer.cargo.buildScripts.overrideCommand": {
      "markdownDescription": "Override the command rust-analyzer uses to run build scripts and\nbuild procedural macros. The command is required to output json\nand should therefore include `--message-format=json` or a similar\noption.\n\nIf there are multiple linked projects/workspaces, this command is invoked for\neach of them, with the working directory being the workspace root\n(i.e., the folder containing the `Cargo.toml`). This can be overwritten\nby changing `#rust-analyzer.cargo.buildScripts.invocationStrategy#` and\n`#rust-analyzer.cargo.buildScripts.invocationLocation#`.\n\nBy default, a cargo invocation will be constructed for the configured\ntargets and features, with the following base command line:\n\n```bash\ncargo check --quiet --workspace --message-format=json --all-targets\n```\n.",
      "default": null,
      "type": [
        "null",
        "array"
      ],
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.cargo.buildScripts.rebuildOnSave": {
      "markdownDescription": "Rerun proc-macros building/build-scripts running when proc-macro\nor build-script sources change and are saved.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.cargo.buildScripts.useRustcWrapper": {
      "markdownDescription": "Use `RUSTC_WRAPPER=rust-analyzer` when running build scripts to\navoid checking unnecessary things.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.cargo.cfgs": {
      "markdownDescription": "List of cfg options to enable with the given values.",
      "default": {
        "debug_assertions": null,
        "miri": null
      },
      "type": "object",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": {
        "debug_assertions": null,
        "miri": null
      },
      "restricted": false
    },
    "rust-analyzer.cargo.extraArgs": {
      "markdownDescription": "Extra arguments that are passed to every cargo invocation.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.cargo.extraEnv": {
      "markdownDescription": "Extra environment variables that will be set when running cargo, rustc\nor other commands within the workspace. Useful for setting RUSTFLAGS.",
      "default": {},
      "type": "object",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "rust-analyzer.cargo.features": {
      "markdownDescription": "List of features to activate.\n\nSet this to `\"all\"` to pass `--all-features` to cargo.",
      "default": [],
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "all"
          ],
          "enumDescriptions": [
            "Pass `--all-features` to cargo"
          ]
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.cargo.noDefaultFeatures": {
      "markdownDescription": "Whether to pass `--no-default-features` to cargo.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.cargo.sysroot": {
      "markdownDescription": "Relative path to the sysroot, or \"discover\" to try to automatically find it via\n\"rustc --print sysroot\".\n\nUnsetting this disables sysroot loading.\n\nThis option does not take effect until rust-analyzer is restarted.",
      "default": "discover",
      "type": [
        "null",
        "string"
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "discover",
      "restricted": false
    },
    "rust-analyzer.cargo.sysrootQueryMetadata": {
      "markdownDescription": "Whether to run cargo metadata on the sysroot library allowing rust-analyzer to analyze\nthird-party dependencies of the standard libraries.\n\nThis will cause `cargo` to create a lockfile in your sysroot directory. rust-analyzer\nwill attempt to clean up afterwards, but nevertheless requires the location to be\nwritable to.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.cargo.sysrootSrc": {
      "markdownDescription": "Relative path to the sysroot library sources. If left unset, this will default to\n`{cargo.sysroot}/lib/rustlib/src/rust/library`.\n\nThis option does not take effect until rust-analyzer is restarted.",
      "default": null,
      "type": [
        "null",
        "string"
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.cargo.target": {
      "markdownDescription": "Compilation target override (target triple).",
      "default": null,
      "type": [
        "null",
        "string"
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.cargo.targetDir": {
      "markdownDescription": "Optional path to a rust-analyzer specific target directory.\nThis prevents rust-analyzer's `cargo check` and initial build-script and proc-macro\nbuilding from locking the `Cargo.lock` at the expense of duplicating build artifacts.\n\nSet to `true` to use a subdirectory of the existing target directory or\nset to a path relative to the workspace to use that path.",
      "default": null,
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "boolean"
        },
        {
          "type": "string"
        }
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.checkOnSave": {
      "markdownDescription": "Run the check command for diagnostics on save.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.check.allTargets": {
      "markdownDescription": "Check all targets and tests (`--all-targets`). Defaults to\n`#rust-analyzer.cargo.allTargets#`.",
      "default": null,
      "type": [
        "null",
        "boolean"
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.check.command": {
      "markdownDescription": "Cargo command to use for `cargo check`.",
      "default": "check",
      "type": "string",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "check",
      "restricted": false
    },
    "rust-analyzer.check.extraArgs": {
      "markdownDescription": "Extra arguments for `cargo check`.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.check.extraEnv": {
      "markdownDescription": "Extra environment variables that will be set when running `cargo check`.\nExtends `#rust-analyzer.cargo.extraEnv#`.",
      "default": {},
      "type": "object",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "rust-analyzer.check.features": {
      "markdownDescription": "List of features to activate. Defaults to\n`#rust-analyzer.cargo.features#`.\n\nSet to `\"all\"` to pass `--all-features` to Cargo.",
      "default": null,
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "all"
          ],
          "enumDescriptions": [
            "Pass `--all-features` to cargo"
          ]
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.check.ignore": {
      "markdownDescription": "List of `cargo check` (or other command specified in `check.command`) diagnostics to ignore.\n\nFor example for `cargo check`: `dead_code`, `unused_imports`, `unused_variables`,...",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.check.invocationLocation": {
      "markdownDescription": "Specifies the working directory for running checks.\n- \"workspace\": run checks for workspaces in the corresponding workspaces' root directories.\n    This falls back to \"root\" if `#rust-analyzer.check.invocationStrategy#` is set to `once`.\n- \"root\": run checks in the project's root directory.\nThis config only has an effect when `#rust-analyzer.check.overrideCommand#`\nis set.",
      "default": "workspace",
      "type": "string",
      "enum": [
        "workspace",
        "root"
      ],
      "enumDescriptions": [
        "The command will be executed in the corresponding workspace root.",
        "The command will be executed in the project root."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "workspace",
      "restricted": false
    },
    "rust-analyzer.check.invocationStrategy": {
      "markdownDescription": "Specifies the invocation strategy to use when running the check command.\nIf `per_workspace` is set, the command will be executed for each workspace.\nIf `once` is set, the command will be executed once.\nThis config only has an effect when `#rust-analyzer.check.overrideCommand#`\nis set.",
      "default": "per_workspace",
      "type": "string",
      "enum": [
        "per_workspace",
        "once"
      ],
      "enumDescriptions": [
        "The command will be executed for each workspace.",
        "The command will be executed once."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "per_workspace",
      "restricted": false
    },
    "rust-analyzer.check.noDefaultFeatures": {
      "markdownDescription": "Whether to pass `--no-default-features` to Cargo. Defaults to\n`#rust-analyzer.cargo.noDefaultFeatures#`.",
      "default": null,
      "type": [
        "null",
        "boolean"
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.check.overrideCommand": {
      "markdownDescription": "Override the command rust-analyzer uses instead of `cargo check` for\ndiagnostics on save. The command is required to output json and\nshould therefore include `--message-format=json` or a similar option\n(if your client supports the `colorDiagnosticOutput` experimental\ncapability, you can use `--message-format=json-diagnostic-rendered-ansi`).\n\nIf you're changing this because you're using some tool wrapping\nCargo, you might also want to change\n`#rust-analyzer.cargo.buildScripts.overrideCommand#`.\n\nIf there are multiple linked projects/workspaces, this command is invoked for\neach of them, with the working directory being the workspace root\n(i.e., the folder containing the `Cargo.toml`). This can be overwritten\nby changing `#rust-analyzer.check.invocationStrategy#` and\n`#rust-analyzer.check.invocationLocation#`.\n\nIf `$saved_file` is part of the command, rust-analyzer will pass\nthe absolute path of the saved file to the provided command. This is\nintended to be used with non-Cargo build systems.\nNote that `$saved_file` is experimental and may be removed in the future.\n\nAn example command would be:\n\n```bash\ncargo check --workspace --message-format=json --all-targets\n```\n.",
      "default": null,
      "type": [
        "null",
        "array"
      ],
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.check.targets": {
      "markdownDescription": "Check for specific targets. Defaults to `#rust-analyzer.cargo.target#` if empty.\n\nCan be a single target, e.g. `\"x86_64-unknown-linux-gnu\"` or a list of targets, e.g.\n`[\"aarch64-apple-darwin\", \"x86_64-apple-darwin\"]`.\n\nAliased as `\"checkOnSave.targets\"`.",
      "default": null,
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.check.workspace": {
      "markdownDescription": "Whether `--workspace` should be passed to `cargo check`.\nIf false, `-p <package>` will be passed instead.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.completion.autoimport.enable": {
      "markdownDescription": "Toggles the additional completions that automatically add imports when completed.\nNote that your client must specify the `additionalTextEdits` LSP client capability to truly have this feature enabled.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.completion.autoself.enable": {
      "markdownDescription": "Toggles the additional completions that automatically show method calls and field accesses\nwith `self` prefixed to them when inside a method.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.completion.callable.snippets": {
      "markdownDescription": "Whether to add parenthesis and argument snippets when completing function.",
      "default": "fill_arguments",
      "type": "string",
      "enum": [
        "fill_arguments",
        "add_parentheses",
        "none"
      ],
      "enumDescriptions": [
        "Add call parentheses and pre-fill arguments.",
        "Add call parentheses.",
        "Do no snippet completions for callables."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "fill_arguments",
      "restricted": false
    },
    "rust-analyzer.completion.fullFunctionSignatures.enable": {
      "markdownDescription": "Whether to show full function/method signatures in completion docs.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.completion.limit": {
      "markdownDescription": "Maximum number of completions to return. If `None`, the limit is infinite.",
      "default": null,
      "type": [
        "null",
        "integer"
      ],
      "minimum": 0,
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.completion.postfix.enable": {
      "markdownDescription": "Whether to show postfix snippets like `dbg`, `if`, `not`, etc.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.completion.privateEditable.enable": {
      "markdownDescription": "Enables completions of private items and fields that are defined in the current workspace even if they are not visible at the current position.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.completion.snippets.custom": {
      "markdownDescription": "Custom completion snippets.",
      "default": {
        "Arc::new": {
          "postfix": "arc",
          "body": "Arc::new(${receiver})",
          "requires": "std::sync::Arc",
          "description": "Put the expression into an `Arc`",
          "scope": "expr"
        },
        "Rc::new": {
          "postfix": "rc",
          "body": "Rc::new(${receiver})",
          "requires": "std::rc::Rc",
          "description": "Put the expression into an `Rc`",
          "scope": "expr"
        },
        "Box::pin": {
          "postfix": "pinbox",
          "body": "Box::pin(${receiver})",
          "requires": "std::boxed::Box",
          "description": "Put the expression into a pinned `Box`",
          "scope": "expr"
        },
        "Ok": {
          "postfix": "ok",
          "body": "Ok(${receiver})",
          "description": "Wrap the expression in a `Result::Ok`",
          "scope": "expr"
        },
        "Err": {
          "postfix": "err",
          "body": "Err(${receiver})",
          "description": "Wrap the expression in a `Result::Err`",
          "scope": "expr"
        },
        "Some": {
          "postfix": "some",
          "body": "Some(${receiver})",
          "description": "Wrap the expression in an `Option::Some`",
          "scope": "expr"
        }
      },
      "type": "object",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": {
        "Arc::new": {
          "postfix": "arc",
          "body": "Arc::new(${receiver})",
          "requires": "std::sync::Arc",
          "description": "Put the expression into an `Arc`",
          "scope": "expr"
        },
        "Rc::new": {
          "postfix": "rc",
          "body": "Rc::new(${receiver})",
          "requires": "std::rc::Rc",
          "description": "Put the expression into an `Rc`",
          "scope": "expr"
        },
        "Box::pin": {
          "postfix": "pinbox",
          "body": "Box::pin(${receiver})",
          "requires": "std::boxed::Box",
          "description": "Put the expression into a pinned `Box`",
          "scope": "expr"
        },
        "Ok": {
          "postfix": "ok",
          "body": "Ok(${receiver})",
          "description": "Wrap the expression in a `Result::Ok`",
          "scope": "expr"
        },
        "Err": {
          "postfix": "err",
          "body": "Err(${receiver})",
          "description": "Wrap the expression in a `Result::Err`",
          "scope": "expr"
        },
        "Some": {
          "postfix": "some",
          "body": "Some(${receiver})",
          "description": "Wrap the expression in an `Option::Some`",
          "scope": "expr"
        }
      },
      "restricted": false
    },
    "rust-analyzer.completion.termSearch.enable": {
      "markdownDescription": "Whether to enable term search based snippets like `Some(foo.bar().baz())`.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.diagnostics.disabled": {
      "markdownDescription": "List of rust-analyzer diagnostics to disable.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.diagnostics.enable": {
      "markdownDescription": "Whether to show native rust-analyzer diagnostics.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.diagnostics.experimental.enable": {
      "markdownDescription": "Whether to show experimental rust-analyzer diagnostics that might\nhave more false positives than usual.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.diagnostics.remapPrefix": {
      "markdownDescription": "Map of prefixes to be substituted when parsing diagnostic file paths.\nThis should be the reverse mapping of what is passed to `rustc` as `--remap-path-prefix`.",
      "default": {},
      "type": "object",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "rust-analyzer.diagnostics.styleLints.enable": {
      "markdownDescription": "Whether to run additional style lints.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.diagnostics.warningsAsHint": {
      "markdownDescription": "List of warnings that should be displayed with hint severity.\n\nThe warnings will be indicated by faded text or three dots in code\nand will not show up in the `Problems Panel`.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.diagnostics.warningsAsInfo": {
      "markdownDescription": "List of warnings that should be displayed with info severity.\n\nThe warnings will be indicated by a blue squiggly underline in code\nand a blue icon in the `Problems Panel`.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.files.excludeDirs": {
      "markdownDescription": "These directories will be ignored by rust-analyzer. They are\nrelative to the workspace root, and globs are not supported. You may\nalso need to add the folders to Code's `files.watcherExclude`.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.files.watcher": {
      "markdownDescription": "Controls file watching implementation.",
      "default": "client",
      "type": "string",
      "enum": [
        "client",
        "server"
      ],
      "enumDescriptions": [
        "Use the client (editor) to watch files for changes",
        "Use server-side file watching"
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "client",
      "restricted": false
    },
    "rust-analyzer.highlightRelated.breakPoints.enable": {
      "markdownDescription": "Enables highlighting of related references while the cursor is on `break`, `loop`, `while`, or `for` keywords.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.highlightRelated.closureCaptures.enable": {
      "markdownDescription": "Enables highlighting of all captures of a closure while the cursor is on the `|` or move keyword of a closure.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.highlightRelated.exitPoints.enable": {
      "markdownDescription": "Enables highlighting of all exit points while the cursor is on any `return`, `?`, `fn`, or return type arrow (`->`).",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.highlightRelated.references.enable": {
      "markdownDescription": "Enables highlighting of related references while the cursor is on any identifier.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.highlightRelated.yieldPoints.enable": {
      "markdownDescription": "Enables highlighting of all break points for a loop or block context while the cursor is on any `async` or `await` keywords.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hover.actions.debug.enable": {
      "markdownDescription": "Whether to show `Debug` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hover.actions.enable": {
      "markdownDescription": "Whether to show HoverActions in Rust files.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hover.actions.gotoTypeDef.enable": {
      "markdownDescription": "Whether to show `Go to Type Definition` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hover.actions.implementations.enable": {
      "markdownDescription": "Whether to show `Implementations` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hover.actions.references.enable": {
      "markdownDescription": "Whether to show `References` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.hover.actions.run.enable": {
      "markdownDescription": "Whether to show `Run` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hover.documentation.enable": {
      "markdownDescription": "Whether to show documentation on hover.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hover.documentation.keywords.enable": {
      "markdownDescription": "Whether to show keyword hover popups. Only applies when\n`#rust-analyzer.hover.documentation.enable#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hover.links.enable": {
      "markdownDescription": "Use markdown syntax for links on hover.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hover.memoryLayout.alignment": {
      "markdownDescription": "How to render the align information in a memory layout hover.",
      "default": "hexadecimal",
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "string",
          "enum": [
            "both",
            "decimal",
            "hexadecimal"
          ],
          "enumDescriptions": [
            "Render as 12 (0xC)",
            "Render as 12",
            "Render as 0xC"
          ]
        }
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "hexadecimal",
      "restricted": false
    },
    "rust-analyzer.hover.memoryLayout.enable": {
      "markdownDescription": "Whether to show memory layout data on hover.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hover.memoryLayout.niches": {
      "markdownDescription": "How to render the niche information in a memory layout hover.",
      "default": false,
      "type": [
        "null",
        "boolean"
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.hover.memoryLayout.offset": {
      "markdownDescription": "How to render the offset information in a memory layout hover.",
      "default": "hexadecimal",
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "string",
          "enum": [
            "both",
            "decimal",
            "hexadecimal"
          ],
          "enumDescriptions": [
            "Render as 12 (0xC)",
            "Render as 12",
            "Render as 0xC"
          ]
        }
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "hexadecimal",
      "restricted": false
    },
    "rust-analyzer.hover.memoryLayout.size": {
      "markdownDescription": "How to render the size information in a memory layout hover.",
      "default": "both",
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "string",
          "enum": [
            "both",
            "decimal",
            "hexadecimal"
          ],
          "enumDescriptions": [
            "Render as 12 (0xC)",
            "Render as 12",
            "Render as 0xC"
          ]
        }
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "both",
      "restricted": false
    },
    "rust-analyzer.hover.show.enumVariants": {
      "markdownDescription": "How many variants of an enum to display when hovering on. Show none if empty.",
      "default": 5,
      "type": [
        "null",
        "integer"
      ],
      "minimum": 0,
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": 5,
      "restricted": false
    },
    "rust-analyzer.hover.show.fields": {
      "markdownDescription": "How many fields of a struct, variant or union to display when hovering on. Show none if empty.",
      "default": 5,
      "type": [
        "null",
        "integer"
      ],
      "minimum": 0,
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": 5,
      "restricted": false
    },
    "rust-analyzer.hover.show.traitAssocItems": {
      "markdownDescription": "How many associated items of a trait to display when hovering a trait.",
      "default": null,
      "type": [
        "null",
        "integer"
      ],
      "minimum": 0,
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.imports.granularity.enforce": {
      "markdownDescription": "Whether to enforce the import granularity setting for all files. If set to false rust-analyzer will try to keep import styles consistent per file.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.imports.granularity.group": {
      "markdownDescription": "How imports should be grouped into use statements.",
      "default": "crate",
      "type": "string",
      "enum": [
        "preserve",
        "crate",
        "module",
        "item",
        "one"
      ],
      "enumDescriptions": [
        "Do not change the granularity of any imports and preserve the original structure written by the developer.",
        "Merge imports from the same crate into a single use statement. Conversely, imports from different crates are split into separate statements.",
        "Merge imports from the same module into a single use statement. Conversely, imports from different modules are split into separate statements.",
        "Flatten imports so that each has its own use statement.",
        "Merge all imports into a single use statement as long as they have the same visibility and attributes."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "crate",
      "restricted": false
    },
    "rust-analyzer.imports.group.enable": {
      "markdownDescription": "Group inserted imports by the [following order](https://rust-analyzer.github.io/manual.html#auto-import). Groups are separated by newlines.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.imports.merge.glob": {
      "markdownDescription": "Whether to allow import insertion to merge new imports into single path glob imports like `use std::fmt::*;`.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.imports.preferNoStd": {
      "markdownDescription": "Prefer to unconditionally use imports of the core and alloc crate, over the std crate.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.imports.preferPrelude": {
      "markdownDescription": "Whether to prefer import paths containing a `prelude` module.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.imports.prefix": {
      "markdownDescription": "The path structure for newly inserted paths to use.",
      "default": "plain",
      "type": "string",
      "enum": [
        "plain",
        "self",
        "crate"
      ],
      "enumDescriptions": [
        "Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item.",
        "Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item. Prefixes `self` in front of the path if it starts with a module.",
        "Force import paths to be absolute by always starting them with `crate` or the extern crate name they come from."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "plain",
      "restricted": false
    },
    "rust-analyzer.inlayHints.bindingModeHints.enable": {
      "markdownDescription": "Whether to show inlay type hints for binding modes.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.inlayHints.chainingHints.enable": {
      "markdownDescription": "Whether to show inlay type hints for method chains.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.inlayHints.closingBraceHints.enable": {
      "markdownDescription": "Whether to show inlay hints after a closing `}` to indicate what item it belongs to.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.inlayHints.closingBraceHints.minLines": {
      "markdownDescription": "Minimum number of lines required before the `}` until the hint is shown (set to 0 or 1\nto always show them).",
      "default": 25,
      "type": "integer",
      "minimum": 0,
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": 25,
      "restricted": false
    },
    "rust-analyzer.inlayHints.closureCaptureHints.enable": {
      "markdownDescription": "Whether to show inlay hints for closure captures.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.inlayHints.closureReturnTypeHints.enable": {
      "markdownDescription": "Whether to show inlay type hints for return types of closures.",
      "default": "never",
      "type": "string",
      "enum": [
        "always",
        "never",
        "with_block"
      ],
      "enumDescriptions": [
        "Always show type hints for return types of closures.",
        "Never show type hints for return types of closures.",
        "Only show type hints for return types of closures with blocks."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "never",
      "restricted": false
    },
    "rust-analyzer.inlayHints.closureStyle": {
      "markdownDescription": "Closure notation in type and chaining inlay hints.",
      "default": "impl_fn",
      "type": "string",
      "enum": [
        "impl_fn",
        "rust_analyzer",
        "with_id",
        "hide"
      ],
      "enumDescriptions": [
        "`impl_fn`: `impl FnMut(i32, u64) -> i8`",
        "`rust_analyzer`: `|i32, u64| -> i8`",
        "`with_id`: `{closure#14352}`, where that id is the unique number of the closure in r-a internals",
        "`hide`: Shows `...` for every closure type"
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "impl_fn",
      "restricted": false
    },
    "rust-analyzer.inlayHints.discriminantHints.enable": {
      "markdownDescription": "Whether to show enum variant discriminant hints.",
      "default": "never",
      "type": "string",
      "enum": [
        "always",
        "never",
        "fieldless"
      ],
      "enumDescriptions": [
        "Always show all discriminant hints.",
        "Never show discriminant hints.",
        "Only show discriminant hints on fieldless enum variants."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "never",
      "restricted": false
    },
    "rust-analyzer.inlayHints.expressionAdjustmentHints.enable": {
      "markdownDescription": "Whether to show inlay hints for type adjustments.",
      "default": "never",
      "type": "string",
      "enum": [
        "always",
        "never",
        "reborrow"
      ],
      "enumDescriptions": [
        "Always show all adjustment hints.",
        "Never show adjustment hints.",
        "Only show auto borrow and dereference adjustment hints."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "never",
      "restricted": false
    },
    "rust-analyzer.inlayHints.expressionAdjustmentHints.hideOutsideUnsafe": {
      "markdownDescription": "Whether to hide inlay hints for type adjustments outside of `unsafe` blocks.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.inlayHints.expressionAdjustmentHints.mode": {
      "markdownDescription": "Whether to show inlay hints as postfix ops (`.*` instead of `*`, etc).",
      "default": "prefix",
      "type": "string",
      "enum": [
        "prefix",
        "postfix",
        "prefer_prefix",
        "prefer_postfix"
      ],
      "enumDescriptions": [
        "Always show adjustment hints as prefix (`*expr`).",
        "Always show adjustment hints as postfix (`expr.*`).",
        "Show prefix or postfix depending on which uses less parenthesis, preferring prefix.",
        "Show prefix or postfix depending on which uses less parenthesis, preferring postfix."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "prefix",
      "restricted": false
    },
    "rust-analyzer.inlayHints.implicitDrops.enable": {
      "markdownDescription": "Whether to show implicit drop hints.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.inlayHints.lifetimeElisionHints.enable": {
      "markdownDescription": "Whether to show inlay type hints for elided lifetimes in function signatures.",
      "default": "never",
      "type": "string",
      "enum": [
        "always",
        "never",
        "skip_trivial"
      ],
      "enumDescriptions": [
        "Always show lifetime elision hints.",
        "Never show lifetime elision hints.",
        "Only show lifetime elision hints if a return type is involved."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "never",
      "restricted": false
    },
    "rust-analyzer.inlayHints.lifetimeElisionHints.useParameterNames": {
      "markdownDescription": "Whether to prefer using parameter names as the name for elided lifetime hints if possible.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.inlayHints.maxLength": {
      "markdownDescription": "Maximum length for inlay hints. Set to null to have an unlimited length.",
      "default": 25,
      "type": [
        "null",
        "integer"
      ],
      "minimum": 0,
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": 25,
      "restricted": false
    },
    "rust-analyzer.inlayHints.parameterHints.enable": {
      "markdownDescription": "Whether to show function parameter name inlay hints at the call\nsite.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.inlayHints.rangeExclusiveHints.enable": {
      "markdownDescription": "Whether to show exclusive range inlay hints.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.inlayHints.reborrowHints.enable": {
      "markdownDescription": "Whether to show inlay hints for compiler inserted reborrows.\nThis setting is deprecated in favor of #rust-analyzer.inlayHints.expressionAdjustmentHints.enable#.",
      "default": "never",
      "type": "string",
      "enum": [
        "always",
        "never",
        "mutable"
      ],
      "enumDescriptions": [
        "Always show reborrow hints.",
        "Never show reborrow hints.",
        "Only show mutable reborrow hints."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "never",
      "restricted": false
    },
    "rust-analyzer.inlayHints.renderColons": {
      "markdownDescription": "Whether to render leading colons for type hints, and trailing colons for parameter hints.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.inlayHints.typeHints.enable": {
      "markdownDescription": "Whether to show inlay type hints for variables.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.inlayHints.typeHints.hideClosureInitialization": {
      "markdownDescription": "Whether to hide inlay type hints for `let` statements that initialize to a closure.\nOnly applies to closures with blocks, same as `#rust-analyzer.inlayHints.closureReturnTypeHints.enable#`.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.inlayHints.typeHints.hideNamedConstructor": {
      "markdownDescription": "Whether to hide inlay type hints for constructors.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.interpret.tests": {
      "markdownDescription": "Enables the experimental support for interpreting tests.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.joinLines.joinAssignments": {
      "markdownDescription": "Join lines merges consecutive declaration and initialization of an assignment.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.joinLines.joinElseIf": {
      "markdownDescription": "Join lines inserts else between consecutive ifs.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.joinLines.removeTrailingComma": {
      "markdownDescription": "Join lines removes trailing commas.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.joinLines.unwrapTrivialBlock": {
      "markdownDescription": "Join lines unwraps trivial blocks.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.lens.debug.enable": {
      "markdownDescription": "Whether to show `Debug` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.lens.enable": {
      "markdownDescription": "Whether to show CodeLens in Rust files.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.lens.forceCustomCommands": {
      "markdownDescription": "Internal config: use custom client-side commands even when the\nclient doesn't set the corresponding capability.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.lens.implementations.enable": {
      "markdownDescription": "Whether to show `Implementations` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.lens.location": {
      "markdownDescription": "Where to render annotations.",
      "default": "above_name",
      "type": "string",
      "enum": [
        "above_name",
        "above_whole_item"
      ],
      "enumDescriptions": [
        "Render annotations above the name of the item.",
        "Render annotations above the whole item, including documentation comments and attributes."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "above_name",
      "restricted": false
    },
    "rust-analyzer.lens.references.adt.enable": {
      "markdownDescription": "Whether to show `References` lens for Struct, Enum, and Union.\nOnly applies when `#rust-analyzer.lens.enable#` is set.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.lens.references.enumVariant.enable": {
      "markdownDescription": "Whether to show `References` lens for Enum Variants.\nOnly applies when `#rust-analyzer.lens.enable#` is set.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.lens.references.method.enable": {
      "markdownDescription": "Whether to show `Method References` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.lens.references.trait.enable": {
      "markdownDescription": "Whether to show `References` lens for Trait.\nOnly applies when `#rust-analyzer.lens.enable#` is set.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.lens.run.enable": {
      "markdownDescription": "Whether to show `Run` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.linkedProjects": {
      "markdownDescription": "Disable project auto-discovery in favor of explicitly specified set\nof projects.\n\nElements must be paths pointing to `Cargo.toml`,\n`rust-project.json`, `.rs` files (which will be treated as standalone files) or JSON\nobjects in `rust-project.json` format.",
      "default": [],
      "type": "array",
      "items": {
        "type": [
          "string",
          "object"
        ]
      },
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.lru.capacity": {
      "markdownDescription": "Number of syntax trees rust-analyzer keeps in memory. Defaults to 128.",
      "default": null,
      "type": [
        "null",
        "integer"
      ],
      "minimum": 0,
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.lru.query.capacities": {
      "markdownDescription": "Sets the LRU capacity of the specified queries.",
      "default": {},
      "type": "object",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "rust-analyzer.notifications.cargoTomlNotFound": {
      "markdownDescription": "Whether to show `can't find Cargo.toml` error message.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.notifications.unindexedProject": {
      "markdownDescription": "Whether to send an UnindexedProject notification to the client.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.numThreads": {
      "markdownDescription": "How many worker threads in the main loop. The default `null` means to pick automatically.",
      "default": null,
      "type": [
        "null",
        "integer"
      ],
      "minimum": 0,
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.procMacro.attributes.enable": {
      "markdownDescription": "Expand attribute macros. Requires `#rust-analyzer.procMacro.enable#` to be set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.procMacro.enable": {
      "markdownDescription": "Enable support for procedural macros, implies `#rust-analyzer.cargo.buildScripts.enable#`.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.procMacro.ignored": {
      "markdownDescription": "These proc-macros will be ignored when trying to expand them.\n\nThis config takes a map of crate names with the exported proc-macro names to ignore as values.",
      "default": {},
      "type": "object",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "rust-analyzer.procMacro.server": {
      "markdownDescription": "Internal config, path to proc-macro server executable.",
      "default": null,
      "type": [
        "null",
        "string"
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.references.excludeImports": {
      "markdownDescription": "Exclude imports from find-all-references.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.references.excludeTests": {
      "markdownDescription": "Exclude tests from find-all-references.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.runnables.command": {
      "markdownDescription": "Command to be executed instead of 'cargo' for runnables.",
      "default": null,
      "type": [
        "null",
        "string"
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.runnables.extraArgs": {
      "markdownDescription": "Additional arguments to be passed to cargo for runnables such as\ntests or binaries. For example, it may be `--release`.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.runnables.extraTestBinaryArgs": {
      "markdownDescription": "Additional arguments to be passed through Cargo to launched tests, benchmarks, or\ndoc-tests.\n\nUnless the launched target uses a\n[custom test harness](https://doc.rust-lang.org/cargo/reference/cargo-targets.html#the-harness-field),\nthey will end up being interpreted as options to\n[`rustc`’s built-in test harness (“libtest”)](https://doc.rust-lang.org/rustc/tests/index.html#cli-arguments).",
      "default": [
        "--show-output"
      ],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [
        "--show-output"
      ],
      "restricted": false
    },
    "rust-analyzer.rustc.source": {
      "markdownDescription": "Path to the Cargo.toml of the rust compiler workspace, for usage in rustc_private\nprojects, or \"discover\" to try to automatically find it if the `rustc-dev` component\nis installed.\n\nAny project which uses rust-analyzer with the rustcPrivate\ncrates must set `[package.metadata.rust-analyzer] rustc_private=true` to use it.\n\nThis option does not take effect until rust-analyzer is restarted.",
      "default": null,
      "type": [
        "null",
        "string"
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.rustfmt.extraArgs": {
      "markdownDescription": "Additional arguments to `rustfmt`.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.rustfmt.overrideCommand": {
      "markdownDescription": "Advanced option, fully override the command rust-analyzer uses for\nformatting. This should be the equivalent of `rustfmt` here, and\nnot that of `cargo fmt`. The file contents will be passed on the\nstandard input and the formatted result will be read from the\nstandard output.",
      "default": null,
      "type": [
        "null",
        "array"
      ],
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.rustfmt.rangeFormatting.enable": {
      "markdownDescription": "Enables the use of rustfmt's unstable range formatting command for the\n`textDocument/rangeFormatting` request. The rustfmt option is unstable and only\navailable on a nightly build.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.semanticHighlighting.doc.comment.inject.enable": {
      "markdownDescription": "Inject additional highlighting into doc comments.\n\nWhen enabled, rust-analyzer will highlight rust source in doc comments as well as intra\ndoc links.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.semanticHighlighting.nonStandardTokens": {
      "markdownDescription": "Whether the server is allowed to emit non-standard tokens and modifiers.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.semanticHighlighting.operator.enable": {
      "markdownDescription": "Use semantic tokens for operators.\n\nWhen disabled, rust-analyzer will emit semantic tokens only for operator tokens when\nthey are tagged with modifiers.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.semanticHighlighting.operator.specialization.enable": {
      "markdownDescription": "Use specialized semantic tokens for operators.\n\nWhen enabled, rust-analyzer will emit special token types for operator tokens instead\nof the generic `operator` token type.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.semanticHighlighting.punctuation.enable": {
      "markdownDescription": "Use semantic tokens for punctuation.\n\nWhen disabled, rust-analyzer will emit semantic tokens only for punctuation tokens when\nthey are tagged with modifiers or have a special role.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.semanticHighlighting.punctuation.separate.macro.bang": {
      "markdownDescription": "When enabled, rust-analyzer will emit a punctuation semantic token for the `!` of macro\ncalls.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.semanticHighlighting.punctuation.specialization.enable": {
      "markdownDescription": "Use specialized semantic tokens for punctuation.\n\nWhen enabled, rust-analyzer will emit special token types for punctuation tokens instead\nof the generic `punctuation` token type.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.semanticHighlighting.strings.enable": {
      "markdownDescription": "Use semantic tokens for strings.\n\nIn some editors (e.g. vscode) semantic tokens override other highlighting grammars.\nBy disabling semantic tokens for strings, other grammars can be used to highlight\ntheir contents.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.signatureInfo.detail": {
      "markdownDescription": "Show full signature of the callable. Only shows parameters if disabled.",
      "default": "full",
      "type": "string",
      "enum": [
        "full",
        "parameters"
      ],
      "enumDescriptions": [
        "Show the entire signature.",
        "Show only the parameters."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "full",
      "restricted": false
    },
    "rust-analyzer.signatureInfo.documentation.enable": {
      "markdownDescription": "Show documentation.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.typing.autoClosingAngleBrackets.enable": {
      "markdownDescription": "Whether to insert closing angle brackets when typing an opening angle bracket of a generic argument list.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.workspace.symbol.search.kind": {
      "markdownDescription": "Workspace symbol search kind.",
      "default": "only_types",
      "type": "string",
      "enum": [
        "only_types",
        "all_symbols"
      ],
      "enumDescriptions": [
        "Search for types only.",
        "Search for all symbols kinds."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "only_types",
      "restricted": false
    },
    "rust-analyzer.workspace.symbol.search.limit": {
      "markdownDescription": "Limits the number of items returned from a workspace symbol search (Defaults to 128).\nSome clients like vs-code issue new searches on result filtering and don't require all results to be returned in the initial search.\nOther clients requires all results upfront and might require a higher limit.",
      "default": 128,
      "type": "integer",
      "minimum": 0,
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": 128,
      "restricted": false
    },
    "rust-analyzer.workspace.symbol.search.scope": {
      "markdownDescription": "Workspace symbol search scope.",
      "default": "workspace",
      "type": "string",
      "enum": [
        "workspace",
        "workspace_and_dependencies"
      ],
      "enumDescriptions": [
        "Search in current workspace only.",
        "Search in current workspace and dependencies."
      ],
      "scope": 3,
      "source": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "workspace",
      "restricted": false
    },
    "angular-cli.appShell.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Generates an app shell for running a server-side version of an app.",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular-cli.appShell.options": {
      "type": "string",
      "default": "",
      "markdownDescription": "Add additional options to the command. For all options see https://angular.io/cli/generate#appShell-command",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "angular-cli.application.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Generates a new basic app definition in the \"projects\" subfolder of the workspace.",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular-cli.application.options": {
      "type": "string",
      "default": "",
      "markdownDescription": "Add additional options to the command. For all options see https://angular.io/cli/generate#application-command",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "angular-cli.class.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Creates a new generic class definition in the given or default project.",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular-cli.class.options": {
      "type": "string",
      "default": "",
      "markdownDescription": "Add additional options to the command. For all options see https://angular.io/cli/generate#class-command",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "angular-cli.component.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Creates a new generic component definition in the given or default project.",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular-cli.component.options": {
      "type": "string",
      "default": "",
      "markdownDescription": "Add additional options to the command. For all options see https://angular.io/cli/generate#component-command",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "angular-cli.directive.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Creates a new generic directive definition in the given or default project.",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular-cli.directive.options": {
      "type": "string",
      "default": "",
      "markdownDescription": "Add additional options to the command. For all options see https://angular.io/cli/generate#directive-command",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "angular-cli.enum.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Generates a new, generic enum definition for the given or default project.",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular-cli.enum.options": {
      "type": "string",
      "default": "",
      "markdownDescription": "Add additional options to the command. For all options see https://angular.io/cli/generate#enum-command",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "angular-cli.guard.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Generates a new, generic route guard definition in the given or default project.",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular-cli.guard.options": {
      "type": "string",
      "default": "",
      "markdownDescription": "Add additional options to the command. For all options see https://angular.io/cli/generate#guard-command",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "angular-cli.interceptor.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Creates a new, generic interceptor definition in the given or default project.",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular-cli.interceptor.options": {
      "type": "string",
      "default": "",
      "markdownDescription": "Add additional options to the command. For all options see https://angular.io/cli/generate#interceptor-command",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "angular-cli.interface.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Creates a new generic interface definition in the given or default project.",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular-cli.interface.options": {
      "type": "string",
      "default": "",
      "markdownDescription": "Add additional options to the command. For all options see https://angular.io/cli/generate#interface-command",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "angular-cli.library.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Creates a new generic library project in the current workspace.",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular-cli.library.options": {
      "type": "string",
      "default": "",
      "markdownDescription": "Add additional options to the command. For all options see https://angular.io/cli/generate#library-command",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "angular-cli.module.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Creates a new generic NgModule definition in the given or default project.",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular-cli.module.options": {
      "type": "string",
      "default": "",
      "markdownDescription": "Add additional options to the command. For all options see https://angular.io/cli/generate#module-command",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "angular-cli.pipe.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Creates a new generic pipe definition in the given or default project.",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular-cli.pipe.options": {
      "type": "string",
      "default": "",
      "markdownDescription": "Add additional options to the command. For all options see https://angular.io/cli/generate#pipe-command",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "angular-cli.service.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Creates a new, generic service definition in the given or default project.",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "angular-cli.service.options": {
      "type": "string",
      "default": "",
      "markdownDescription": "Add additional options to the command. For all options see https://angular.io/cli/generate#service-command",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "angular-cli.serviceWorker.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Pass this schematic to the \"run\" command to create a service worker",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular-cli.serviceWorker.options": {
      "type": "string",
      "default": "",
      "markdownDescription": "Add additional options to the command. For all options see https://angular.io/cli/generate#serviceWorker-command",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "angular-cli.webWorker.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Creates a new generic web worker definition in the given or default project.",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular-cli.webWorker.options": {
      "type": "string",
      "default": "",
      "markdownDescription": "Add additional options to the command. For all options see https://angular.io/cli/generate#webWorker-command",
      "scope": 3,
      "source": {
        "id": "segerdekort.angular-cli",
        "displayName": "Angular-cli"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "crates.errorDecoratorCss": {
      "type": "object",
      "default": null,
      "properties": {
        "after": {
          "type": "object",
          "default": null,
          "scope": "resource",
          "description": "Text styling",
          "properties": {
            "color": {
              "type": "string",
              "scope": "resource",
              "default": "#ffffffff",
              "format": "color",
              "description": "css color"
            },
            "border": {
              "type": "string",
              "scope": "resource",
              "default": "2px ",
              "description": "css border"
            },
            "backgroundColor": {
              "type": "string",
              "scope": "resource",
              "default": "#00000000",
              "format": "color",
              "description": "css background-color"
            }
          }
        },
        "description": "Text that appears at the end of the line"
      },
      "description": "CSS to be applied to a line when there is a dependency error",
      "scope": 3,
      "source": {
        "id": "serayuzgur.crates",
        "displayName": "crates"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "crates.incompatibleDecoratorCss": {
      "type": "object",
      "default": null,
      "properties": {
        "after": {
          "type": "object",
          "default": null,
          "scope": "resource",
          "description": "Text styling",
          "properties": {
            "color": {
              "type": "string",
              "scope": "resource",
              "default": "#ffffffff",
              "format": "color",
              "description": "css color"
            },
            "border": {
              "type": "string",
              "scope": "resource",
              "default": "",
              "description": "css border"
            },
            "backgroundColor": {
              "type": "string",
              "scope": "resource",
              "default": "#00000000",
              "format": "color",
              "description": "css background-color"
            }
          }
        }
      },
      "description": "CSS to be applied to an incompatible line",
      "scope": 3,
      "source": {
        "id": "serayuzgur.crates",
        "displayName": "crates"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "crates.compatibleDecoratorCss": {
      "type": "object",
      "default": null,
      "properties": {
        "after": {
          "type": "object",
          "default": null,
          "scope": "resource",
          "description": "Text styling",
          "properties": {
            "color": {
              "type": "string",
              "scope": "resource",
              "default": "#ffffffff",
              "format": "color",
              "description": "css color"
            },
            "border": {
              "type": "string",
              "scope": "resource",
              "default": null,
              "description": "css border"
            },
            "backgroundColor": {
              "type": "string",
              "scope": "resource",
              "default": "#00000000",
              "format": "color",
              "description": "css background-color"
            }
          }
        }
      },
      "description": "CSS to be applied to a compatible line",
      "scope": 3,
      "source": {
        "id": "serayuzgur.crates",
        "displayName": "crates"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "autoimport.filesToScan": {
      "type": "string",
      "default": "**/*.{ts,tsx}",
      "description": "Glob for files to watch and scan, e.g ./src/** ./src/app/**/*.ts. Defaults to **/*.{ts,tsx}",
      "scope": 3,
      "source": {
        "id": "steoates.autoimport",
        "displayName": "Auto Import"
      },
      "defaultDefaultValue": "**/*.{ts,tsx}",
      "restricted": false
    },
    "autoimport.showNotifications": {
      "type": "boolean",
      "default": false,
      "description": "Specifies wether to show notifications from Auto Import",
      "scope": 3,
      "source": {
        "id": "steoates.autoimport",
        "displayName": "Auto Import"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "autoimport.doubleQuotes": {
      "type": "boolean",
      "default": false,
      "description": "Specifies wether to use double quotes",
      "scope": 3,
      "source": {
        "id": "steoates.autoimport",
        "displayName": "Auto Import"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "autoimport.spaceBetweenBraces": {
      "type": "boolean",
      "default": true,
      "description": "Specifies wether to use spaces between first and last brace",
      "scope": 3,
      "source": {
        "id": "steoates.autoimport",
        "displayName": "Auto Import"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "autoimport.autoComplete": {
      "type": "boolean",
      "default": true,
      "description": "Adds found items to intellisense and automatically imports then",
      "scope": 3,
      "source": {
        "id": "steoates.autoimport",
        "displayName": "Auto Import"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "autoimport.useSemiColon": {
      "type": "boolean",
      "default": true,
      "description": "Use ; at the end of a line e.g Import * from ./app or Import * from ./app; - Default True",
      "scope": 3,
      "source": {
        "id": "steoates.autoimport",
        "displayName": "Auto Import"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "movets.relativeToTsconfig": {
      "type": "boolean",
      "default": false,
      "description": "Create relative paths relative to the tsconfig.json",
      "scope": 3,
      "source": {
        "id": "stringham.move-ts",
        "displayName": "Move TS - Move TypeScript files and update relative imports"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "movets.skipWarning": {
      "type": "boolean",
      "default": false,
      "description": "Skip the warning when using the move typescript command",
      "scope": 3,
      "source": {
        "id": "stringham.move-ts",
        "displayName": "Move TS - Move TypeScript files and update relative imports"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "movets.filesToScan": {
      "type": "array",
      "default": [
        "**/*.ts",
        "**/*.tsx"
      ],
      "description": "Glob of files to scan and watch. Defaults to [**/*.ts,**/*.tsx]",
      "scope": 3,
      "source": {
        "id": "stringham.move-ts",
        "displayName": "Move TS - Move TypeScript files and update relative imports"
      },
      "defaultDefaultValue": [
        "**/*.ts",
        "**/*.tsx"
      ],
      "restricted": false
    },
    "movets.openEditors": {
      "type": "boolean",
      "default": false,
      "description": "Make edits in vscode instead of saving the changes to disk.",
      "scope": 3,
      "source": {
        "id": "stringham.move-ts",
        "displayName": "Move TS - Move TypeScript files and update relative imports"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "movets.removeIndexSuffix": {
      "type": "boolean",
      "default": true,
      "description": "Removes index filename from imports",
      "scope": 3,
      "source": {
        "id": "stringham.move-ts",
        "displayName": "Move TS - Move TypeScript files and update relative imports"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "intellicodeApiExamples.loggingLevel": {
      "type": "string",
      "enum": [
        "ALL",
        "DEBUG",
        "INFO",
        "WARN",
        "ERROR",
        "FATAL",
        "OFF"
      ],
      "default": "INFO",
      "description": "Logging level for console",
      "scope": 3,
      "source": {
        "id": "VisualStudioExptTeam.intellicode-api-usage-examples",
        "displayName": "IntelliCode API Usage Examples"
      },
      "defaultDefaultValue": "INFO",
      "restricted": false
    },
    "intellicodeApiExamples.python.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable API Usage Examples for Python files",
      "scope": 3,
      "source": {
        "id": "VisualStudioExptTeam.intellicode-api-usage-examples",
        "displayName": "IntelliCode API Usage Examples"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "intellicodeApiExamples.typescript.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable API Usage Examples for Typescript/Javascript files",
      "scope": 3,
      "source": {
        "id": "VisualStudioExptTeam.intellicode-api-usage-examples",
        "displayName": "IntelliCode API Usage Examples"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "vsintellicode.python.completionsEnabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable Visual Studio IntelliCode completions for Python",
      "scope": 3,
      "source": {
        "id": "VisualStudioExptTeam.vscodeintellicode",
        "displayName": "IntelliCode"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "vsintellicode.sql.completionsEnabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable Visual Studio IntelliCode completions for MSSQL",
      "scope": 3,
      "source": {
        "id": "VisualStudioExptTeam.vscodeintellicode",
        "displayName": "IntelliCode"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "vsintellicode.java.completionsEnabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable Visual Studio IntelliCode completions for Java",
      "scope": 3,
      "source": {
        "id": "VisualStudioExptTeam.vscodeintellicode",
        "displayName": "IntelliCode"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "vsintellicode.typescript.completionsEnabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable Visual Studio IntelliCode completions for TypeScript and JavaScript",
      "scope": 3,
      "source": {
        "id": "VisualStudioExptTeam.vscodeintellicode",
        "displayName": "IntelliCode"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "vsintellicode.modify.editor.suggestSelection": {
      "type": "string",
      "default": "enabled",
      "markdownDescription": "Control whether Visual Studio IntelliCode will modify `editor.suggestSelection` if it is set to a value (`recentlyUsed`) that will result in IntelliCode suggested completion items not being visible.",
      "enum": [
        "enabled",
        "disabled",
        "automaticallyOverrodeDefaultValue",
        "choseToUpdateConfiguration"
      ],
      "enumDescriptions": [
        "Allows IntelliCode to modify the editor.suggestSelection setting on your behalf.",
        "You've explicitly opted out of having this configuration controlled by IntelliCode.",
        "(DO NOT SET THIS MANUALLY) IntelliCode will set this to record that configuration has been automatically modified to override a default value.",
        "(DO NOT SET THIS MANUALLY) IntelliCode will set this to record that you've chosen to let IntelliCode change the configuration from a value that was explicitly set."
      ],
      "scope": 3,
      "source": {
        "id": "VisualStudioExptTeam.vscodeintellicode",
        "displayName": "IntelliCode"
      },
      "defaultDefaultValue": "enabled",
      "restricted": false
    },
    "java.debug.logLevel": {
      "type": "string",
      "default": "warn",
      "description": "Minimum level of debugger logs that are sent to VS Code.",
      "enum": [
        "error",
        "warn",
        "info",
        "verbose"
      ],
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": "warn",
      "restricted": false
    },
    "java.debug.settings.showHex": {
      "type": "boolean",
      "description": "Show numbers in hex format in \"Variables\" viewlet.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.debug.settings.showStaticVariables": {
      "type": "boolean",
      "description": "Show static variables in \"Variables\" viewlet.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.debug.settings.showQualifiedNames": {
      "type": "boolean",
      "description": "Show fully qualified class names in \"Variables\" viewlet.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.debug.settings.showLogicalStructure": {
      "type": "boolean",
      "description": "Show the logical structure for the Collection and Map classes in \"Variables\" viewlet.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.debug.settings.showToString": {
      "type": "boolean",
      "description": "Show 'toString()' value for all classes that override 'toString' method in \"Variables\" viewlet.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.debug.settings.maxStringLength": {
      "type": "number",
      "description": "The maximum length of strings displayed in \"Variables\" or \"Debug Console\" viewlet, strings longer than this length will be trimmed, if 0 no trim is performed.",
      "default": 0,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": 0,
      "restricted": false
    },
    "java.debug.settings.numericPrecision": {
      "type": "number",
      "description": "The precision when formatting doubles in \"Variables\" or \"Debug Console\" viewlet.",
      "default": 0,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": 0,
      "restricted": false
    },
    "java.debug.settings.hotCodeReplace": {
      "type": "string",
      "default": "manual",
      "description": "Reload the changed Java classes during debugging.",
      "enum": [
        "auto",
        "manual",
        "never"
      ],
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": "manual",
      "restricted": false
    },
    "java.debug.settings.enableRunDebugCodeLens": {
      "type": "boolean",
      "description": "Enable the run and debug code lens providers over main methods.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.debug.settings.forceBuildBeforeLaunch": {
      "type": "boolean",
      "description": "Force building the workspace before launching java program.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.debug.settings.onBuildFailureProceed": {
      "type": "boolean",
      "description": "Force to proceed when build fails",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.debug.settings.console": {
      "type": "string",
      "enum": [
        "internalConsole",
        "integratedTerminal",
        "externalTerminal"
      ],
      "enumDescriptions": [
        "VS Code debug console (input stream not supported).",
        "VS Code integrated terminal.",
        "External terminal that can be configured in user settings."
      ],
      "description": "The specified console to launch Java program. If you want to customize the console for a specific debug session, please modify the 'console' config in launch.json.",
      "default": "integratedTerminal",
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": "integratedTerminal",
      "restricted": false
    },
    "java.debug.settings.exceptionBreakpoint.exceptionTypes": {
      "type": "array",
      "description": "Specifies a set of exception types you want to break on, e.g. java.lang.NullPointerException. A specific exception type and its subclasses can be selected for caught exceptions, uncaught exceptions, or both can be selected.",
      "items": {
        "type": "string"
      },
      "default": [],
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "java.debug.settings.exceptionBreakpoint.allowClasses": {
      "type": "array",
      "description": "Specifies the allowed locations where the exception breakpoint can break on. Wildcard is supported, e.g. java.*, *.Foo",
      "items": {
        "type": "string"
      },
      "default": [],
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "java.debug.settings.exceptionBreakpoint.skipClasses": {
      "type": "array",
      "description": "Skip the specified classes when breaking on exception. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo",
      "items": {
        "anyOf": [
          {
            "enum": [
              "$JDK",
              "$Libraries",
              "java.lang.ClassLoader",
              ""
            ],
            "enumDescriptions": [
              "Skip the JDK classes from the default system bootstrap classpath, such as rt.jar, jrt-fs.jar.",
              "Skip the classes from application libraries, such as Maven, Gradle dependencies.",
              "Skip the class loaders.",
              "Skip the specified classes. Class names should be fully qualified. Wildcard is supported, e.g. java.*, *.Foo"
            ]
          },
          "string"
        ]
      },
      "default": [],
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "java.debug.settings.stepping.skipClasses": {
      "type": "array",
      "description": "Skip the specified classes when stepping. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo",
      "items": {
        "anyOf": [
          {
            "enum": [
              "$JDK",
              "$Libraries",
              "java.lang.ClassLoader",
              ""
            ],
            "enumDescriptions": [
              "Skip the JDK classes from the default system bootstrap classpath, such as rt.jar, jrt-fs.jar.",
              "Skip the classes from application libraries, such as Maven, Gradle dependencies.",
              "Skip the class loaders.",
              "Skip the specified classes. Class names should be fully qualified. Wildcard is supported, e.g. java.*, *.Foo"
            ]
          },
          "string"
        ]
      },
      "default": [],
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "java.debug.settings.stepping.skipSynthetics": {
      "type": "boolean",
      "description": "Skip synthetic methods when stepping.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.debug.settings.stepping.skipStaticInitializers": {
      "type": "boolean",
      "description": "Skip static initializer methods when stepping.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.debug.settings.stepping.skipConstructors": {
      "type": "boolean",
      "description": "Skip constructor methods when stepping.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.debug.settings.jdwp.limitOfVariablesPerJdwpRequest": {
      "type": "number",
      "description": "The maximum number of variables or fields that can be requested in one JDWP request. The higher the value, the less frequently debuggee will be requested when expanding the variable view. Also a large number can cause JDWP request timeout.",
      "default": 100,
      "minimum": 1,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": 100,
      "restricted": false
    },
    "java.debug.settings.jdwp.requestTimeout": {
      "type": "number",
      "description": "The timeout (ms) of JDWP request when the debugger communicates with the target JVM.",
      "default": 3000,
      "minimum": 100,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": 3000,
      "restricted": false
    },
    "java.debug.settings.jdwp.async": {
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "description": "Experimental: Controls whether the debugger is allowed to send JDWP commands asynchronously. Async mode can improve remote debugging response speed on high-latency networks.",
      "default": "auto",
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "java.debug.settings.vmArgs": {
      "type": "string",
      "description": "The default VM arguments to launch the Java program. Eg. Use '-Xmx1G -ea' to increase the heap size to 1GB and enable assertions. If you want to customize the VM arguments for a specific debug session, please modify the 'vmArgs' config in launch.json.",
      "default": "",
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "java.debug.settings.debugSupportOnDecompiledSource": {
      "type": "string",
      "enum": [
        "on",
        "off"
      ],
      "description": "[Experimental]: Enable debugging support on the decompiled source code. Be aware that this feature may affect the loading speed of Call Stack Viewlet.",
      "default": "on",
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": "on",
      "restricted": false
    },
    "java.silentNotification": {
      "type": "boolean",
      "description": "Controls whether notifications can be used to report progress. If true, use status bar to report progress instead.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-debug",
        "displayName": "Debugger for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.dependency.showMembers": {
      "type": "boolean",
      "description": "Show the members in the explorer",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-dependency",
        "displayName": "Project Manager for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "java.dependency.syncWithFolderExplorer": {
      "type": "boolean",
      "description": "Link Java Projects Explorer with the active editor",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-dependency",
        "displayName": "Project Manager for Java"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.dependency.autoRefresh": {
      "type": "boolean",
      "description": "Synchronize Java Projects explorer with changes",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-dependency",
        "displayName": "Project Manager for Java"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.dependency.refreshDelay": {
      "type": "number",
      "description": "The delay time (ms) the auto refresh is invoked when changes are detected",
      "default": 2000,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-dependency",
        "displayName": "Project Manager for Java"
      },
      "defaultDefaultValue": 2000,
      "restricted": false
    },
    "java.dependency.packagePresentation": {
      "type": "string",
      "enum": [
        "flat",
        "hierarchical"
      ],
      "description": "Package presentation mode: flat or hierarchical",
      "default": "flat",
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-dependency",
        "displayName": "Project Manager for Java"
      },
      "defaultDefaultValue": "flat",
      "restricted": false
    },
    "java.project.exportJar.targetPath": {
      "type": "string",
      "anyOf": [
        {
          "enum": [
            "${workspaceFolder}/${workspaceFolderBasename}.jar",
            ""
          ],
          "enumDescriptions": [
            "Export the jar file into the workspace folder. Its name is the same as the folder's.",
            "Select output location manually when exporting the jar file."
          ]
        },
        "string"
      ],
      "markdownDescription": "The output path of the exported jar. Leave it empty if you want to manually pick the output location.",
      "default": "${workspaceFolder}/${workspaceFolderBasename}.jar",
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-dependency",
        "displayName": "Project Manager for Java"
      },
      "defaultDefaultValue": "${workspaceFolder}/${workspaceFolderBasename}.jar",
      "restricted": false
    },
    "java.project.explorer.showNonJavaResources": {
      "type": "boolean",
      "description": "When enabled, the explorer shows non-Java resources.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-dependency",
        "displayName": "Project Manager for Java"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.help.firstView": {
      "type": [
        "string"
      ],
      "enum": [
        "auto",
        "overview",
        "gettingStarted",
        "welcome",
        "none"
      ],
      "enumDescriptions": [
        "Automatically pick the first experience view",
        "Present the Java Overview page",
        "Present the Java Beginner Tips page",
        "Present the Java Help Center page",
        "Do not show any view"
      ],
      "default": "auto",
      "description": "Sets the default view which is presented during the first use.",
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-pack",
        "displayName": "Extension Pack for Java"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "java.help.showReleaseNotes": {
      "type": "boolean",
      "default": true,
      "description": "Show release notes of Extension Pack for Java on startup.",
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-pack",
        "displayName": "Extension Pack for Java"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "java.help.collectErrorLog": {
      "type": "boolean",
      "default": false,
      "description": "Whether to send back detailed information from error logs for diagnostic purpose.",
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-java-pack",
        "displayName": "Extension Pack for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "maven.terminal.useJavaHome": {
      "type": "boolean",
      "default": false,
      "description": "If this value is true, and if the setting java.home has a value, then the environment variable JAVA_HOME will be set to the value of java.home when a new terminal window is created.",
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-maven",
        "displayName": "Maven for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "maven.view": {
      "type": "string",
      "enum": [
        "flat",
        "hierarchical"
      ],
      "default": "flat",
      "scope": 3,
      "description": "Specifies the way of viewing Maven projects.",
      "source": {
        "id": "vscjava.vscode-maven",
        "displayName": "Maven for Java"
      },
      "defaultDefaultValue": "flat",
      "restricted": false
    },
    "maven.pomfile.globPattern": {
      "type": "string",
      "default": "**/pom.xml",
      "description": "Specifies the glob pattern used to look for pom.xml files.",
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-maven",
        "displayName": "Maven for Java"
      },
      "defaultDefaultValue": "**/pom.xml",
      "restricted": false
    },
    "maven.pomfile.autoUpdateEffectivePOM": {
      "type": "boolean",
      "default": false,
      "description": "Specifies whether to update effective-pom automatically whenever changes detected.",
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-maven",
        "displayName": "Maven for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "maven.dependency.enableConflictDiagnostics": {
      "type": "boolean",
      "default": "true",
      "description": "Specify whether to show diagnostics for conflict dependencies.",
      "scope": 3,
      "source": {
        "id": "vscjava.vscode-maven",
        "displayName": "Maven for Java"
      },
      "defaultDefaultValue": "true",
      "restricted": false
    },
    "maven.projectOpenBehavior": {
      "default": "Interactive",
      "type": "string",
      "scope": 3,
      "description": "Default method of opening newly created project.",
      "enum": [
        "Interactive",
        "Open",
        "Add to Workspace",
        "None"
      ],
      "source": {
        "id": "vscjava.vscode-maven",
        "displayName": "Maven for Java"
      },
      "defaultDefaultValue": "Interactive",
      "restricted": false
    },
    "maven.explorer.projectName": {
      "default": "${project.name}",
      "type": "string",
      "scope": 3,
      "description": "Format of project node name shown in Maven explorer.",
      "enum": [
        "${project.name}",
        "${project.artifactId}",
        "${project.artifactId}-${project.version}",
        "${project.groupId}.${project.artifactId}",
        "${project.groupId}.${project.artifactId}-${project.version}"
      ],
      "source": {
        "id": "vscjava.vscode-maven",
        "displayName": "Maven for Java"
      },
      "defaultDefaultValue": "${project.name}",
      "restricted": false
    },
    "todohighlight.isEnable": {
      "type": "boolean",
      "default": true,
      "description": "Enable or disable the highlight",
      "scope": 3,
      "source": {
        "id": "wayou.vscode-todo-highlight",
        "displayName": "TODO Highlight"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "todohighlight.isCaseSensitive": {
      "type": "boolean",
      "default": true,
      "description": "Specify whether the keywords are case sensitive or not",
      "scope": 3,
      "source": {
        "id": "wayou.vscode-todo-highlight",
        "displayName": "TODO Highlight"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "todohighlight.toggleURI": {
      "type": "boolean",
      "default": false,
      "description": "If the file path within the output channel not clickable, set this to true to toggle the path patten between `<path>#<line>` and `<path>:<line>:<column>`",
      "scope": 3,
      "source": {
        "id": "wayou.vscode-todo-highlight",
        "displayName": "TODO Highlight"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "todohighlight.keywords": {
      "type": "array",
      "description": "Customize keywords and colors. Any css color identifier is valid.",
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "description": "Custom text to be highlighted"
              },
              "color": {
                "type": "string",
                "description": "The text color. Besides, you can play with all the string and boolean styling properties provied by VS Code API. See all available properties on VSCode doc DecorationRenderOptions section: https://code.visualstudio.com/docs/extensionAPI/vscode-api"
              },
              "backgroundColor": {
                "type": "string",
                "description": "The text background color. See all available properties on VSCode doc DecorationRenderOptions section: https://code.visualstudio.com/docs/extensionAPI/vscode-api"
              },
              "overviewRulerColor": {
                "type": "string",
                "description": "The color of the ruler mark on the scroll bar. Use rgba() and define transparent colors to play well with other decorations. See all available properties on VSCode doc DecorationRenderOptions section: https://code.visualstudio.com/docs/extensionAPI/vscode-api"
              }
            }
          }
        ]
      },
      "scope": 3,
      "source": {
        "id": "wayou.vscode-todo-highlight",
        "displayName": "TODO Highlight"
      },
      "default": [],
      "restricted": false
    },
    "todohighlight.keywordsPattern": {
      "type": "string",
      "default": "",
      "description": "Specify keywords via RegExp instead of `todohighlight.keywords` one by one. NOTE that if this presents, `todohighlight.keywords` will be ignored. And REMEMBER to escapse the back slash if there's any in your regexp (using \\\\ instead of single back slash)",
      "scope": 3,
      "source": {
        "id": "wayou.vscode-todo-highlight",
        "displayName": "TODO Highlight"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "todohighlight.defaultStyle": {
      "type": "object",
      "description": "Default style for all customized keywords",
      "properties": {
        "color": {
          "type": "string",
          "description": "The text color. See all available properties on VSCode doc DecorationRenderOptions section: https://code.visualstudio.com/docs/extensionAPI/vscode-api"
        },
        "backgroundColor": {
          "type": "string",
          "description": "The text background color. See all available properties on VSCode doc DecorationRenderOptions section: https://code.visualstudio.com/docs/extensionAPI/vscode-api"
        },
        "overviewRulerColor": {
          "type": "string",
          "description": "The color of the ruler mark on the scroll bar. See all available properties on VSCode doc DecorationRenderOptions section: https://code.visualstudio.com/docs/extensionAPI/vscode-api"
        }
      },
      "scope": 3,
      "source": {
        "id": "wayou.vscode-todo-highlight",
        "displayName": "TODO Highlight"
      },
      "default": {},
      "restricted": false
    },
    "todohighlight.include": {
      "type": "array",
      "default": [
        "**/*.js",
        "**/*.jsx",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html",
        "**/*.php",
        "**/*.css",
        "**/*.scss"
      ],
      "description": "Glob patterns that defines the files to search for. Only include files you need, DO NOT USE `{**/*.*}` for both permormance and avoiding binary files reason.",
      "items": {
        "anyOf": [
          {
            "type": "string",
            "description": "A glob pattern that defines the files to search for. Only include files you need, DO NOT USE `**/*.*` for both performance and avoiding binary files reason"
          }
        ]
      },
      "scope": 3,
      "source": {
        "id": "wayou.vscode-todo-highlight",
        "displayName": "TODO Highlight"
      },
      "defaultDefaultValue": [
        "**/*.js",
        "**/*.jsx",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html",
        "**/*.php",
        "**/*.css",
        "**/*.scss"
      ],
      "restricted": false
    },
    "todohighlight.exclude": {
      "type": "array",
      "default": [
        "**/node_modules/**",
        "**/bower_components/**",
        "**/dist/**",
        "**/build/**",
        "**/.vscode/**",
        "**/.github/**",
        "**/_output/**",
        "**/*.min.*",
        "**/*.map",
        "**/.next/**"
      ],
      "description": "Glob pattern that defines files and folders to exclude while listing annotations.",
      "items": {
        "anyOf": [
          {
            "type": "string",
            "description": "A glob pattern that defines files and folders to exclude while listing annotations"
          }
        ]
      },
      "scope": 3,
      "source": {
        "id": "wayou.vscode-todo-highlight",
        "displayName": "TODO Highlight"
      },
      "defaultDefaultValue": [
        "**/node_modules/**",
        "**/bower_components/**",
        "**/dist/**",
        "**/build/**",
        "**/.vscode/**",
        "**/.github/**",
        "**/_output/**",
        "**/*.min.*",
        "**/*.map",
        "**/.next/**"
      ],
      "restricted": false
    },
    "todohighlight.maxFilesForSearch": {
      "type": "number",
      "default": 5120,
      "description": "Max files for searching",
      "scope": 3,
      "source": {
        "id": "wayou.vscode-todo-highlight",
        "displayName": "TODO Highlight"
      },
      "defaultDefaultValue": 5120,
      "restricted": false
    },
    "workbench.editor.autoLockGroups": {
      "type": "object",
      "description": "If an editor matching one of the listed types is opened as the first in an editor group and more than one group is open, the group is automatically locked. Locked groups will only be used for opening editors when explicitly chosen by a user gesture (for example drag and drop), but not by default. Consequently, the active editor in a locked group is less likely to be replaced accidentally with a different editor.",
      "properties": {
        "default": {
          "type": "boolean",
          "default": false,
          "description": "Text Editor"
        },
        "workbench.editor.chatSession": {
          "type": "boolean",
          "default": false,
          "description": "Chat"
        },
        "workbench.editorinputs.searchEditorInput": {
          "type": "boolean",
          "default": false,
          "description": "Search Editor"
        },
        "workbench.editors.gettingStartedInput": {
          "type": "boolean",
          "default": false,
          "description": "Welcome Page"
        },
        "terminalEditor": {
          "type": "boolean",
          "default": true,
          "description": "Terminal"
        },
        "imagePreview.previewEditor": {
          "type": "boolean",
          "default": false,
          "description": "Image Preview"
        },
        "vscode.audioPreview": {
          "type": "boolean",
          "default": false,
          "description": "Audio Preview"
        },
        "vscode.videoPreview": {
          "type": "boolean",
          "default": false,
          "description": "Video Preview"
        },
        "jsProfileVisualizer.cpuprofile.table": {
          "type": "boolean",
          "default": false,
          "description": "CPU Profile Table Visualizer"
        },
        "jsProfileVisualizer.heapprofile.table": {
          "type": "boolean",
          "default": false,
          "description": "Heap Profile Table Visualizer"
        },
        "jsProfileVisualizer.heapsnapshot.table": {
          "type": "boolean",
          "default": false,
          "description": "Heap Snapshot Table Visualizer"
        },
        "decompiled.javaClass": {
          "type": "boolean",
          "default": false,
          "description": "Decompiled Java Class File"
        },
        "java.formatterSettingsEditor": {
          "type": "boolean",
          "default": false,
          "description": "Java Formatter Settings Editor"
        },
        "jupyter-notebook": {
          "type": "boolean",
          "default": false,
          "description": "Jupyter Notebook"
        },
        "workbench.input.interactive": {
          "type": "boolean",
          "default": false,
          "description": "Interactive Window"
        },
        "mainThreadWebview-markdown.preview": {
          "type": "boolean",
          "default": false,
          "description": "Markdown Preview"
        },
        "mainThreadWebview-simpleBrowser.view": {
          "type": "boolean",
          "default": true,
          "description": "Simple Browser"
        },
        "mainThreadWebview-browserPreview": {
          "type": "boolean",
          "default": true,
          "description": "Live Preview"
        }
      },
      "default": {
        "default": false,
        "workbench.editor.chatSession": false,
        "workbench.editorinputs.searchEditorInput": false,
        "workbench.editors.gettingStartedInput": false,
        "terminalEditor": true,
        "imagePreview.previewEditor": false,
        "vscode.audioPreview": false,
        "vscode.videoPreview": false,
        "jsProfileVisualizer.cpuprofile.table": false,
        "jsProfileVisualizer.heapprofile.table": false,
        "jsProfileVisualizer.heapsnapshot.table": false,
        "decompiled.javaClass": false,
        "java.formatterSettingsEditor": false,
        "jupyter-notebook": false,
        "workbench.input.interactive": false,
        "mainThreadWebview-markdown.preview": false,
        "mainThreadWebview-simpleBrowser.view": true,
        "mainThreadWebview-browserPreview": true
      },
      "additionalProperties": false,
      "defaultDefaultValue": {
        "default": false,
        "workbench.editor.chatSession": false,
        "workbench.editorinputs.searchEditorInput": false,
        "workbench.editors.gettingStartedInput": false,
        "terminalEditor": true,
        "imagePreview.previewEditor": false,
        "vscode.audioPreview": false,
        "vscode.videoPreview": false,
        "jsProfileVisualizer.cpuprofile.table": false,
        "jsProfileVisualizer.heapprofile.table": false,
        "jsProfileVisualizer.heapsnapshot.table": false,
        "decompiled.javaClass": false,
        "java.formatterSettingsEditor": false,
        "jupyter-notebook": false,
        "workbench.input.interactive": false,
        "mainThreadWebview-markdown.preview": false,
        "mainThreadWebview-simpleBrowser.view": true,
        "mainThreadWebview-browserPreview": true
      },
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.defaultBinaryEditor": {
      "type": "string",
      "default": "",
      "enum": [
        "default",
        "workbench.editor.chatSession",
        "workbench.editorinputs.searchEditorInput",
        "workbench.editors.gettingStartedInput",
        "vscode.markdown.preview.editor",
        "imagePreview.previewEditor",
        "vscode.audioPreview",
        "vscode.videoPreview",
        "jsProfileVisualizer.cpuprofile.table",
        "jsProfileVisualizer.heapprofile.table",
        "jsProfileVisualizer.heapsnapshot.table",
        "decompiled.javaClass",
        "java.formatterSettingsEditor",
        "jupyter-notebook",
        ""
      ],
      "description": "The default editor for files detected as binary. If undefined, the user will be presented with a picker.",
      "defaultDefaultValue": "",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.defaultProfile.linux": {
      "restricted": true,
      "markdownDescription": "The default terminal profile on Linux.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "enum": [
        null,
        "sh",
        "bash",
        "bash (2)",
        "rbash",
        "rbash (2)",
        "sh (2)",
        "dash",
        "dash (2)",
        "tmux",
        "screen",
        "JavaScript Debug Terminal"
      ],
      "markdownEnumDescriptions": [
        "Automatically detect the default",
        "$(terminal) sh\n- path: /bin/sh",
        "$(terminal-bash) bash\n- path: /usr/bin/bash",
        "$(terminal) bash (2)\n- path: /usr/bin/bash",
        "$(terminal) rbash\n- path: /bin/rbash",
        "$(terminal) rbash (2)\n- path: /usr/bin/rbash",
        "$(terminal) sh (2)\n- path: /usr/bin/sh",
        "$(terminal) dash\n- path: /bin/dash",
        "$(terminal) dash (2)\n- path: /usr/bin/dash",
        "$(terminal-tmux) tmux\n- path: /usr/bin/tmux",
        "$(terminal) screen\n- path: /usr/bin/screen",
        "$($(debug)) JavaScript Debug Terminal\n- extensionIdentifier: ms-vscode.js-debug"
      ],
      "defaultDefaultValue": null,
      "scope": 3
    },
    "terminal.integrated.defaultProfile.osx": {
      "restricted": true,
      "markdownDescription": "The default terminal profile on macOS.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "defaultDefaultValue": null,
      "scope": 3
    },
    "terminal.integrated.defaultProfile.windows": {
      "restricted": true,
      "markdownDescription": "The default terminal profile on Windows.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "defaultDefaultValue": null,
      "scope": 3
    },
    "editor.tabSize": {
      "type": "number",
      "default": 4,
      "minimum": 1,
      "markdownDescription": "The number of spaces a tab is equal to. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
      "defaultDefaultValue": 4,
      "scope": 5,
      "restricted": false
    },
    "editor.indentSize": {
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "tabSize"
          ]
        },
        {
          "type": "number",
          "minimum": 1
        }
      ],
      "default": "tabSize",
      "markdownDescription": "The number of spaces used for indentation or `\"tabSize\"` to use the value from `#editor.tabSize#`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
      "defaultDefaultValue": "tabSize",
      "scope": 5,
      "restricted": false
    },
    "editor.insertSpaces": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Insert spaces when pressing `Tab`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.detectIndentation": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether `#editor.tabSize#` and `#editor.insertSpaces#` will be automatically detected when a file is opened based on the file contents.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.trimAutoWhitespace": {
      "type": "boolean",
      "default": true,
      "description": "Remove trailing auto inserted whitespace.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.largeFileOptimizations": {
      "type": "boolean",
      "default": true,
      "description": "Special handling for large files to disable certain memory intensive features.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.wordBasedSuggestions": {
      "enum": [
        "off",
        "currentDocument",
        "matchingDocuments",
        "allDocuments"
      ],
      "default": "matchingDocuments",
      "enumDescriptions": [
        "Turn off Word Based Suggestions.",
        "Only suggest words from the active document.",
        "Suggest words from all open documents of the same language.",
        "Suggest words from all open documents."
      ],
      "description": "Controls whether completions should be computed based on words in the document and from which documents they are computed.",
      "defaultDefaultValue": "matchingDocuments",
      "scope": 5,
      "restricted": false
    },
    "editor.semanticHighlighting.enabled": {
      "enum": [
        true,
        false,
        "configuredByTheme"
      ],
      "enumDescriptions": [
        "Semantic highlighting enabled for all color themes.",
        "Semantic highlighting disabled for all color themes.",
        "Semantic highlighting is configured by the current color theme's `semanticHighlighting` setting."
      ],
      "default": "configuredByTheme",
      "description": "Controls whether the semanticHighlighting is shown for the languages that support it.",
      "defaultDefaultValue": "configuredByTheme",
      "scope": 5,
      "restricted": false
    },
    "editor.stablePeek": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Keep peek editors open even when double-clicking their content or when hitting `Escape`.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.maxTokenizationLineLength": {
      "type": "integer",
      "default": 20000,
      "description": "Lines above this length will not be tokenized for performance reasons",
      "defaultDefaultValue": 20000,
      "scope": 5,
      "restricted": false
    },
    "editor.experimental.asyncTokenization": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the tokenization should happen asynchronously on a web worker.",
      "tags": [
        "experimental"
      ],
      "defaultDefaultValue": false,
      "defaultValueSource": "Experiments",
      "scope": 5,
      "restricted": false
    },
    "editor.experimental.asyncTokenizationLogging": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether async tokenization should be logged. For debugging only.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.experimental.asyncTokenizationVerification": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether async tokenization should be verified against legacy background tokenization. Might slow down tokenization. For debugging only.",
      "tags": [
        "experimental"
      ],
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.language.brackets": {
      "type": [
        "array",
        "null"
      ],
      "default": null,
      "description": "Defines the bracket symbols that increase or decrease the indentation.",
      "items": {
        "type": "array",
        "items": [
          {
            "type": "string",
            "description": "The opening bracket character or string sequence."
          },
          {
            "type": "string",
            "description": "The closing bracket character or string sequence."
          }
        ]
      },
      "defaultDefaultValue": null,
      "scope": 5,
      "restricted": false
    },
    "editor.language.colorizedBracketPairs": {
      "type": [
        "array",
        "null"
      ],
      "default": null,
      "description": "Defines the bracket pairs that are colorized by their nesting level if bracket pair colorization is enabled.",
      "items": {
        "type": "array",
        "items": [
          {
            "type": "string",
            "description": "The opening bracket character or string sequence."
          },
          {
            "type": "string",
            "description": "The closing bracket character or string sequence."
          }
        ]
      },
      "defaultDefaultValue": null,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.maxComputationTime": {
      "type": "number",
      "default": 5000,
      "description": "Timeout in milliseconds after which diff computation is cancelled. Use 0 for no timeout.",
      "defaultDefaultValue": 5000,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.maxFileSize": {
      "type": "number",
      "default": 50,
      "description": "Maximum file size in MB for which to compute diffs. Use 0 for no limit.",
      "defaultDefaultValue": 50,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.renderSideBySide": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the diff editor shows the diff side by side or inline.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.renderSideBySideInlineBreakpoint": {
      "type": "number",
      "default": 900,
      "description": "If the diff editor width is smaller than this value, the inline view is used.",
      "defaultDefaultValue": 900,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.useInlineViewWhenSpaceIsLimited": {
      "type": "boolean",
      "default": true,
      "description": "If enabled and the editor width is too small, the inline view is used.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.renderMarginRevertIcon": {
      "type": "boolean",
      "default": true,
      "description": "When enabled, the diff editor shows arrows in its glyph margin to revert changes.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.renderGutterMenu": {
      "type": "boolean",
      "default": true,
      "description": "When enabled, the diff editor shows a special gutter for revert and stage actions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.ignoreTrimWhitespace": {
      "type": "boolean",
      "default": true,
      "description": "When enabled, the diff editor ignores changes in leading or trailing whitespace.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.renderIndicators": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the diff editor shows +/- indicators for added/removed changes.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.codeLens": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether the editor shows CodeLens.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.wordWrap": {
      "type": "string",
      "enum": [
        "off",
        "on",
        "inherit"
      ],
      "default": "inherit",
      "markdownEnumDescriptions": [
        "Lines will never wrap.",
        "Lines will wrap at the viewport width.",
        "Lines will wrap according to the `#editor.wordWrap#` setting."
      ],
      "defaultDefaultValue": "inherit",
      "scope": 5,
      "restricted": false
    },
    "diffEditor.diffAlgorithm": {
      "type": "string",
      "enum": [
        "legacy",
        "advanced"
      ],
      "default": "advanced",
      "markdownEnumDescriptions": [
        "Uses the legacy diffing algorithm.",
        "Uses the advanced diffing algorithm."
      ],
      "tags": [
        "experimental"
      ],
      "defaultDefaultValue": "advanced",
      "scope": 5,
      "restricted": false
    },
    "diffEditor.hideUnchangedRegions.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Controls whether the diff editor shows unchanged regions.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.hideUnchangedRegions.revealLineCount": {
      "type": "integer",
      "default": 20,
      "markdownDescription": "Controls how many lines are used for unchanged regions.",
      "minimum": 1,
      "defaultDefaultValue": 20,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.hideUnchangedRegions.minimumLineCount": {
      "type": "integer",
      "default": 3,
      "markdownDescription": "Controls how many lines are used as a minimum for unchanged regions.",
      "minimum": 1,
      "defaultDefaultValue": 3,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.hideUnchangedRegions.contextLineCount": {
      "type": "integer",
      "default": 3,
      "markdownDescription": "Controls how many lines are used as context when comparing unchanged regions.",
      "minimum": 1,
      "defaultDefaultValue": 3,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.experimental.showMoves": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Controls whether the diff editor should show detected code moves.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.experimental.showEmptyDecorations": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the diff editor shows empty decorations to see where characters got inserted or deleted.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.acceptSuggestionOnCommitCharacter": {
      "markdownDescription": "Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.acceptSuggestionOnEnter": {
      "markdownEnumDescriptions": [
        "",
        "Only accept a suggestion with `Enter` when it makes a textual change.",
        ""
      ],
      "markdownDescription": "Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
      "type": "string",
      "enum": [
        "on",
        "smart",
        "off"
      ],
      "default": "on",
      "defaultDefaultValue": "on",
      "scope": 5,
      "restricted": false
    },
    "editor.accessibilitySupport": {
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "enumDescriptions": [
        "Use platform APIs to detect when a Screen Reader is attached.",
        "Optimize for usage with a Screen Reader.",
        "Assume a screen reader is not attached."
      ],
      "default": "auto",
      "tags": [
        "accessibility"
      ],
      "description": "Controls if the UI should run in a mode where it is optimized for screen readers.",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.accessibilityPageSize": {
      "description": "Controls the number of lines in the editor that can be read out by a screen reader at once. When we detect a screen reader we automatically set the default to be 500. Warning: this has a performance implication for numbers larger than the default.",
      "tags": [
        "accessibility"
      ],
      "type": "integer",
      "default": 10,
      "minimum": 1,
      "maximum": 1073741824,
      "defaultDefaultValue": 10,
      "scope": 5,
      "restricted": false
    },
    "editor.autoClosingBrackets": {
      "enumDescriptions": [
        "",
        "Use language configurations to determine when to autoclose brackets.",
        "Autoclose brackets only when the cursor is to the left of whitespace.",
        ""
      ],
      "description": "Controls whether the editor should automatically close brackets after the user adds an opening bracket.",
      "type": "string",
      "enum": [
        "always",
        "languageDefined",
        "beforeWhitespace",
        "never"
      ],
      "default": "languageDefined",
      "defaultDefaultValue": "languageDefined",
      "scope": 5,
      "restricted": false
    },
    "editor.autoClosingComments": {
      "enumDescriptions": [
        "",
        "Use language configurations to determine when to autoclose comments.",
        "Autoclose comments only when the cursor is to the left of whitespace.",
        ""
      ],
      "description": "Controls whether the editor should automatically close comments after the user adds an opening comment.",
      "type": "string",
      "enum": [
        "always",
        "languageDefined",
        "beforeWhitespace",
        "never"
      ],
      "default": "languageDefined",
      "defaultDefaultValue": "languageDefined",
      "scope": 5,
      "restricted": false
    },
    "editor.screenReaderAnnounceInlineSuggestion": {
      "description": "Control whether inline suggestions are announced by a screen reader.",
      "tags": [
        "accessibility"
      ],
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.autoClosingDelete": {
      "enumDescriptions": [
        "",
        "Remove adjacent closing quotes or brackets only if they were automatically inserted.",
        ""
      ],
      "description": "Controls whether the editor should remove adjacent closing quotes or brackets when deleting.",
      "type": "string",
      "enum": [
        "always",
        "auto",
        "never"
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.autoClosingOvertype": {
      "enumDescriptions": [
        "",
        "Type over closing quotes or brackets only if they were automatically inserted.",
        ""
      ],
      "description": "Controls whether the editor should type over closing quotes or brackets.",
      "type": "string",
      "enum": [
        "always",
        "auto",
        "never"
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.autoClosingQuotes": {
      "enumDescriptions": [
        "",
        "Use language configurations to determine when to autoclose quotes.",
        "Autoclose quotes only when the cursor is to the left of whitespace.",
        ""
      ],
      "description": "Controls whether the editor should automatically close quotes after the user adds an opening quote.",
      "type": "string",
      "enum": [
        "always",
        "languageDefined",
        "beforeWhitespace",
        "never"
      ],
      "default": "languageDefined",
      "defaultDefaultValue": "languageDefined",
      "scope": 5,
      "restricted": false
    },
    "editor.autoIndent": {
      "enumDescriptions": [
        "The editor will not insert indentation automatically.",
        "The editor will keep the current line's indentation.",
        "The editor will keep the current line's indentation and honor language defined brackets.",
        "The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.",
        "The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages."
      ],
      "description": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.",
      "type": "string",
      "enum": [
        "none",
        "keep",
        "brackets",
        "advanced",
        "full"
      ],
      "default": "full",
      "defaultDefaultValue": "full",
      "scope": 5,
      "restricted": false
    },
    "editor.autoSurround": {
      "enumDescriptions": [
        "Use language configurations to determine when to automatically surround selections.",
        "Surround with quotes but not brackets.",
        "Surround with brackets but not quotes.",
        ""
      ],
      "description": "Controls whether the editor should automatically surround selections when typing quotes or brackets.",
      "type": "string",
      "enum": [
        "languageDefined",
        "quotes",
        "brackets",
        "never"
      ],
      "default": "languageDefined",
      "defaultDefaultValue": "languageDefined",
      "scope": 5,
      "restricted": false
    },
    "editor.bracketPairColorization.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether bracket pair colorization is enabled or not. Use `#workbench.colorCustomizations#` to override the bracket highlight colors.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.bracketPairColorization.independentColorPoolPerBracketType": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether each bracket type has its own independent color pool.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.guides.bracketPairs": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        "active",
        false
      ],
      "enumDescriptions": [
        "Enables bracket pair guides.",
        "Enables bracket pair guides only for the active bracket pair.",
        "Disables bracket pair guides."
      ],
      "default": false,
      "description": "Controls whether bracket pair guides are enabled or not.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.guides.bracketPairsHorizontal": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        "active",
        false
      ],
      "enumDescriptions": [
        "Enables horizontal guides as addition to vertical bracket pair guides.",
        "Enables horizontal guides only for the active bracket pair.",
        "Disables horizontal bracket pair guides."
      ],
      "default": "active",
      "description": "Controls whether horizontal bracket pair guides are enabled or not.",
      "defaultDefaultValue": "active",
      "scope": 5,
      "restricted": false
    },
    "editor.guides.highlightActiveBracketPair": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the editor should highlight the active bracket pair.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.guides.indentation": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the editor should render indent guides.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.guides.highlightActiveIndentation": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        "always",
        false
      ],
      "enumDescriptions": [
        "Highlights the active indent guide.",
        "Highlights the active indent guide even if bracket guides are highlighted.",
        "Do not highlight the active indent guide."
      ],
      "default": true,
      "description": "Controls whether the editor should highlight the active indent guide.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.codeLens": {
      "description": "Controls whether the editor shows CodeLens.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.codeLensFontFamily": {
      "description": "Controls the font family for CodeLens.",
      "type": "string",
      "default": "",
      "defaultDefaultValue": "",
      "scope": 5,
      "restricted": false
    },
    "editor.codeLensFontSize": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 100,
      "markdownDescription": "Controls the font size in pixels for CodeLens. When set to 0, 90% of `#editor.fontSize#` is used.",
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.colorDecorators": {
      "description": "Controls whether the editor should render the inline color decorators and color picker.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.colorDecoratorsLimit": {
      "markdownDescription": "Controls the max number of color decorators that can be rendered in an editor at once.",
      "type": "integer",
      "default": 500,
      "minimum": 1,
      "maximum": 1000000,
      "defaultDefaultValue": 500,
      "scope": 5,
      "restricted": false
    },
    "editor.columnSelection": {
      "description": "Enable that the selection with the mouse and keys is doing column selection.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.comments.insertSpace": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether a space character is inserted when commenting.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.comments.ignoreEmptyLines": {
      "type": "boolean",
      "default": true,
      "description": "Controls if empty lines should be ignored with toggle, add or remove actions for line comments.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.copyWithSyntaxHighlighting": {
      "description": "Controls whether syntax highlighting should be copied into the clipboard.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.cursorBlinking": {
      "description": "Control the cursor animation style.",
      "type": "string",
      "enum": [
        "blink",
        "smooth",
        "phase",
        "expand",
        "solid"
      ],
      "default": "blink",
      "defaultDefaultValue": "blink",
      "scope": 5,
      "restricted": false
    },
    "editor.cursorSmoothCaretAnimation": {
      "enumDescriptions": [
        "Smooth caret animation is disabled.",
        "Smooth caret animation is enabled only when the user moves the cursor with an explicit gesture.",
        "Smooth caret animation is always enabled."
      ],
      "description": "Controls whether the smooth caret animation should be enabled.",
      "type": "string",
      "enum": [
        "off",
        "explicit",
        "on"
      ],
      "default": "off",
      "defaultDefaultValue": "off",
      "scope": 5,
      "restricted": false
    },
    "editor.cursorStyle": {
      "description": "Controls the cursor style.",
      "type": "string",
      "enum": [
        "line",
        "block",
        "underline",
        "line-thin",
        "block-outline",
        "underline-thin"
      ],
      "default": "line",
      "defaultDefaultValue": "line",
      "scope": 5,
      "restricted": false
    },
    "editor.cursorSurroundingLines": {
      "description": "Controls the minimal number of visible leading lines (minimum 0) and trailing lines (minimum 1) surrounding the cursor. Known as 'scrollOff' or 'scrollOffset' in some other editors.",
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 1073741824,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.cursorSurroundingLinesStyle": {
      "enumDescriptions": [
        "`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.",
        "`cursorSurroundingLines` is enforced always."
      ],
      "markdownDescription": "Controls when `#editor.cursorSurroundingLines#` should be enforced.",
      "type": "string",
      "enum": [
        "default",
        "all"
      ],
      "default": "default",
      "defaultDefaultValue": "default",
      "scope": 5,
      "restricted": false
    },
    "editor.cursorWidth": {
      "markdownDescription": "Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.",
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 1073741824,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.dragAndDrop": {
      "description": "Controls whether the editor should allow moving selections via drag and drop.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.dropIntoEditor.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether you can drag and drop a file into a text editor by holding down the `Shift` key (instead of opening the file in an editor).",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.dropIntoEditor.showDropSelector": {
      "type": "string",
      "markdownDescription": "Controls if a widget is shown when dropping files into the editor. This widget lets you control how the file is dropped.",
      "enum": [
        "afterDrop",
        "never"
      ],
      "enumDescriptions": [
        "Show the drop selector widget after a file is dropped into the editor.",
        "Never show the drop selector widget. Instead the default drop provider is always used."
      ],
      "default": "afterDrop",
      "defaultDefaultValue": "afterDrop",
      "scope": 5,
      "restricted": false
    },
    "editor.emptySelectionClipboard": {
      "description": "Controls whether copying without a selection copies the current line.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.experimentalWhitespaceRendering": {
      "enumDescriptions": [
        "Use a new rendering method with svgs.",
        "Use a new rendering method with font characters.",
        "Use the stable rendering method."
      ],
      "description": "Controls whether whitespace is rendered with a new, experimental method.",
      "type": "string",
      "enum": [
        "svg",
        "font",
        "off"
      ],
      "default": "svg",
      "defaultDefaultValue": "svg",
      "scope": 5,
      "restricted": false
    },
    "editor.fastScrollSensitivity": {
      "markdownDescription": "Scrolling speed multiplier when pressing `Alt`.",
      "type": "number",
      "default": 5,
      "defaultDefaultValue": 5,
      "scope": 5,
      "restricted": false
    },
    "editor.find.cursorMoveOnType": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the cursor should jump to find matches while typing.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.find.seedSearchStringFromSelection": {
      "type": "string",
      "enum": [
        "never",
        "always",
        "selection"
      ],
      "default": "always",
      "enumDescriptions": [
        "Never seed search string from the editor selection.",
        "Always seed search string from the editor selection, including word at cursor position.",
        "Only seed search string from the editor selection."
      ],
      "description": "Controls whether the search string in the Find Widget is seeded from the editor selection.",
      "defaultDefaultValue": "always",
      "scope": 5,
      "restricted": false
    },
    "editor.find.autoFindInSelection": {
      "type": "string",
      "enum": [
        "never",
        "always",
        "multiline"
      ],
      "default": "never",
      "enumDescriptions": [
        "Never turn on Find in Selection automatically (default).",
        "Always turn on Find in Selection automatically.",
        "Turn on Find in Selection automatically when multiple lines of content are selected."
      ],
      "description": "Controls the condition for turning on Find in Selection automatically.",
      "defaultDefaultValue": "never",
      "scope": 5,
      "restricted": false
    },
    "editor.find.addExtraSpaceOnTop": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.find.loop": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.folding": {
      "description": "Controls whether the editor has code folding enabled.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.foldingStrategy": {
      "enumDescriptions": [
        "Use a language-specific folding strategy if available, else the indentation-based one.",
        "Use the indentation-based folding strategy."
      ],
      "description": "Controls the strategy for computing folding ranges.",
      "type": "string",
      "enum": [
        "auto",
        "indentation"
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.foldingHighlight": {
      "description": "Controls whether the editor should highlight folded ranges.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.foldingImportsByDefault": {
      "description": "Controls whether the editor automatically collapses import ranges.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.foldingMaximumRegions": {
      "description": "The maximum number of foldable regions. Increasing this value may result in the editor becoming less responsive when the current source has a large number of foldable regions.",
      "type": "integer",
      "default": 5000,
      "minimum": 10,
      "maximum": 65000,
      "defaultDefaultValue": 5000,
      "scope": 5,
      "restricted": false
    },
    "editor.unfoldOnClickAfterEndOfLine": {
      "description": "Controls whether clicking on the empty content after a folded line will unfold the line.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.fontFamily": {
      "description": "Controls the font family.",
      "type": "string",
      "default": "Fira Code",
      "defaultDefaultValue": "Consolas, 'Courier New', monospace",
      "scope": 5,
      "restricted": false
    },
    "editor.fontLigatures": {
      "anyOf": [
        {
          "type": "boolean",
          "description": "Enables/Disables font ligatures ('calt' and 'liga' font features). Change this to a string for fine-grained control of the 'font-feature-settings' CSS property."
        },
        {
          "type": "string",
          "description": "Explicit 'font-feature-settings' CSS property. A boolean can be passed instead if one only needs to turn on/off ligatures."
        }
      ],
      "description": "Configures font ligatures or font features. Can be either a boolean to enable/disable ligatures or a string for the value of the CSS 'font-feature-settings' property.",
      "default": true,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.fontSize": {
      "type": "number",
      "minimum": 6,
      "maximum": 100,
      "default": 14,
      "description": "Controls the font size in pixels.",
      "defaultDefaultValue": 14,
      "scope": 5,
      "restricted": false
    },
    "editor.fontWeight": {
      "anyOf": [
        {
          "type": "number",
          "minimum": 1,
          "maximum": 1000,
          "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
        },
        {
          "type": "string",
          "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
        },
        {
          "enum": [
            "normal",
            "bold",
            "100",
            "200",
            "300",
            "400",
            "500",
            "600",
            "700",
            "800",
            "900"
          ]
        }
      ],
      "default": "normal",
      "description": "Controls the font weight. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
      "defaultDefaultValue": "normal",
      "scope": 5,
      "restricted": false
    },
    "editor.fontVariations": {
      "anyOf": [
        {
          "type": "boolean",
          "description": "Enables/Disables the translation from font-weight to font-variation-settings. Change this to a string for fine-grained control of the 'font-variation-settings' CSS property."
        },
        {
          "type": "string",
          "description": "Explicit 'font-variation-settings' CSS property. A boolean can be passed instead if one only needs to translate font-weight to font-variation-settings."
        }
      ],
      "description": "Configures font variations. Can be either a boolean to enable/disable the translation from font-weight to font-variation-settings or a string for the value of the CSS 'font-variation-settings' property.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.formatOnPaste": {
      "description": "Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.formatOnType": {
      "description": "Controls whether the editor should automatically format the line after typing.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.glyphMargin": {
      "description": "Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multiple": {
      "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.",
      "default": null,
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multipleDefinitions": {
      "description": "Controls the behavior the 'Go to Definition'-command when multiple target locations exist.",
      "type": "string",
      "enum": [
        "peek",
        "gotoAndPeek",
        "goto"
      ],
      "default": "peek",
      "enumDescriptions": [
        "Show Peek view of the results (default)",
        "Go to the primary result and show a Peek view",
        "Go to the primary result and enable Peek-less navigation to others"
      ],
      "defaultDefaultValue": "peek",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multipleTypeDefinitions": {
      "description": "Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.",
      "type": "string",
      "enum": [
        "peek",
        "gotoAndPeek",
        "goto"
      ],
      "default": "peek",
      "enumDescriptions": [
        "Show Peek view of the results (default)",
        "Go to the primary result and show a Peek view",
        "Go to the primary result and enable Peek-less navigation to others"
      ],
      "defaultDefaultValue": "peek",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multipleDeclarations": {
      "description": "Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.",
      "type": "string",
      "enum": [
        "peek",
        "gotoAndPeek",
        "goto"
      ],
      "default": "peek",
      "enumDescriptions": [
        "Show Peek view of the results (default)",
        "Go to the primary result and show a Peek view",
        "Go to the primary result and enable Peek-less navigation to others"
      ],
      "defaultDefaultValue": "peek",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multipleImplementations": {
      "description": "Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.",
      "type": "string",
      "enum": [
        "peek",
        "gotoAndPeek",
        "goto"
      ],
      "default": "peek",
      "enumDescriptions": [
        "Show Peek view of the results (default)",
        "Go to the primary result and show a Peek view",
        "Go to the primary result and enable Peek-less navigation to others"
      ],
      "defaultDefaultValue": "peek",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multipleReferences": {
      "description": "Controls the behavior the 'Go to References'-command when multiple target locations exist.",
      "type": "string",
      "enum": [
        "peek",
        "gotoAndPeek",
        "goto"
      ],
      "default": "peek",
      "enumDescriptions": [
        "Show Peek view of the results (default)",
        "Go to the primary result and show a Peek view",
        "Go to the primary result and enable Peek-less navigation to others"
      ],
      "defaultDefaultValue": "peek",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.alternativeDefinitionCommand": {
      "type": "string",
      "default": "editor.action.goToReferences",
      "enum": [
        "",
        "editor.action.referenceSearch.trigger",
        "editor.action.goToReferences",
        "editor.action.peekImplementation",
        "editor.action.goToImplementation",
        "editor.action.peekTypeDefinition",
        "editor.action.goToTypeDefinition",
        "editor.action.peekDeclaration",
        "editor.action.revealDeclaration",
        "editor.action.peekDefinition",
        "editor.action.revealDefinitionAside",
        "editor.action.revealDefinition"
      ],
      "description": "Alternative command id that is being executed when the result of 'Go to Definition' is the current location.",
      "defaultDefaultValue": "editor.action.goToReferences",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.alternativeTypeDefinitionCommand": {
      "type": "string",
      "default": "editor.action.goToReferences",
      "enum": [
        "",
        "editor.action.referenceSearch.trigger",
        "editor.action.goToReferences",
        "editor.action.peekImplementation",
        "editor.action.goToImplementation",
        "editor.action.peekTypeDefinition",
        "editor.action.goToTypeDefinition",
        "editor.action.peekDeclaration",
        "editor.action.revealDeclaration",
        "editor.action.peekDefinition",
        "editor.action.revealDefinitionAside",
        "editor.action.revealDefinition"
      ],
      "description": "Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.",
      "defaultDefaultValue": "editor.action.goToReferences",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.alternativeDeclarationCommand": {
      "type": "string",
      "default": "editor.action.goToReferences",
      "enum": [
        "",
        "editor.action.referenceSearch.trigger",
        "editor.action.goToReferences",
        "editor.action.peekImplementation",
        "editor.action.goToImplementation",
        "editor.action.peekTypeDefinition",
        "editor.action.goToTypeDefinition",
        "editor.action.peekDeclaration",
        "editor.action.revealDeclaration",
        "editor.action.peekDefinition",
        "editor.action.revealDefinitionAside",
        "editor.action.revealDefinition"
      ],
      "description": "Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.",
      "defaultDefaultValue": "editor.action.goToReferences",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.alternativeImplementationCommand": {
      "type": "string",
      "default": "",
      "enum": [
        "",
        "editor.action.referenceSearch.trigger",
        "editor.action.goToReferences",
        "editor.action.peekImplementation",
        "editor.action.goToImplementation",
        "editor.action.peekTypeDefinition",
        "editor.action.goToTypeDefinition",
        "editor.action.peekDeclaration",
        "editor.action.revealDeclaration",
        "editor.action.peekDefinition",
        "editor.action.revealDefinitionAside",
        "editor.action.revealDefinition"
      ],
      "description": "Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.",
      "defaultDefaultValue": "",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.alternativeReferenceCommand": {
      "type": "string",
      "default": "",
      "enum": [
        "",
        "editor.action.referenceSearch.trigger",
        "editor.action.goToReferences",
        "editor.action.peekImplementation",
        "editor.action.goToImplementation",
        "editor.action.peekTypeDefinition",
        "editor.action.goToTypeDefinition",
        "editor.action.peekDeclaration",
        "editor.action.revealDeclaration",
        "editor.action.peekDefinition",
        "editor.action.revealDefinitionAside",
        "editor.action.revealDefinition"
      ],
      "description": "Alternative command id that is being executed when the result of 'Go to Reference' is the current location.",
      "defaultDefaultValue": "",
      "scope": 5,
      "restricted": false
    },
    "editor.hideCursorInOverviewRuler": {
      "description": "Controls whether the cursor should be hidden in the overview ruler.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.hover.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the hover is shown.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.hover.delay": {
      "type": "number",
      "default": 300,
      "minimum": 0,
      "maximum": 10000,
      "description": "Controls the delay in milliseconds after which the hover is shown.",
      "defaultDefaultValue": 300,
      "scope": 5,
      "restricted": false
    },
    "editor.hover.sticky": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the hover should remain visible when mouse is moved over it.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.hover.hidingDelay": {
      "type": "integer",
      "minimum": 0,
      "default": 300,
      "description": "Controls the delay in milliseconds after which the hover is hidden. Requires `editor.hover.sticky` to be enabled.",
      "defaultDefaultValue": 300,
      "scope": 5,
      "restricted": false
    },
    "editor.hover.above": {
      "type": "boolean",
      "default": true,
      "description": "Prefer showing hovers above the line, if there's space.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.inlineSuggest.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to automatically show inline suggestions in the editor.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.inlineSuggest.showToolbar": {
      "type": "string",
      "default": "onHover",
      "enum": [
        "always",
        "onHover",
        "never"
      ],
      "enumDescriptions": [
        "Show the inline suggestion toolbar whenever an inline suggestion is shown.",
        "Show the inline suggestion toolbar when hovering over an inline suggestion.",
        "Never show the inline suggestion toolbar."
      ],
      "description": "Controls when to show the inline suggestion toolbar.",
      "defaultDefaultValue": "onHover",
      "scope": 5,
      "restricted": false
    },
    "editor.inlineSuggest.suppressSuggestions": {
      "type": "boolean",
      "default": false,
      "description": "Controls how inline suggestions interact with the suggest widget. If enabled, the suggest widget is not shown automatically when inline suggestions are available.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.inlineSuggest.fontFamily": {
      "type": "string",
      "default": "default",
      "description": "Controls the font family of the inline suggestions.",
      "defaultDefaultValue": "default",
      "scope": 5,
      "restricted": false
    },
    "editor.experimentalInlineEdit.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether to show inline edits in the editor.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.experimentalInlineEdit.showToolbar": {
      "type": "string",
      "default": "onHover",
      "enum": [
        "always",
        "onHover",
        "never"
      ],
      "enumDescriptions": [
        "Show the inline edit toolbar whenever an inline suggestion is shown.",
        "Show the inline edit toolbar when hovering over an inline suggestion.",
        "Never show the inline edit toolbar."
      ],
      "description": "Controls when to show the inline edit toolbar.",
      "defaultDefaultValue": "onHover",
      "scope": 5,
      "restricted": false
    },
    "editor.experimentalInlineEdit.fontFamily": {
      "type": "string",
      "default": "default",
      "description": "Controls the font family of the inline edit.",
      "defaultDefaultValue": "default",
      "scope": 5,
      "restricted": false
    },
    "editor.experimentalInlineEdit.backgroundColoring": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether to color the background of inline edits.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.letterSpacing": {
      "description": "Controls the letter spacing in pixels.",
      "type": "number",
      "default": 0,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.lightbulb.enabled": {
      "type": "string",
      "tags": [
        "experimental"
      ],
      "enum": [
        "off",
        "onCode",
        "on"
      ],
      "default": "on",
      "enumDescriptions": [
        "Disable the code action menu.",
        "Show the code action menu when the cursor is on lines with code.",
        "Show the code action menu when the cursor is on lines with code or on empty lines."
      ],
      "description": "Enables the Code Action lightbulb in the editor.",
      "defaultDefaultValue": "on",
      "scope": 5,
      "restricted": false
    },
    "editor.lineHeight": {
      "markdownDescription": "Controls the line height. \n - Use 0 to automatically compute the line height from the font size.\n - Values between 0 and 8 will be used as a multiplier with the font size.\n - Values greater than or equal to 8 will be used as effective values.",
      "type": "number",
      "default": 0,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.lineNumbers": {
      "type": "string",
      "enum": [
        "off",
        "on",
        "relative",
        "interval"
      ],
      "enumDescriptions": [
        "Line numbers are not rendered.",
        "Line numbers are rendered as absolute number.",
        "Line numbers are rendered as distance in lines to cursor position.",
        "Line numbers are rendered every 10 lines."
      ],
      "default": "on",
      "description": "Controls the display of line numbers.",
      "defaultDefaultValue": "on",
      "scope": 5,
      "restricted": false
    },
    "editor.linkedEditing": {
      "description": "Controls whether the editor has linked editing enabled. Depending on the language, related symbols such as HTML tags, are updated while editing.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.links": {
      "description": "Controls whether the editor should detect links and make them clickable.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.matchBrackets": {
      "description": "Highlight matching brackets.",
      "type": "string",
      "enum": [
        "always",
        "near",
        "never"
      ],
      "default": "always",
      "defaultDefaultValue": "always",
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the minimap is shown.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.autohide": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether the minimap is hidden automatically.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.size": {
      "type": "string",
      "enum": [
        "proportional",
        "fill",
        "fit"
      ],
      "enumDescriptions": [
        "The minimap has the same size as the editor contents (and might scroll).",
        "The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).",
        "The minimap will shrink as necessary to never be larger than the editor (no scrolling)."
      ],
      "default": "proportional",
      "description": "Controls the size of the minimap.",
      "defaultDefaultValue": "proportional",
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.side": {
      "type": "string",
      "enum": [
        "left",
        "right"
      ],
      "default": "right",
      "description": "Controls the side where to render the minimap.",
      "defaultDefaultValue": "right",
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.showSlider": {
      "type": "string",
      "enum": [
        "always",
        "mouseover"
      ],
      "default": "mouseover",
      "description": "Controls when the minimap slider is shown.",
      "defaultDefaultValue": "mouseover",
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.scale": {
      "type": "number",
      "default": 1,
      "minimum": 1,
      "maximum": 3,
      "enum": [
        1,
        2,
        3
      ],
      "description": "Scale of content drawn in the minimap: 1, 2 or 3.",
      "defaultDefaultValue": 1,
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.renderCharacters": {
      "type": "boolean",
      "default": true,
      "description": "Render the actual characters on a line as opposed to color blocks.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.maxColumn": {
      "type": "number",
      "default": 120,
      "description": "Limit the width of the minimap to render at most a certain number of columns.",
      "defaultDefaultValue": 120,
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.showRegionSectionHeaders": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether named regions are shown as section headers in the minimap.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.showMarkSectionHeaders": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether MARK: comments are shown as section headers in the minimap.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.sectionHeaderFontSize": {
      "type": "number",
      "default": 9,
      "description": "Controls the font size of section headers in the minimap.",
      "defaultDefaultValue": 9,
      "scope": 5,
      "restricted": false
    },
    "editor.mouseWheelScrollSensitivity": {
      "markdownDescription": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
      "type": "number",
      "default": 1,
      "defaultDefaultValue": 1,
      "scope": 5,
      "restricted": false
    },
    "editor.mouseWheelZoom": {
      "markdownDescription": "Zoom the font of the editor when using mouse wheel and holding `Ctrl`.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.multiCursorMergeOverlapping": {
      "description": "Merge multiple cursors when they are overlapping.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.multiCursorModifier": {
      "markdownEnumDescriptions": [
        "Maps to `Control` on Windows and Linux and to `Command` on macOS.",
        "Maps to `Alt` on Windows and Linux and to `Option` on macOS."
      ],
      "markdownDescription": "The modifier to be used to add multiple cursors with the mouse. The Go to Definition and Open Link mouse gestures will adapt such that they do not conflict with the [multicursor modifier](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).",
      "type": "string",
      "enum": [
        "ctrlCmd",
        "alt"
      ],
      "default": "alt",
      "defaultDefaultValue": "alt",
      "scope": 5,
      "restricted": false
    },
    "editor.multiCursorPaste": {
      "markdownEnumDescriptions": [
        "Each cursor pastes a single line of the text.",
        "Each cursor pastes the full text."
      ],
      "markdownDescription": "Controls pasting when the line count of the pasted text matches the cursor count.",
      "type": "string",
      "enum": [
        "spread",
        "full"
      ],
      "default": "spread",
      "defaultDefaultValue": "spread",
      "scope": 5,
      "restricted": false
    },
    "editor.multiCursorLimit": {
      "markdownDescription": "Controls the max number of cursors that can be in an active editor at once.",
      "type": "integer",
      "default": 10000,
      "minimum": 1,
      "maximum": 100000,
      "defaultDefaultValue": 10000,
      "scope": 5,
      "restricted": false
    },
    "editor.occurrencesHighlight": {
      "markdownEnumDescriptions": [
        "Does not highlight occurrences.",
        "Highlights occurrences only in the current file.",
        "Experimental: Highlights occurrences across all valid open files."
      ],
      "markdownDescription": "Controls whether occurrences should be highlighted across open files.",
      "type": "string",
      "enum": [
        "off",
        "singleFile",
        "multiFile"
      ],
      "default": "singleFile",
      "defaultDefaultValue": "singleFile",
      "scope": 5,
      "restricted": false
    },
    "editor.overviewRulerBorder": {
      "description": "Controls whether a border should be drawn around the overview ruler.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.padding.top": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "maximum": 1000,
      "description": "Controls the amount of space between the top edge of the editor and the first line.",
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.padding.bottom": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "maximum": 1000,
      "description": "Controls the amount of space between the bottom edge of the editor and the last line.",
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.pasteAs.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether you can paste content in different ways.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.pasteAs.showPasteSelector": {
      "type": "string",
      "markdownDescription": "Controls if a widget is shown when pasting content in to the editor. This widget lets you control how the file is pasted.",
      "enum": [
        "afterPaste",
        "never"
      ],
      "enumDescriptions": [
        "Show the paste selector widget after content is pasted into the editor.",
        "Never show the paste selector widget. Instead the default pasting behavior is always used."
      ],
      "default": "afterPaste",
      "defaultDefaultValue": "afterPaste",
      "scope": 5,
      "restricted": false
    },
    "editor.parameterHints.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enables a pop-up that shows parameter documentation and type information as you type.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.parameterHints.cycle": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the parameter hints menu cycles or closes when reaching the end of the list.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.peekWidgetDefaultFocus": {
      "enumDescriptions": [
        "Focus the tree when opening peek",
        "Focus the editor when opening peek"
      ],
      "description": "Controls whether to focus the inline editor or the tree in the peek widget.",
      "type": "string",
      "enum": [
        "tree",
        "editor"
      ],
      "default": "tree",
      "defaultDefaultValue": "tree",
      "scope": 5,
      "restricted": false
    },
    "editor.definitionLinkOpensInPeek": {
      "description": "Controls whether the Go to Definition mouse gesture always opens the peek widget.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.quickSuggestions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "strings": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "enum": [
                "on",
                "inline",
                "off"
              ],
              "enumDescriptions": [
                "Quick suggestions show inside the suggest widget",
                "Quick suggestions show as ghost text",
                "Quick suggestions are disabled"
              ]
            }
          ],
          "default": "off",
          "description": "Enable quick suggestions inside strings."
        },
        "comments": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "enum": [
                "on",
                "inline",
                "off"
              ],
              "enumDescriptions": [
                "Quick suggestions show inside the suggest widget",
                "Quick suggestions show as ghost text",
                "Quick suggestions are disabled"
              ]
            }
          ],
          "default": "off",
          "description": "Enable quick suggestions inside comments."
        },
        "other": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "enum": [
                "on",
                "inline",
                "off"
              ],
              "enumDescriptions": [
                "Quick suggestions show inside the suggest widget",
                "Quick suggestions show as ghost text",
                "Quick suggestions are disabled"
              ]
            }
          ],
          "default": "on",
          "description": "Enable quick suggestions outside of strings and comments."
        }
      },
      "default": {
        "other": "on",
        "comments": "off",
        "strings": "off"
      },
      "markdownDescription": "Controls whether suggestions should automatically show up while typing. This can be controlled for typing in comments, strings, and other code. Quick suggestion can be configured to show as ghost text or with the suggest widget. Also be aware of the '#editor.suggestOnTriggerCharacters#'-setting which controls if suggestions are triggered by special characters.",
      "defaultDefaultValue": {
        "other": "on",
        "comments": "off",
        "strings": "off"
      },
      "scope": 5,
      "restricted": false
    },
    "editor.quickSuggestionsDelay": {
      "description": "Controls the delay in milliseconds after which quick suggestions will show up.",
      "type": "integer",
      "default": 10,
      "minimum": 0,
      "maximum": 1073741824,
      "defaultDefaultValue": 10,
      "scope": 5,
      "restricted": false
    },
    "editor.renameOnType": {
      "description": "Controls whether the editor auto renames on type.",
      "markdownDeprecationMessage": "Deprecated, use `editor.linkedEditing` instead.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false,
      "deprecationMessage": "Deprecated, use `editor.linkedEditing` instead."
    },
    "editor.renderControlCharacters": {
      "description": "Controls whether the editor should render control characters.",
      "restricted": true,
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5
    },
    "editor.renderFinalNewline": {
      "description": "Render last line number when the file ends with a newline.",
      "type": "string",
      "enum": [
        "off",
        "on",
        "dimmed"
      ],
      "default": "on",
      "defaultDefaultValue": "on",
      "scope": 5,
      "restricted": false
    },
    "editor.renderLineHighlight": {
      "enumDescriptions": [
        "",
        "",
        "",
        "Highlights both the gutter and the current line."
      ],
      "description": "Controls how the editor should render the current line highlight.",
      "type": "string",
      "enum": [
        "none",
        "gutter",
        "line",
        "all"
      ],
      "default": "line",
      "defaultDefaultValue": "line",
      "scope": 5,
      "restricted": false
    },
    "editor.renderLineHighlightOnlyWhenFocus": {
      "description": "Controls if the editor should render the current line highlight only when the editor is focused.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.renderWhitespace": {
      "enumDescriptions": [
        "",
        "Render whitespace characters except for single spaces between words.",
        "Render whitespace characters only on selected text.",
        "Render only trailing whitespace characters.",
        ""
      ],
      "description": "Controls how the editor should render whitespace characters.",
      "type": "string",
      "enum": [
        "none",
        "boundary",
        "selection",
        "trailing",
        "all"
      ],
      "default": "selection",
      "defaultDefaultValue": "selection",
      "scope": 5,
      "restricted": false
    },
    "editor.roundedSelection": {
      "description": "Controls whether selections should have rounded corners.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.rulers": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "number",
            "description": "Number of monospace characters at which this editor ruler will render."
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "column": {
                "type": "number",
                "description": "Number of monospace characters at which this editor ruler will render."
              },
              "color": {
                "type": "string",
                "description": "Color of this editor ruler.",
                "format": "color-hex"
              }
            }
          }
        ]
      },
      "default": [],
      "description": "Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
      "defaultDefaultValue": [],
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.vertical": {
      "type": "string",
      "enum": [
        "auto",
        "visible",
        "hidden"
      ],
      "enumDescriptions": [
        "The vertical scrollbar will be visible only when necessary.",
        "The vertical scrollbar will always be visible.",
        "The vertical scrollbar will always be hidden."
      ],
      "default": "auto",
      "description": "Controls the visibility of the vertical scrollbar.",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.horizontal": {
      "type": "string",
      "enum": [
        "auto",
        "visible",
        "hidden"
      ],
      "enumDescriptions": [
        "The horizontal scrollbar will be visible only when necessary.",
        "The horizontal scrollbar will always be visible.",
        "The horizontal scrollbar will always be hidden."
      ],
      "default": "auto",
      "description": "Controls the visibility of the horizontal scrollbar.",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.verticalScrollbarSize": {
      "type": "number",
      "default": 14,
      "description": "The width of the vertical scrollbar.",
      "defaultDefaultValue": 14,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.horizontalScrollbarSize": {
      "type": "number",
      "default": 12,
      "description": "The height of the horizontal scrollbar.",
      "defaultDefaultValue": 12,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.scrollByPage": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether clicks scroll by page or jump to click position.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.ignoreHorizontalScrollbarInContentHeight": {
      "type": "boolean",
      "default": false,
      "description": "When set, the horizontal scrollbar will not increase the size of the editor's content.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollBeyondLastColumn": {
      "description": "Controls the number of extra characters beyond which the editor will scroll horizontally.",
      "type": "integer",
      "default": 4,
      "minimum": 0,
      "maximum": 1073741824,
      "defaultDefaultValue": 4,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollBeyondLastLine": {
      "description": "Controls whether the editor will scroll beyond the last line.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollPredominantAxis": {
      "description": "Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.selectionHighlight": {
      "description": "Controls whether the editor should highlight matches similar to the selection.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.showFoldingControls": {
      "enumDescriptions": [
        "Always show the folding controls.",
        "Never show the folding controls and reduce the gutter size.",
        "Only show the folding controls when the mouse is over the gutter."
      ],
      "description": "Controls when the folding controls on the gutter are shown.",
      "type": "string",
      "enum": [
        "always",
        "never",
        "mouseover"
      ],
      "default": "mouseover",
      "defaultDefaultValue": "mouseover",
      "scope": 5,
      "restricted": false
    },
    "editor.showUnused": {
      "description": "Controls fading out of unused code.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.snippetSuggestions": {
      "enumDescriptions": [
        "Show snippet suggestions on top of other suggestions.",
        "Show snippet suggestions below other suggestions.",
        "Show snippets suggestions with other suggestions.",
        "Do not show snippet suggestions."
      ],
      "description": "Controls whether snippets are shown with other suggestions and how they are sorted.",
      "type": "string",
      "enum": [
        "top",
        "bottom",
        "inline",
        "none"
      ],
      "default": "inline",
      "defaultDefaultValue": "inline",
      "scope": 5,
      "restricted": false
    },
    "editor.smartSelect.selectLeadingAndTrailingWhitespace": {
      "description": "Whether leading and trailing whitespace should always be selected.",
      "default": true,
      "type": "boolean",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.smartSelect.selectSubwords": {
      "description": "Whether subwords (like 'foo' in 'fooBar' or 'foo_bar') should be selected.",
      "default": true,
      "type": "boolean",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.smoothScrolling": {
      "description": "Controls whether the editor will scroll using an animation.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.stickyScroll.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Shows the nested current scopes during the scroll at the top of the editor.",
      "tags": [
        "experimental"
      ],
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.stickyScroll.maxLineCount": {
      "type": "number",
      "default": 5,
      "minimum": 1,
      "maximum": 20,
      "description": "Defines the maximum number of sticky lines to show.",
      "defaultDefaultValue": 5,
      "scope": 5,
      "restricted": false
    },
    "editor.stickyScroll.defaultModel": {
      "type": "string",
      "enum": [
        "outlineModel",
        "foldingProviderModel",
        "indentationModel"
      ],
      "default": "outlineModel",
      "description": "Defines the model to use for determining which lines to stick. If the outline model does not exist, it will fall back on the folding provider model which falls back on the indentation model. This order is respected in all three cases.",
      "defaultDefaultValue": "outlineModel",
      "scope": 5,
      "restricted": false
    },
    "editor.stickyScroll.scrollWithEditor": {
      "type": "boolean",
      "default": true,
      "description": "Enable scrolling of Sticky Scroll with the editor's horizontal scrollbar.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.stickyTabStops": {
      "description": "Emulate selection behavior of tab characters when using spaces for indentation. Selection will stick to tab stops.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.insertMode": {
      "type": "string",
      "enum": [
        "insert",
        "replace"
      ],
      "enumDescriptions": [
        "Insert suggestion without overwriting text right of the cursor.",
        "Insert suggestion and overwrite text right of the cursor."
      ],
      "default": "insert",
      "description": "Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.",
      "defaultDefaultValue": "insert",
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.filterGraceful": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether filtering and sorting suggestions accounts for small typos.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.localityBonus": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether sorting favors words that appear close to the cursor.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.shareSuggestSelections": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.selectionMode": {
      "type": "string",
      "enum": [
        "always",
        "never",
        "whenTriggerCharacter",
        "whenQuickSuggestion"
      ],
      "enumDescriptions": [
        "Always select a suggestion when automatically triggering IntelliSense.",
        "Never select a suggestion when automatically triggering IntelliSense.",
        "Select a suggestion only when triggering IntelliSense from a trigger character.",
        "Select a suggestion only when triggering IntelliSense as you type."
      ],
      "default": "always",
      "markdownDescription": "Controls whether a suggestion is selected when the widget shows. Note that this only applies to automatically triggered suggestions (`#editor.quickSuggestions#` and `#editor.suggestOnTriggerCharacters#`) and that a suggestion is always selected when explicitly invoked, e.g via `Ctrl+Space`.",
      "defaultDefaultValue": "always",
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.snippetsPreventQuickSuggestions": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether an active snippet prevents quick suggestions.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showIcons": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to show or hide icons in suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showStatusBar": {
      "type": "boolean",
      "default": false,
      "description": "Controls the visibility of the status bar at the bottom of the suggest widget.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.preview": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether to preview the suggestion outcome in the editor.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showInlineDetails": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether suggest details show inline with the label or only in the details widget.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.maxVisibleSuggestions": {
      "type": "number",
      "deprecationMessage": "This setting is deprecated. The suggest widget can now be resized.",
      "default": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.filteredTypes": {
      "type": "object",
      "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.",
      "default": {},
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showMethods": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `method`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showFunctions": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `function`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showConstructors": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `constructor`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showDeprecated": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `deprecated`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.matchOnWordStartOnly": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense filtering requires that the first character matches on a word start. For example, `c` on `Console` or `WebContext` but _not_ on `description`. When disabled IntelliSense will show more results but still sorts them by match quality.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showFields": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `field`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showVariables": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `variable`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showClasses": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `class`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showStructs": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `struct`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showInterfaces": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `interface`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showModules": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `module`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showProperties": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `property`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showEvents": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `event`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showOperators": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `operator`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showUnits": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `unit`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showValues": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `value`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showConstants": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `constant`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showEnums": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `enum`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showEnumMembers": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `enumMember`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showKeywords": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `keyword`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showWords": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `text`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showColors": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `color`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showFiles": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `file`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showReferences": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `reference`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showCustomcolors": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `customcolor`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showFolders": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `folder`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showTypeParameters": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `typeParameter`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showSnippets": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `snippet`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showUsers": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `user`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showIssues": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `issues`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggestFontSize": {
      "markdownDescription": "Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.",
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 1000,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.suggestLineHeight": {
      "markdownDescription": "Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used. The minimum value is 8.",
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 1000,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.suggestOnTriggerCharacters": {
      "description": "Controls whether suggestions should automatically show up when typing trigger characters.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggestSelection": {
      "markdownEnumDescriptions": [
        "Always select the first suggestion.",
        "Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.",
        "Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`."
      ],
      "description": "Controls how suggestions are pre-selected when showing the suggest list.",
      "type": "string",
      "enum": [
        "first",
        "recentlyUsed",
        "recentlyUsedByPrefix"
      ],
      "default": "first",
      "defaultDefaultValue": "first",
      "scope": 5,
      "restricted": false
    },
    "editor.tabCompletion": {
      "enumDescriptions": [
        "Tab complete will insert the best matching suggestion when pressing tab.",
        "Disable tab completions.",
        "Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled."
      ],
      "description": "Enables tab completions.",
      "type": "string",
      "enum": [
        "on",
        "off",
        "onlySnippets"
      ],
      "default": "off",
      "defaultDefaultValue": "off",
      "scope": 5,
      "restricted": false
    },
    "editor.unicodeHighlight.nonBasicASCII": {
      "restricted": true,
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "inUntrustedWorkspace"
      ],
      "default": "inUntrustedWorkspace",
      "description": "Controls whether all non-basic ASCII characters are highlighted. Only characters between U+0020 and U+007E, tab, line-feed and carriage-return are considered basic ASCII.",
      "defaultDefaultValue": "inUntrustedWorkspace",
      "scope": 5
    },
    "editor.unicodeHighlight.invisibleCharacters": {
      "restricted": true,
      "type": "boolean",
      "default": true,
      "description": "Controls whether characters that just reserve space or have no width at all are highlighted.",
      "defaultDefaultValue": true,
      "scope": 5
    },
    "editor.unicodeHighlight.ambiguousCharacters": {
      "restricted": true,
      "type": "boolean",
      "default": true,
      "description": "Controls whether characters are highlighted that can be confused with basic ASCII characters, except those that are common in the current user locale.",
      "defaultDefaultValue": true,
      "scope": 5
    },
    "editor.unicodeHighlight.includeComments": {
      "restricted": true,
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "inUntrustedWorkspace"
      ],
      "default": "inUntrustedWorkspace",
      "description": "Controls whether characters in comments should also be subject to Unicode highlighting.",
      "defaultDefaultValue": "inUntrustedWorkspace",
      "scope": 5
    },
    "editor.unicodeHighlight.includeStrings": {
      "restricted": true,
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "inUntrustedWorkspace"
      ],
      "default": true,
      "description": "Controls whether characters in strings should also be subject to Unicode highlighting.",
      "defaultDefaultValue": true,
      "scope": 5
    },
    "editor.unicodeHighlight.allowedCharacters": {
      "restricted": true,
      "type": "object",
      "default": {},
      "description": "Defines allowed characters that are not being highlighted.",
      "additionalProperties": {
        "type": "boolean"
      },
      "defaultDefaultValue": {},
      "scope": 5
    },
    "editor.unicodeHighlight.allowedLocales": {
      "restricted": true,
      "type": "object",
      "additionalProperties": {
        "type": "boolean"
      },
      "default": {
        "_os": true,
        "_vscode": true
      },
      "description": "Unicode characters that are common in allowed locales are not being highlighted.",
      "defaultDefaultValue": {
        "_os": true,
        "_vscode": true
      },
      "scope": 5
    },
    "editor.unusualLineTerminators": {
      "enumDescriptions": [
        "Unusual line terminators are automatically removed.",
        "Unusual line terminators are ignored.",
        "Unusual line terminators prompt to be removed."
      ],
      "description": "Remove unusual line terminators that might cause problems.",
      "type": "string",
      "enum": [
        "auto",
        "off",
        "prompt"
      ],
      "default": "prompt",
      "defaultDefaultValue": "prompt",
      "scope": 5,
      "restricted": false
    },
    "editor.useTabStops": {
      "description": "Spaces and tabs are inserted and deleted in alignment with tab stops.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.wordBreak": {
      "markdownEnumDescriptions": [
        "Use the default line break rule.",
        "Word breaks should not be used for Chinese/Japanese/Korean (CJK) text. Non-CJK text behavior is the same as for normal."
      ],
      "description": "Controls the word break rules used for Chinese/Japanese/Korean (CJK) text.",
      "type": "string",
      "enum": [
        "normal",
        "keepAll"
      ],
      "default": "normal",
      "defaultDefaultValue": "normal",
      "scope": 5,
      "restricted": false
    },
    "editor.wordSegmenterLocales": {
      "anyOf": [
        {
          "description": "Locales to be used for word segmentation when doing word related navigations or operations. Specify the BCP 47 language tag of the word you wish to recognize (e.g., ja, zh-CN, zh-Hant-TW, etc.).",
          "type": "string"
        },
        {
          "description": "Locales to be used for word segmentation when doing word related navigations or operations. Specify the BCP 47 language tag of the word you wish to recognize (e.g., ja, zh-CN, zh-Hant-TW, etc.).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ],
      "default": null,
      "scope": 5,
      "restricted": false
    },
    "editor.wordSeparators": {
      "description": "Characters that will be used as word separators when doing word related navigations or operations.",
      "type": "string",
      "default": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
      "defaultDefaultValue": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
      "scope": 5,
      "restricted": false
    },
    "editor.wordWrap": {
      "markdownEnumDescriptions": [
        "Lines will never wrap.",
        "Lines will wrap at the viewport width.",
        "Lines will wrap at `#editor.wordWrapColumn#`.",
        "Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`."
      ],
      "description": "Controls how lines should wrap.",
      "type": "string",
      "enum": [
        "off",
        "on",
        "wordWrapColumn",
        "bounded"
      ],
      "default": "off",
      "defaultDefaultValue": "off",
      "scope": 5,
      "restricted": false
    },
    "editor.wordWrapColumn": {
      "markdownDescription": "Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.",
      "type": "integer",
      "default": 80,
      "minimum": 1,
      "maximum": 1073741824,
      "defaultDefaultValue": 80,
      "scope": 5,
      "restricted": false
    },
    "editor.wrappingIndent": {
      "type": "string",
      "enum": [
        "none",
        "same",
        "indent",
        "deepIndent"
      ],
      "enumDescriptions": [
        "No indentation. Wrapped lines begin at column 1.",
        "Wrapped lines get the same indentation as the parent.",
        "Wrapped lines get +1 indentation toward the parent.",
        "Wrapped lines get +2 indentation toward the parent."
      ],
      "description": "Controls the indentation of wrapped lines.",
      "default": "same",
      "defaultDefaultValue": "same",
      "scope": 5,
      "restricted": false
    },
    "editor.wrappingStrategy": {
      "enumDescriptions": [
        "Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.",
        "Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases."
      ],
      "type": "string",
      "enum": [
        "simple",
        "advanced"
      ],
      "default": "simple",
      "description": "Controls the algorithm that computes wrapping points. Note that when in accessibility mode, advanced will be used for the best experience.",
      "defaultDefaultValue": "simple",
      "scope": 5,
      "restricted": false
    },
    "editor.showDeprecated": {
      "description": "Controls strikethrough deprecated variables.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.inlayHints.enabled": {
      "type": "string",
      "default": "on",
      "description": "Enables the inlay hints in the editor.",
      "enum": [
        "on",
        "onUnlessPressed",
        "offUnlessPressed",
        "off"
      ],
      "markdownEnumDescriptions": [
        "Inlay hints are enabled",
        "Inlay hints are showing by default and hide when holding Ctrl+Alt",
        "Inlay hints are hidden by default and show when holding Ctrl+Alt",
        "Inlay hints are disabled"
      ],
      "defaultDefaultValue": "on",
      "scope": 5,
      "restricted": false
    },
    "editor.inlayHints.fontSize": {
      "type": "number",
      "default": 0,
      "markdownDescription": "Controls font size of inlay hints in the editor. As default the `#editor.fontSize#` is used when the configured value is less than `5` or greater than the editor font size.",
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.inlayHints.fontFamily": {
      "type": "string",
      "default": "",
      "markdownDescription": "Controls font family of inlay hints in the editor. When set to empty, the `#editor.fontFamily#` is used.",
      "defaultDefaultValue": "",
      "scope": 5,
      "restricted": false
    },
    "editor.inlayHints.padding": {
      "type": "boolean",
      "default": false,
      "description": "Enables the padding around the inlay hints in the editor.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.tabFocusMode": {
      "markdownDescription": "Controls whether the editor receives tabs or defers them to the workbench for navigation.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.defaultColorDecorators": {
      "markdownDescription": "Controls whether inline color decorations should be shown using the default document color provider",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.colorDecoratorsActivatedOn": {
      "enumDescriptions": [
        "Make the color picker appear both on click and hover of the color decorator",
        "Make the color picker appear on hover of the color decorator",
        "Make the color picker appear on click of the color decorator"
      ],
      "description": "Controls the condition to make a color picker appear from a color decorator",
      "type": "string",
      "enum": [
        "clickAndHover",
        "hover",
        "click"
      ],
      "default": "clickAndHover",
      "defaultDefaultValue": "clickAndHover",
      "scope": 5,
      "restricted": false
    },
    "editor.inlineCompletionsAccessibilityVerbose": {
      "description": "Controls whether the accessibility hint should be provided to screen reader users when an inline completion is shown.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.rename.enablePreview": {
      "scope": 5,
      "description": "Enable/disable the ability to preview changes before renaming",
      "default": true,
      "type": "boolean",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "editor.codeActionWidget.showHeaders": {
      "type": "boolean",
      "scope": 5,
      "description": "Enable/disable showing group headers in the Code Action menu.",
      "default": true,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "editor.codeActionWidget.includeNearbyQuickFixes": {
      "type": "boolean",
      "scope": 5,
      "description": "Enable/disable showing nearest Quick Fix within a line when not currently on a diagnostic.",
      "default": true,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "editor.experimental.dropIntoEditor.defaultProvider": {
      "type": "object",
      "scope": 5,
      "description": "Configures the default drop provider to use for content of a given mime type.",
      "default": {},
      "additionalProperties": {
        "type": "string"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "breadcrumbs.symbolSortOrder": {
      "description": "Controls how symbols are sorted in the breadcrumbs outline view.",
      "type": "string",
      "default": "position",
      "scope": 5,
      "enum": [
        "position",
        "name",
        "type"
      ],
      "enumDescriptions": [
        "Show symbol outline in file position order.",
        "Show symbol outline in alphabetical order.",
        "Show symbol outline in symbol type order."
      ],
      "defaultDefaultValue": "position",
      "restricted": false
    },
    "breadcrumbs.showFiles": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `file`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showModules": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `module`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showNamespaces": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `namespace`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showPackages": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `package`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showClasses": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `class`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showMethods": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `method`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showProperties": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `property`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showFields": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `field`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showConstructors": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `constructor`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showEnums": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `enum`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showInterfaces": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `interface`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showFunctions": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `function`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showVariables": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `variable`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showConstants": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `constant`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showStrings": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `string`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showNumbers": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `number`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showBooleans": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `boolean`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showArrays": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `array`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showObjects": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `object`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showKeys": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `key`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showNull": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `null`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showEnumMembers": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `enumMember`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showStructs": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `struct`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showEvents": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `event`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showOperators": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `operator`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showTypeParameters": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `typeParameter`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "editor.codeActionsOnSave": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "source.fixAll": {
              "type": "string",
              "enum": [
                "always",
                "explicit",
                "never",
                true,
                false
              ],
              "enumDescriptions": [
                "Triggers Code Actions on explicit saves and auto saves triggered by window or focus changes.",
                "Triggers Code Actions only when explicitly saved",
                "Never triggers Code Actions on save",
                "Triggers Code Actions only when explicitly saved. This value will be deprecated in favor of \"explicit\".",
                "Never triggers Code Actions on save. This value will be deprecated in favor of \"never\"."
              ],
              "default": "explicit",
              "description": "Controls whether auto fix action should be run on file save."
            }
          },
          "additionalProperties": {
            "type": "string"
          }
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ],
      "markdownDescription": "Run Code Actions for the editor on save. Code Actions must be specified and the editor must not be shutting down. Example: `\"source.organizeImports\": \"explicit\" `",
      "type": [
        "object",
        "array"
      ],
      "additionalProperties": {
        "type": "string",
        "enum": [
          "always",
          "explicit",
          "never",
          true,
          false
        ]
      },
      "default": {},
      "scope": 5,
      "defaultDefaultValue": {},
      "restricted": false,
      "properties": {
        "source.fixAll": {
          "type": "string",
          "enum": [
            "always",
            "explicit",
            "never",
            true,
            false
          ],
          "enumDescriptions": [
            "Triggers Code Actions on explicit saves and auto saves triggered by window or focus changes.",
            "Triggers Code Actions only when explicitly saved",
            "Never triggers Code Actions on save",
            "Triggers Code Actions only when explicitly saved. This value will be deprecated in favor of \"explicit\".",
            "Never triggers Code Actions on save. This value will be deprecated in favor of \"never\"."
          ],
          "default": "explicit",
          "description": "Controls whether auto fix action should be run on file save."
        },
        "source.organizeImports": {
          "type": "string",
          "enum": [
            "always",
            "explicit",
            "never",
            true,
            false
          ],
          "enumDescriptions": [
            "Triggers Code Actions on explicit saves and auto saves triggered by window or focus changes.",
            "Triggers Code Actions only when explicitly saved",
            "Never triggers Code Actions on save",
            "Triggers Code Actions only when explicitly saved. This value will be deprecated in favor of \"explicit\".",
            "Never triggers Code Actions on save. This value will be deprecated in favor of \"never\"."
          ],
          "default": "explicit",
          "description": "Controls whether 'Organize Imports' actions should be run on file save."
        }
      }
    },
    "editor.defaultFoldingRangeProvider": {
      "description": "Defines a default folding range provider that takes precedence over all other folding range providers. Must be the identifier of an extension contributing a folding range provider.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "enum": [
        null,
        "obenjiro.arrr",
        "formulahendry.auto-close-tag",
        "formulahendry.auto-rename-tag",
        "serayuzgur.crates",
        "vscode.css-language-features",
        "vscode.html-language-features",
        "redhat.java",
        "vscode.json-language-features",
        "vscode.markdown-language-features",
        "vscode.markdown-math",
        "Angular.ng-template",
        "vscode.php-language-features",
        "ms-python.python",
        "ms-vscode-remote.remote-ssh-edit",
        "rust-lang.rust-analyzer",
        "rbbit.typescript-hero",
        "vscode.typescript-language-features",
        "KevinRose.vsc-python-indent",
        "alexiv.vscode-angular2-files",
        "dbaeumer.vscode-eslint",
        "vscjava.vscode-java-debug",
        "vscjava.vscode-java-pack",
        "vscjava.vscode-maven",
        "ms-python.vscode-pylance",
        "styled-components.vscode-styled-components",
        "segerdekort.angular-cli",
        "john-crowson.angular-file-changer",
        "cyrilletuzi.angular-schematics",
        "infinity1207.angular2-switcher",
        "steoates.autoimport",
        "vscode.configuration-editing",
        "vscode.debug-auto-launch",
        "vscode.debug-server-ready",
        "ms-python.debugpy",
        "EditorConfig.EditorConfig",
        "vscode.emmet",
        "dsznajder.es7-react-js-snippets",
        "vscode.extension-editing",
        "vscode.git",
        "vscode.git-base",
        "vscode.github",
        "vscode.github-authentication",
        "vscode.grunt",
        "vscode.gulp",
        "oderwat.indent-rainbow",
        "VisualStudioExptTeam.intellicode-api-usage-examples",
        "vscode.ipynb",
        "vscode.jake",
        "chamboug.js-auto-backticks",
        "ms-vscode.js-debug",
        "ms-vscode.js-debug-companion",
        "PKief.material-icon-theme",
        "vscode.media-preview",
        "vscode.merge-conflict",
        "vscode.microsoft-authentication",
        "stringham.move-ts",
        "vscode.npm",
        "christian-kohler.path-intellisense",
        "esbenp.prettier-vscode",
        "quicktype.quicktype",
        "vscode.references-view",
        "ms-vscode-remote.remote-containers",
        "ms-vscode.remote-explorer",
        "ms-vscode.remote-server",
        "ms-vscode-remote.remote-ssh",
        "ms-vscode-remote.remote-wsl",
        "vscode.search-result",
        "SimonTest.simontest",
        "vscode.simple-browser",
        "vscode.tunnel-forwarding",
        "kisstkondoros.vscode-gutter-preview",
        "vscjava.vscode-java-dependency",
        "vscjava.vscode-java-test",
        "ms-vscode.vscode-js-profile-table",
        "bradlc.vscode-tailwindcss",
        "wayou.vscode-todo-highlight",
        "gamunu.vscode-yarn",
        "VisualStudioExptTeam.vscodeintellicode"
      ],
      "enumItemLabels": [
        "All",
        "arrr",
        "Auto Close Tag",
        "Auto Rename Tag",
        "crates",
        "CSS Language Features",
        "HTML Language Features",
        "Language Support for Java(TM) by Red Hat",
        "JSON Language Features",
        "Markdown Language Features",
        "Markdown Math",
        "Angular Language Service",
        "PHP Language Features",
        "Python",
        "Remote - SSH: Editing Configuration Files",
        "rust-analyzer",
        "TypeScript Hero",
        "TypeScript and JavaScript Language Features",
        "Python Indent",
        "Angular Files",
        "ESLint",
        "Debugger for Java",
        "Extension Pack for Java",
        "Maven for Java",
        "Pylance",
        "vscode-styled-components",
        "Angular-cli",
        "Angular File Changer (Supporting Touch Bar and NgRx)",
        "Angular Schematics",
        "angular2-switcher",
        "Auto Import",
        "Configuration Editing",
        "Node Debug Auto-attach",
        "Server Ready Action",
        "Python Debugger",
        "EditorConfig for VS Code",
        "Emmet",
        "ES7+ React/Redux/React-Native snippets",
        "Extension Authoring",
        "Git",
        "Git Base",
        "GitHub",
        "GitHub Authentication",
        "Grunt support for VS Code",
        "Gulp support for VSCode",
        "",
        "IntelliCode API Usage Examples",
        ".ipynb Support",
        "Jake support for VS Code",
        "Javascript Auto Backticks",
        "JavaScript Debugger",
        "JavaScript Debugger Companion Extension",
        "Material Icon Theme",
        "Media Preview",
        "Merge Conflict",
        "Microsoft Account",
        "Move TS - Move TypeScript files and update relative imports",
        "NPM support for VS Code",
        "Path Intellisense",
        "Prettier - Code formatter",
        "Paste JSON as Code",
        "Reference Search View",
        "Dev Containers",
        "Remote Explorer",
        "Remote - Tunnels",
        "Remote - SSH",
        "WSL",
        "Search Result",
        "SimonTest",
        "Simple Browser",
        "Local Tunnel Port Forwarding",
        "Image preview",
        "Project Manager for Java",
        "Test Runner for Java",
        "Table Visualizer for JavaScript Profiles",
        "Tailwind CSS IntelliSense",
        "TODO Highlight",
        "yarn",
        "IntelliCode"
      ],
      "markdownEnumDescriptions": [
        "All active folding range providers",
        "The extension provides refactoring tools for your Angular codebase",
        "Automatically add HTML/XML close tag, same as Visual Studio IDE or Sublime Text",
        "Auto rename paired HTML/XML tag",
        "Helps Rust developers managing dependencies with Cargo.toml.",
        "Provides rich language support for CSS, LESS and SCSS files.",
        "Provides rich language support for HTML and Handlebar files",
        "Java Linting, Intellisense, formatting, refactoring, Maven/Gradle support and more...",
        "Provides rich language support for JSON files.",
        "Provides rich language support for Markdown.",
        "Adds math support to Markdown in notebooks.",
        "Editor services for Angular templates",
        "Provides rich language support for PHP files.",
        "Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactoring, unit tests, and more.",
        "Edit SSH configuration files",
        "Rust language support for Visual Studio Code",
        "Additional toolings for typescript",
        "Provides rich language support for JavaScript and TypeScript.",
        "Correct Python indentation",
        "Quickly scaffold angular file templates",
        "Integrates ESLint JavaScript into VS Code.",
        "A lightweight Java debugger for Visual Studio Code",
        "Popular extensions for Java development that provides Java IntelliSense, debugging, testing, Maven/Gradle support, project management and more",
        "Manage Maven projects, execute goals, generate project from archetype, improve user experience for Java developers.",
        "A performant, feature-rich language server for Python in VS Code",
        "Syntax highlighting for styled-components",
        "This extension eases the use of the Angular cli in Visual Studio Code",
        "Easily navigate between typescript, template, style, and associated test files in your Angular project using the Mac Touch Bar.",
        "Ultimate Angular code generation in Visual Studio Code.",
        "Easily navigate to `typescript`|`template`|`style` in angular2 project.",
        "Automatically finds, parses and provides code actions and code completion for all available imports. Works with Typescript and TSX",
        "Provides capabilities (advanced IntelliSense, auto-fixing) in configuration files like settings, launch, and extension recommendation files.",
        "Helper for auto-attach feature when node-debug extensions are not active.",
        "Open URI in browser if server under debugging is ready.",
        "Python Debugger extension using debugpy.",
        "EditorConfig Support for Visual Studio Code",
        "Emmet support for VS Code",
        "Extensions for React, React-Native and Redux in JS/TS with ES7+ syntax. Customizable. Built-in integration with prettier.",
        "Provides linting capabilities for authoring extensions.",
        "Git SCM Integration",
        "Git static contributions and pickers.",
        "GitHub features for VS Code",
        "GitHub Authentication Provider",
        "Extension to add Grunt capabilities to VS Code.",
        "Extension to add Gulp capabilities to VSCode.",
        "Makes indentation easier to read",
        "See relevant code examples from GitHub for over 100K different APIs right in your editor.",
        "Provides basic support for opening and reading Jupyter's .ipynb notebook files",
        "Extension to add Jake capabilities to VS Code.",
        "Automatically converts single or double quotes to backticks when needed.",
        "An extension for debugging Node.js programs and Chrome.",
        "Companion extension to js-debug that provides capability for remote debugging",
        "Material Design Icons for Visual Studio Code",
        "Provides VS Code's built-in previews for images, audio, and video",
        "Highlighting and commands for inline merge conflicts.",
        "Microsoft authentication provider",
        "extension for moving typescript files and folders and updating relative imports in your workspace",
        "Extension to add task support for npm scripts.",
        "Visual Studio Code plugin that autocompletes filenames",
        "Code formatter using prettier",
        "Copy JSON, paste as Go, TypeScript, C#, C++ and more.",
        "Reference Search results as separate, stable view in the sidebar",
        "Open any folder or repository inside a Docker container and take advantage of Visual Studio Code's full feature set.",
        "View remote machines for SSH and Tunnels.",
        "Connect to a remote machine through a Tunnel",
        "Open any folder on a remote machine using SSH and take advantage of VS Code's full feature set.",
        "Open any folder in the Windows Subsystem for Linux (WSL) and take advantage of Visual Studio Code's full feature set.",
        "Provides syntax highlighting and language features for tabbed search results.",
        "Analyzes your Angular code and generates tests.",
        "A very basic built-in webview for displaying web content.",
        "Allows forwarding local ports to be accessible over the internet.",
        "Shows image preview in the gutter and on hover",
        "Manage Java projects in Visual Studio Code",
        "Run and debug JUnit or TestNG test cases.",
        "Text visualizer for profiles taken from the JavaScript debugger",
        "Intelligent Tailwind CSS tooling for VS Code",
        "highlight TODOs, FIXMEs, and any keywords, annotations...",
        "Yarn commands for VSCode",
        "AI-assisted development"
      ],
      "defaultDefaultValue": null,
      "scope": 5,
      "restricted": false
    },
    "editor.defaultFormatter": {
      "description": "Defines a default formatter which takes precedence over all other formatter settings. Must be the identifier of an extension contributing a formatter.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "enum": [
        null,
        "obenjiro.arrr",
        "formulahendry.auto-close-tag",
        "formulahendry.auto-rename-tag",
        "serayuzgur.crates",
        "vscode.css-language-features",
        "vscode.html-language-features",
        "redhat.java",
        "vscode.json-language-features",
        "vscode.markdown-language-features",
        "vscode.markdown-math",
        "Angular.ng-template",
        "vscode.php-language-features",
        "esbenp.prettier-vscode",
        "ms-python.python",
        "ms-vscode-remote.remote-ssh-edit",
        "rust-lang.rust-analyzer",
        "rbbit.typescript-hero",
        "vscode.typescript-language-features",
        "KevinRose.vsc-python-indent",
        "alexiv.vscode-angular2-files",
        "dbaeumer.vscode-eslint",
        "vscjava.vscode-java-debug",
        "vscjava.vscode-java-pack",
        "vscjava.vscode-maven",
        "ms-python.vscode-pylance",
        "styled-components.vscode-styled-components",
        "segerdekort.angular-cli",
        "john-crowson.angular-file-changer",
        "cyrilletuzi.angular-schematics",
        "infinity1207.angular2-switcher",
        "steoates.autoimport",
        "vscode.configuration-editing",
        "vscode.debug-auto-launch",
        "vscode.debug-server-ready",
        "ms-python.debugpy",
        "EditorConfig.EditorConfig",
        "vscode.emmet",
        "dsznajder.es7-react-js-snippets",
        "vscode.extension-editing",
        "vscode.git",
        "vscode.git-base",
        "vscode.github",
        "vscode.github-authentication",
        "vscode.grunt",
        "vscode.gulp",
        "oderwat.indent-rainbow",
        "VisualStudioExptTeam.intellicode-api-usage-examples",
        "vscode.ipynb",
        "vscode.jake",
        "chamboug.js-auto-backticks",
        "ms-vscode.js-debug",
        "ms-vscode.js-debug-companion",
        "PKief.material-icon-theme",
        "vscode.media-preview",
        "vscode.merge-conflict",
        "vscode.microsoft-authentication",
        "stringham.move-ts",
        "vscode.npm",
        "christian-kohler.path-intellisense",
        "quicktype.quicktype",
        "vscode.references-view",
        "ms-vscode-remote.remote-containers",
        "ms-vscode.remote-explorer",
        "ms-vscode.remote-server",
        "ms-vscode-remote.remote-ssh",
        "ms-vscode-remote.remote-wsl",
        "vscode.search-result",
        "SimonTest.simontest",
        "vscode.simple-browser",
        "vscode.tunnel-forwarding",
        "kisstkondoros.vscode-gutter-preview",
        "vscjava.vscode-java-dependency",
        "vscjava.vscode-java-test",
        "ms-vscode.vscode-js-profile-table",
        "bradlc.vscode-tailwindcss",
        "wayou.vscode-todo-highlight",
        "gamunu.vscode-yarn",
        "VisualStudioExptTeam.vscodeintellicode"
      ],
      "enumItemLabels": [
        "None",
        "arrr",
        "Auto Close Tag",
        "Auto Rename Tag",
        "crates",
        "CSS Language Features",
        "HTML Language Features",
        "Language Support for Java(TM) by Red Hat",
        "JSON Language Features",
        "Markdown Language Features",
        "Markdown Math",
        "Angular Language Service",
        "PHP Language Features",
        "Prettier - Code formatter",
        "Python",
        "Remote - SSH: Editing Configuration Files",
        "rust-analyzer",
        "TypeScript Hero",
        "TypeScript and JavaScript Language Features",
        "Python Indent",
        "Angular Files",
        "ESLint",
        "Debugger for Java",
        "Extension Pack for Java",
        "Maven for Java",
        "Pylance",
        "vscode-styled-components",
        "Angular-cli",
        "Angular File Changer (Supporting Touch Bar and NgRx)",
        "Angular Schematics",
        "angular2-switcher",
        "Auto Import",
        "Configuration Editing",
        "Node Debug Auto-attach",
        "Server Ready Action",
        "Python Debugger",
        "EditorConfig for VS Code",
        "Emmet",
        "ES7+ React/Redux/React-Native snippets",
        "Extension Authoring",
        "Git",
        "Git Base",
        "GitHub",
        "GitHub Authentication",
        "Grunt support for VS Code",
        "Gulp support for VSCode",
        "",
        "IntelliCode API Usage Examples",
        ".ipynb Support",
        "Jake support for VS Code",
        "Javascript Auto Backticks",
        "JavaScript Debugger",
        "JavaScript Debugger Companion Extension",
        "Material Icon Theme",
        "Media Preview",
        "Merge Conflict",
        "Microsoft Account",
        "Move TS - Move TypeScript files and update relative imports",
        "NPM support for VS Code",
        "Path Intellisense",
        "Paste JSON as Code",
        "Reference Search View",
        "Dev Containers",
        "Remote Explorer",
        "Remote - Tunnels",
        "Remote - SSH",
        "WSL",
        "Search Result",
        "SimonTest",
        "Simple Browser",
        "Local Tunnel Port Forwarding",
        "Image preview",
        "Project Manager for Java",
        "Test Runner for Java",
        "Table Visualizer for JavaScript Profiles",
        "Tailwind CSS IntelliSense",
        "TODO Highlight",
        "yarn",
        "IntelliCode"
      ],
      "markdownEnumDescriptions": [
        "None",
        "The extension provides refactoring tools for your Angular codebase",
        "Automatically add HTML/XML close tag, same as Visual Studio IDE or Sublime Text",
        "Auto rename paired HTML/XML tag",
        "Helps Rust developers managing dependencies with Cargo.toml.",
        "Provides rich language support for CSS, LESS and SCSS files.",
        "Provides rich language support for HTML and Handlebar files",
        "Java Linting, Intellisense, formatting, refactoring, Maven/Gradle support and more...",
        "Provides rich language support for JSON files.",
        "Provides rich language support for Markdown.",
        "Adds math support to Markdown in notebooks.",
        "Editor services for Angular templates",
        "Provides rich language support for PHP files.",
        "Code formatter using prettier",
        "Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactoring, unit tests, and more.",
        "Edit SSH configuration files",
        "Rust language support for Visual Studio Code",
        "Additional toolings for typescript",
        "Provides rich language support for JavaScript and TypeScript.",
        "Correct Python indentation",
        "Quickly scaffold angular file templates",
        "Integrates ESLint JavaScript into VS Code.",
        "A lightweight Java debugger for Visual Studio Code",
        "Popular extensions for Java development that provides Java IntelliSense, debugging, testing, Maven/Gradle support, project management and more",
        "Manage Maven projects, execute goals, generate project from archetype, improve user experience for Java developers.",
        "A performant, feature-rich language server for Python in VS Code",
        "Syntax highlighting for styled-components",
        "This extension eases the use of the Angular cli in Visual Studio Code",
        "Easily navigate between typescript, template, style, and associated test files in your Angular project using the Mac Touch Bar.",
        "Ultimate Angular code generation in Visual Studio Code.",
        "Easily navigate to `typescript`|`template`|`style` in angular2 project.",
        "Automatically finds, parses and provides code actions and code completion for all available imports. Works with Typescript and TSX",
        "Provides capabilities (advanced IntelliSense, auto-fixing) in configuration files like settings, launch, and extension recommendation files.",
        "Helper for auto-attach feature when node-debug extensions are not active.",
        "Open URI in browser if server under debugging is ready.",
        "Python Debugger extension using debugpy.",
        "EditorConfig Support for Visual Studio Code",
        "Emmet support for VS Code",
        "Extensions for React, React-Native and Redux in JS/TS with ES7+ syntax. Customizable. Built-in integration with prettier.",
        "Provides linting capabilities for authoring extensions.",
        "Git SCM Integration",
        "Git static contributions and pickers.",
        "GitHub features for VS Code",
        "GitHub Authentication Provider",
        "Extension to add Grunt capabilities to VS Code.",
        "Extension to add Gulp capabilities to VSCode.",
        "Makes indentation easier to read",
        "See relevant code examples from GitHub for over 100K different APIs right in your editor.",
        "Provides basic support for opening and reading Jupyter's .ipynb notebook files",
        "Extension to add Jake capabilities to VS Code.",
        "Automatically converts single or double quotes to backticks when needed.",
        "An extension for debugging Node.js programs and Chrome.",
        "Companion extension to js-debug that provides capability for remote debugging",
        "Material Design Icons for Visual Studio Code",
        "Provides VS Code's built-in previews for images, audio, and video",
        "Highlighting and commands for inline merge conflicts.",
        "Microsoft authentication provider",
        "extension for moving typescript files and folders and updating relative imports in your workspace",
        "Extension to add task support for npm scripts.",
        "Visual Studio Code plugin that autocompletes filenames",
        "Copy JSON, paste as Go, TypeScript, C#, C++ and more.",
        "Reference Search results as separate, stable view in the sidebar",
        "Open any folder or repository inside a Docker container and take advantage of Visual Studio Code's full feature set.",
        "View remote machines for SSH and Tunnels.",
        "Connect to a remote machine through a Tunnel",
        "Open any folder on a remote machine using SSH and take advantage of VS Code's full feature set.",
        "Open any folder in the Windows Subsystem for Linux (WSL) and take advantage of Visual Studio Code's full feature set.",
        "Provides syntax highlighting and language features for tabbed search results.",
        "Analyzes your Angular code and generates tests.",
        "A very basic built-in webview for displaying web content.",
        "Allows forwarding local ports to be accessible over the internet.",
        "Shows image preview in the gutter and on hover",
        "Manage Java projects in Visual Studio Code",
        "Run and debug JUnit or TestNG test cases.",
        "Text visualizer for profiles taken from the JavaScript debugger",
        "Intelligent Tailwind CSS tooling for VS Code",
        "highlight TODOs, FIXMEs, and any keywords, annotations...",
        "Yarn commands for VSCode",
        "AI-assisted development"
      ],
      "defaultDefaultValue": null,
      "scope": 5,
      "restricted": false
    },
    "editor.snippets.codeActions.enabled": {
      "description": "Controls if surround-with-snippets or file template snippets show as Code Actions.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "workbench.editor.languageDetection": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the language in a text editor is automatically detected unless the language has been explicitly set by the language picker. This can also be scoped by language so you can specify which languages you do not want to be switched off of. This is useful for languages like Markdown that often contain other languages that might trick language detection into thinking it's the embedded language and not Markdown.",
      "scope": 5,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "workbench.editor.restoreViewState": {
      "type": "boolean",
      "markdownDescription": "Restores the last editor view state (such as scroll position) when re-opening editors after they have been closed. Editor view state is stored per editor group and discarded when a group closes. Use the `#workbench.editor.sharedViewState#` setting to use the last known view state across all editor groups in case no previous view state was found for a editor group.",
      "default": true,
      "scope": 5,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "workbench.localHistory.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether local file history is enabled. When enabled, the file contents of an editor that is saved will be stored to a backup location to be able to restore or review the contents later. Changing this setting has no effect on existing local file history entries.",
      "scope": 4,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "workbench.localHistory.maxFileSize": {
      "type": "number",
      "default": 256,
      "minimum": 1,
      "description": "Controls the maximum size of a file (in KB) to be considered for local file history. Files that are larger will not be added to the local file history. Changing this setting has no effect on existing local file history entries.",
      "scope": 4,
      "defaultDefaultValue": 256,
      "restricted": false
    },
    "workbench.localHistory.maxFileEntries": {
      "type": "number",
      "default": 50,
      "minimum": 0,
      "description": "Controls the maximum number of local file history entries per file. When the number of local file history entries exceeds this number for a file, the oldest entries will be discarded.",
      "scope": 4,
      "defaultDefaultValue": 50,
      "restricted": false
    },
    "workbench.localHistory.exclude": {
      "type": "object",
      "patternProperties": {
        ".*": {
          "type": "boolean"
        }
      },
      "markdownDescription": "Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) for excluding files from the local file history. Glob patterns are always evaluated relative to the path of the workspace folder unless they are absolute paths. Changing this setting has no effect on existing local file history entries.",
      "scope": 4,
      "default": {},
      "restricted": false
    },
    "workbench.localHistory.mergeWindow": {
      "type": "number",
      "default": 10,
      "minimum": 1,
      "markdownDescription": "Configure an interval in seconds during which the last entry in local file history is replaced with the entry that is being added. This helps reduce the overall number of entries that are added, for example when auto save is enabled. This setting is only applied to entries that have the same source of origin. Changing this setting has no effect on existing local file history entries.",
      "scope": 4,
      "defaultDefaultValue": 10,
      "restricted": false
    },
    "accessibility.verbosity.terminal": {
      "description": "Provide information about how to access the terminal accessibility help menu when the terminal is focused.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "accessibility.verbosity.diffEditor": {
      "description": "Provide information about how to navigate changes in the diff editor when it is focused.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "accessibility.verbosity.panelChat": {
      "description": "Provide information about how to access the chat help menu when the chat input is focused.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "accessibility.verbosity.inlineChat": {
      "description": "Provide information about how to access the inline editor chat accessibility help menu and alert with hints that describe how to use the feature when the input is focused.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "accessibility.verbosity.inlineCompletions": {
      "description": "Provide information about how to access the inline completions hover and Accessible View.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "accessibility.verbosity.keybindingsEditor": {
      "description": "Provide information about how to change a keybinding in the keybindings editor when a row is focused.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "accessibility.verbosity.notebook": {
      "description": "Provide information about how to focus the cell container or inner editor when a notebook cell is focused.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "accessibility.verbosity.hover": {
      "description": "Provide information about how to open the hover in an Accessible View.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "accessibility.verbosity.notification": {
      "description": "Provide information about how to open the notification in an Accessible View.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "accessibility.verbosity.emptyEditorHint": {
      "description": "Provide information about relevant actions in an empty text editor.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "accessibility.verbosity.comments": {
      "description": "Provide information about actions that can be taken in the comment widget or in a file which contains comments.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "accessibility.verbosity.diffEditorActive": {
      "description": "Indicate when a diff editor becomes the active editor.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "accessibility.alert.save": {
      "markdownDescription": "Indicates when a file is saved. Also see `#audioCues.save#`.",
      "enum": [
        "userGesture",
        "always",
        "never"
      ],
      "default": "always",
      "enumDescriptions": [
        "Indicates when a file is saved via user gesture.",
        "Indicates whenever is a file is saved, including auto save.",
        "Never alerts."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": "always",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.clear": {
      "markdownDescription": "Indicates when a feature is cleared (for example, the terminal, Debug Console, or Output channel). Also see `#audioCues.clear#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.format": {
      "markdownDescription": "Indicates when a file or notebook cell is formatted. Also see `#audioCues.format#`.",
      "type": "string",
      "enum": [
        "userGesture",
        "always",
        "never"
      ],
      "default": "always",
      "enumDescriptions": [
        "Indicates when a file is formatted via user gesture.",
        "Indicates whenever is a file is formatted, including auto save, on cell execution, and more.",
        "Never alerts."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": "always",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.breakpoint": {
      "markdownDescription": "Indicates when the debugger breaks. Also see `#audioCues.onDebugBreak#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.error": {
      "markdownDescription": "Indicates when the active line has an error. Also see `#audioCues.lineHasError#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.warning": {
      "markdownDescription": "Indicates when the active line has a warning. Also see `#audioCues.lineHasWarning#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.foldedArea": {
      "markdownDescription": "Indicates when the active line has a folded area that can be unfolded. Also see `#audioCues.lineHasFoldedArea#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.terminalQuickFix": {
      "markdownDescription": "Indicates when there is an available terminal quick fix. Also see `#audioCues.terminalQuickFix#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.terminalBell": {
      "markdownDescription": "Indicates when the terminal bell is activated.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.terminalCommandFailed": {
      "markdownDescription": "Indicates when a terminal command fails (non-zero exit code). Also see `#audioCues.terminalCommandFailed#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.taskFailed": {
      "markdownDescription": "Indicates when a task fails (non-zero exit code). Also see `#audioCues.taskFailed#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.taskCompleted": {
      "markdownDescription": "Indicates when a task completes successfully (zero exit code). Also see `#audioCues.taskCompleted#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.chatRequestSent": {
      "markdownDescription": "Indicates when a chat request is sent. Also see `#audioCues.chatRequestSent#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.chatResponseProgress": {
      "markdownDescription": "Indicates when a chat response is pending. Also see `#audioCues.chatResponsePending#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.noInlayHints": {
      "markdownDescription": "Indicates when there are no inlay hints. Also see `#audioCues.noInlayHints#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.lineHasBreakpoint": {
      "markdownDescription": "Indicates when on a line with a breakpoint. Also see `#audioCues.lineHasBreakpoint#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.notebookCellCompleted": {
      "markdownDescription": "Indicates when a notebook cell completes successfully. Also see `#audioCues.notebookCellCompleted#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.notebookCellFailed": {
      "markdownDescription": "Indicates when a notebook cell fails. Also see `#audioCues.notebookCellFailed#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.alert.onDebugBreak": {
      "markdownDescription": "Indicates when the debugger breaks. Also see `#audioCues.onDebugBreak#`.",
      "type": "boolean",
      "default": true,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use the `signals` settings instead.",
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use the `signals` settings instead."
    },
    "accessibility.accessibleView.closeOnKeyPress": {
      "markdownDescription": "On keypress, close the Accessible View and focus the element from which it was invoked.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.sounds.volume": {
      "description": "The volume of the sounds in percent (0-100).",
      "type": "number",
      "minimum": 0,
      "maximum": 100,
      "default": 70,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": 70,
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.debouncePositionChanges": {
      "description": "Whether or not position changes should be debounced",
      "type": "boolean",
      "default": false,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": false,
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.lineHasBreakpoint": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal when the active line has a breakpoint.",
      "properties": {
        "sound": {
          "description": "Plays a sound when the active line has a breakpoint.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when the active line has a breakpoint.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.lineHasInlineSuggestion": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto"
      },
      "description": "Indicates when the active line has an inline suggestion.",
      "properties": {
        "sound": {
          "description": "Plays a sound when the active line has an inline suggestion.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "off",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.lineHasError": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Indicates when the active line has an error.",
      "properties": {
        "sound": {
          "description": "Plays a sound when the active line has an error.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when the active line has an error.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "off",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.lineHasFoldedArea": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Indicates when the active line has a folded area that can be unfolded.",
      "properties": {
        "sound": {
          "description": "Plays a sound when the active line has a folded area that can be unfolded.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "off",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when the active line has a folded area that can be unfolded.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.lineHasWarning": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal when the active line has a warning.",
      "properties": {
        "sound": {
          "description": "Plays a sound when the active line has a warning.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when the active line has a warning.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "off",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.positionHasError": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal when the active line has a warning.",
      "properties": {
        "sound": {
          "description": "Plays a sound when the active line has a warning.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when the active line has a warning.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "on",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.positionHasWarning": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal when the active line has a warning.",
      "properties": {
        "sound": {
          "description": "Plays a sound when the active line has a warning.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when the active line has a warning.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "on",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.onDebugBreak": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal when the debugger stopped on a breakpoint.",
      "properties": {
        "sound": {
          "description": "Plays a sound when the debugger stopped on a breakpoint.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when the debugger stopped on a breakpoint.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.noInlayHints": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal when trying to read a line with inlay hints that has no inlay hints.",
      "properties": {
        "sound": {
          "description": "Plays a sound when trying to read a line with inlay hints that has no inlay hints.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when trying to read a line with inlay hints that has no inlay hints.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.taskCompleted": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal when a task is completed.",
      "properties": {
        "sound": {
          "description": "Plays a sound when a task is completed.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when a task is completed.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.taskFailed": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal when a task fails (non-zero exit code).",
      "properties": {
        "sound": {
          "description": "Plays a sound when a task fails (non-zero exit code).",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when a task fails (non-zero exit code).",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.terminalCommandFailed": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal when a terminal command fails (non-zero exit code) or when a command with such an exit code is navigated to in the accessible view.",
      "properties": {
        "sound": {
          "description": "Plays a sound when a terminal command fails (non-zero exit code) or when a command with such an exit code is navigated to in the accessible view.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when a terminal command fails (non-zero exit code) or when a command with such an exit code is navigated to in the accessible view.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.terminalQuickFix": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal when terminal Quick Fixes are available.",
      "properties": {
        "sound": {
          "description": "Plays a sound when terminal Quick Fixes are available.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when terminal Quick Fixes are available.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.terminalBell": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal when the terminal bell is ringing.",
      "properties": {
        "sound": {
          "description": "Plays a sound when the terminal bell is ringing.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when the terminal bell is ringing.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.diffLineInserted": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto"
      },
      "description": "Indicates when the focus moves to an inserted line in Accessible Diff Viewer mode or to the next/previous change.",
      "properties": {
        "sound": {
          "description": "Plays a sound when the focus moves to an inserted line in Accessible Diff Viewer mode or to the next/previous change.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.diffLineModified": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto"
      },
      "description": "Indicates when the focus moves to an modified line in Accessible Diff Viewer mode or to the next/previous change.",
      "properties": {
        "sound": {
          "description": "Plays a sound when the focus moves to a modified line in Accessible Diff Viewer mode or to the next/previous change.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.diffLineDeleted": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto"
      },
      "description": "Indicates when the focus moves to an deleted line in Accessible Diff Viewer mode or to the next/previous change.",
      "properties": {
        "sound": {
          "description": "Plays a sound when the focus moves to an deleted line in Accessible Diff Viewer mode or to the next/previous change.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.notebookCellCompleted": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal when a notebook cell execution is successfully completed.",
      "properties": {
        "sound": {
          "description": "Plays a sound when a notebook cell execution is successfully completed.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when a notebook cell execution is successfully completed.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.notebookCellFailed": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal when a notebook cell execution fails.",
      "properties": {
        "sound": {
          "description": "Plays a sound when a notebook cell execution fails.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when a notebook cell execution fails.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.chatRequestSent": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal when a chat request is made.",
      "properties": {
        "sound": {
          "description": "Plays a sound when a chat request is made.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when a chat request is made.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.progress": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal on loop while progress is occurring.",
      "properties": {
        "sound": {
          "description": "Plays a sound on loop while progress is occurring.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Alerts on loop while progress is occurring.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.chatResponseReceived": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto"
      },
      "description": "Indicates when the response has been received.",
      "properties": {
        "sound": {
          "description": "Plays a sound on loop while the response has been received.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.voiceRecordingStarted": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "on"
      },
      "description": "Indicates when the voice recording has started.",
      "properties": {
        "sound": {
          "description": "Plays a sound when the voice recording has started.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "on"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.voiceRecordingStopped": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto"
      },
      "description": "Indicates when the voice recording has stopped.",
      "properties": {
        "sound": {
          "description": "Plays a sound when the voice recording has stopped.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "off",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.clear": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "default": {
        "sound": "auto",
        "announcement": "auto"
      },
      "description": "Plays a signal when a feature is cleared (for example, the terminal, Debug Console, or Output channel).",
      "properties": {
        "sound": {
          "description": "Plays a sound when a feature is cleared.",
          "type": "string",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable sound when a screen reader is attached.",
            "Enable sound.",
            "Disable sound."
          ],
          "tags": [
            "accessibility"
          ]
        },
        "announcement": {
          "description": "Indicates when a feature is cleared.",
          "type": "string",
          "enum": [
            "auto",
            "off"
          ],
          "default": "auto",
          "enumDescriptions": [
            "Enable announcement, will only play when in screen reader optimized mode.",
            "Disable announcement."
          ],
          "tags": [
            "accessibility"
          ]
        }
      },
      "defaultDefaultValue": {
        "sound": "auto",
        "announcement": "auto"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.save": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "markdownDescription": "Plays a signal when a file is saved.",
      "properties": {
        "sound": {
          "description": "Plays a sound when a file is saved.",
          "type": "string",
          "enum": [
            "userGesture",
            "always",
            "never"
          ],
          "default": "never",
          "enumDescriptions": [
            "Plays the audio cue when a user explicitly saves a file.",
            "Plays the audio cue whenever a file is saved, including auto save.",
            "Never plays the audio cue."
          ]
        },
        "announcement": {
          "description": "Indicates when a file is saved.",
          "type": "string",
          "enum": [
            "userGesture",
            "always",
            "never"
          ],
          "default": "never",
          "enumDescriptions": [
            "Announces when a user explicitly saves a file.",
            "Announces whenever a file is saved, including auto save.",
            "Never plays the audio cue."
          ]
        }
      },
      "default": {
        "sound": "never",
        "announcement": "never"
      },
      "defaultDefaultValue": {
        "sound": "never",
        "announcement": "never"
      },
      "scope": 4,
      "restricted": false
    },
    "accessibility.signals.format": {
      "type": "object",
      "tags": [
        "accessibility"
      ],
      "additionalProperties": false,
      "markdownDescription": "Plays a signal when a file or notebook is formatted.",
      "properties": {
        "sound": {
          "description": "Plays a sound when a file or notebook is formatted.",
          "type": "string",
          "enum": [
            "userGesture",
            "always",
            "never"
          ],
          "default": "never",
          "enumDescriptions": [
            "Plays the audio cue when a user explicitly formats a file.",
            "Plays the audio cue whenever a file is formatted, including if it is set to format on save, type, or, paste, or run of a cell.",
            "Never plays the audio cue."
          ]
        },
        "announcement": {
          "description": "Indicates when a file or notebook is formatted.",
          "type": "string",
          "enum": [
            "userGesture",
            "always",
            "never"
          ],
          "default": "never",
          "enumDescriptions": [
            "Announceswhen a user explicitly formats a file.",
            "Announces whenever a file is formatted, including if it is set to format on save, type, or, paste, or run of a cell.",
            "Never announces."
          ]
        }
      },
      "default": {
        "sound": "never",
        "announcement": "never"
      },
      "defaultDefaultValue": {
        "sound": "never",
        "announcement": "never"
      },
      "scope": 4,
      "restricted": false
    },
    "audioCues.enabled": {
      "markdownDeprecationMessage": "Deprecated. Use the specific setting for each audio cue instead (`audioCues.*`).",
      "tags": [
        "accessibility"
      ],
      "default": null,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "Deprecated. Use the specific setting for each audio cue instead (`audioCues.*`)."
    },
    "audioCues.volume": {
      "markdownDeprecationMessage": "Deprecated. Use `accessibility.signals.sounds.volume` instead.",
      "tags": [
        "accessibility"
      ],
      "default": null,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "Deprecated. Use `accessibility.signals.sounds.volume` instead."
    },
    "audioCues.debouncePositionChanges": {
      "description": "Whether or not position changes should be debounced",
      "type": "boolean",
      "default": false,
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated, instead use the `signals.debouncePositionChanges` setting.",
      "defaultDefaultValue": false,
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated, instead use the `signals.debouncePositionChanges` setting."
    },
    "audioCues.lineHasBreakpoint": {
      "description": "Plays a sound when the active line has a breakpoint.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.lineHasInlineSuggestion": {
      "description": "Plays a sound when the active line has an inline suggestion.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.lineHasError": {
      "description": "Plays a sound when the active line has an error.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.lineHasFoldedArea": {
      "description": "Plays a sound when the active line has a folded area that can be unfolded.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.lineHasWarning": {
      "description": "Plays a sound when the active line has a warning.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "off",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "off",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.onDebugBreak": {
      "description": "Plays a sound when the debugger stopped on a breakpoint.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.noInlayHints": {
      "description": "Plays a sound when trying to read a line with inlay hints that has no inlay hints.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.taskCompleted": {
      "description": "Plays a sound when a task is completed.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.taskFailed": {
      "description": "Plays a sound when a task fails (non-zero exit code).",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.terminalCommandFailed": {
      "description": "Plays a sound when a terminal command fails (non-zero exit code).",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.terminalQuickFix": {
      "description": "Plays a sound when terminal Quick Fixes are available.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.terminalBell": {
      "description": "Plays a sound when the terminal bell is ringing.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "on",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "on",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.diffLineInserted": {
      "description": "Plays a sound when the focus moves to an inserted line in Accessible Diff Viewer mode or to the next/previous change.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.diffLineDeleted": {
      "description": "Plays a sound when the focus moves to a deleted line in Accessible Diff Viewer mode or to the next/previous change.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.diffLineModified": {
      "description": "Plays a sound when the focus moves to a modified line in Accessible Diff Viewer mode or to the next/previous change.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.notebookCellCompleted": {
      "description": "Plays a sound when a notebook cell execution is successfully completed.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.notebookCellFailed": {
      "description": "Plays a sound when a notebook cell execution fails.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.chatRequestSent": {
      "description": "Plays a sound when a chat request is made.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "off",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "off",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.chatResponsePending": {
      "description": "Plays a sound on loop while the response is pending.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.chatResponseReceived": {
      "description": "Plays a sound on loop while the response has been received.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "off",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "off",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.clear": {
      "description": "Plays a sound when a feature is cleared (for example, the terminal, Debug Console, or Output channel). When this is disabled, an ARIA alert will announce 'Cleared'.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "off",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "off",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.save": {
      "markdownDescription": "Plays a sound when a file is saved. Also see `#accessibility.alert.save#`",
      "type": "string",
      "enum": [
        "userGesture",
        "always",
        "never"
      ],
      "default": "never",
      "enumDescriptions": [
        "Plays the audio cue when a user explicitly saves a file.",
        "Plays the audio cue whenever a file is saved, including auto save.",
        "Never plays the audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "never",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "audioCues.format": {
      "markdownDescription": "Plays a sound when a file or notebook is formatted. Also see `#accessibility.alert.format#`",
      "type": "string",
      "enum": [
        "userGesture",
        "always",
        "never"
      ],
      "default": "never",
      "enumDescriptions": [
        "Plays the audio cue when a user explicitly formats a file.",
        "Plays the audio cue whenever a file is formatted, including if it is set to format on save, type, or, paste, or run of a cell.",
        "Never plays the audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "markdownDeprecationMessage": "This setting is deprecated. Use `signals` settings instead.",
      "defaultDefaultValue": "never",
      "scope": 4,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated. Use `signals` settings instead."
    },
    "debug.saveBeforeStart": {
      "description": "Controls what editors to save before starting a debug session.",
      "enum": [
        "allEditorsInActiveGroup",
        "nonUntitledEditorsInActiveGroup",
        "none"
      ],
      "enumDescriptions": [
        "Save all editors in the active group before starting a debug session.",
        "Save all editors in the active group except untitled ones before starting a debug session.",
        "Don't save any editors before starting a debug session."
      ],
      "default": "allEditorsInActiveGroup",
      "scope": 5,
      "defaultDefaultValue": "allEditorsInActiveGroup",
      "restricted": false
    },
    "files.exclude": {
      "type": "object",
      "markdownDescription": "Configure [glob patterns](https://aka.ms/vscode-glob-patterns) for excluding files and folders. For example, the File Explorer decides which files and folders to show or hide based on this setting. Refer to the `#search.exclude#` setting to define search-specific excludes. Refer to the `#explorer.excludeGitIgnore#` setting for ignoring files based on your `.gitignore`.",
      "default": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true
      },
      "scope": 4,
      "additionalProperties": {
        "anyOf": [
          {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "enumDescriptions": [
              "Enable the pattern.",
              "Disable the pattern."
            ],
            "description": "The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."
          },
          {
            "type": "object",
            "properties": {
              "when": {
                "type": "string",
                "pattern": "\\w*\\$\\(basename\\)\\w*",
                "default": "$(basename).ext",
                "markdownDescription": "Additional check on the siblings of a matching file. Use \\$(basename) as variable for the matching file name."
              }
            }
          }
        ]
      },
      "defaultDefaultValue": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true
      },
      "restricted": false
    },
    "files.encoding": {
      "type": "string",
      "enum": [
        "utf8",
        "utf8bom",
        "utf16le",
        "utf16be",
        "windows1252",
        "iso88591",
        "iso88593",
        "iso885915",
        "macroman",
        "cp437",
        "windows1256",
        "iso88596",
        "windows1257",
        "iso88594",
        "iso885914",
        "windows1250",
        "iso88592",
        "cp852",
        "windows1251",
        "cp866",
        "iso88595",
        "koi8r",
        "koi8u",
        "iso885913",
        "windows1253",
        "iso88597",
        "windows1255",
        "iso88598",
        "iso885910",
        "iso885916",
        "windows1254",
        "iso88599",
        "windows1258",
        "gbk",
        "gb18030",
        "cp950",
        "big5hkscs",
        "shiftjis",
        "eucjp",
        "euckr",
        "windows874",
        "iso885911",
        "koi8ru",
        "koi8t",
        "gb2312",
        "cp865",
        "cp850"
      ],
      "default": "utf8",
      "description": "The default character set encoding to use when reading and writing files. This setting can also be configured per language.",
      "scope": 5,
      "enumDescriptions": [
        "UTF-8",
        "UTF-8 with BOM",
        "UTF-16 LE",
        "UTF-16 BE",
        "Western (Windows 1252)",
        "Western (ISO 8859-1)",
        "Western (ISO 8859-3)",
        "Western (ISO 8859-15)",
        "Western (Mac Roman)",
        "DOS (CP 437)",
        "Arabic (Windows 1256)",
        "Arabic (ISO 8859-6)",
        "Baltic (Windows 1257)",
        "Baltic (ISO 8859-4)",
        "Celtic (ISO 8859-14)",
        "Central European (Windows 1250)",
        "Central European (ISO 8859-2)",
        "Central European (CP 852)",
        "Cyrillic (Windows 1251)",
        "Cyrillic (CP 866)",
        "Cyrillic (ISO 8859-5)",
        "Cyrillic (KOI8-R)",
        "Cyrillic (KOI8-U)",
        "Estonian (ISO 8859-13)",
        "Greek (Windows 1253)",
        "Greek (ISO 8859-7)",
        "Hebrew (Windows 1255)",
        "Hebrew (ISO 8859-8)",
        "Nordic (ISO 8859-10)",
        "Romanian (ISO 8859-16)",
        "Turkish (Windows 1254)",
        "Turkish (ISO 8859-9)",
        "Vietnamese (Windows 1258)",
        "Simplified Chinese (GBK)",
        "Simplified Chinese (GB18030)",
        "Traditional Chinese (Big5)",
        "Traditional Chinese (Big5-HKSCS)",
        "Japanese (Shift JIS)",
        "Japanese (EUC-JP)",
        "Korean (EUC-KR)",
        "Thai (Windows 874)",
        "Latin/Thai (ISO 8859-11)",
        "Cyrillic (KOI8-RU)",
        "Tajik (KOI8-T)",
        "Simplified Chinese (GB 2312)",
        "Nordic DOS (CP 865)",
        "Western European DOS (CP 850)"
      ],
      "enumItemLabels": [
        "UTF-8",
        "UTF-8 with BOM",
        "UTF-16 LE",
        "UTF-16 BE",
        "Western (Windows 1252)",
        "Western (ISO 8859-1)",
        "Western (ISO 8859-3)",
        "Western (ISO 8859-15)",
        "Western (Mac Roman)",
        "DOS (CP 437)",
        "Arabic (Windows 1256)",
        "Arabic (ISO 8859-6)",
        "Baltic (Windows 1257)",
        "Baltic (ISO 8859-4)",
        "Celtic (ISO 8859-14)",
        "Central European (Windows 1250)",
        "Central European (ISO 8859-2)",
        "Central European (CP 852)",
        "Cyrillic (Windows 1251)",
        "Cyrillic (CP 866)",
        "Cyrillic (ISO 8859-5)",
        "Cyrillic (KOI8-R)",
        "Cyrillic (KOI8-U)",
        "Estonian (ISO 8859-13)",
        "Greek (Windows 1253)",
        "Greek (ISO 8859-7)",
        "Hebrew (Windows 1255)",
        "Hebrew (ISO 8859-8)",
        "Nordic (ISO 8859-10)",
        "Romanian (ISO 8859-16)",
        "Turkish (Windows 1254)",
        "Turkish (ISO 8859-9)",
        "Vietnamese (Windows 1258)",
        "Simplified Chinese (GBK)",
        "Simplified Chinese (GB18030)",
        "Traditional Chinese (Big5)",
        "Traditional Chinese (Big5-HKSCS)",
        "Japanese (Shift JIS)",
        "Japanese (EUC-JP)",
        "Korean (EUC-KR)",
        "Thai (Windows 874)",
        "Latin/Thai (ISO 8859-11)",
        "Cyrillic (KOI8-RU)",
        "Tajik (KOI8-T)",
        "Simplified Chinese (GB 2312)",
        "Nordic DOS (CP 865)",
        "Western European DOS (CP 850)"
      ],
      "defaultDefaultValue": "utf8",
      "restricted": false
    },
    "files.autoGuessEncoding": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled, the editor will attempt to guess the character set encoding when opening files. This setting can also be configured per language. Note, this setting is not respected by text search. Only `#files.encoding#` is respected.",
      "scope": 5,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "files.eol": {
      "type": "string",
      "enum": [
        "\n",
        "\r\n",
        "auto"
      ],
      "enumDescriptions": [
        "LF",
        "CRLF",
        "Uses operating system specific end of line character."
      ],
      "default": "auto",
      "description": "The default end of line character.",
      "scope": 5,
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "files.trimTrailingWhitespace": {
      "type": "boolean",
      "default": false,
      "description": "When enabled, will trim trailing whitespace when saving a file.",
      "scope": 5,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "files.trimTrailingWhitespaceInRegexAndStrings": {
      "type": "boolean",
      "default": true,
      "description": "When enabled, trailing whitespace will be removed from multiline strings and regexes will be removed on save or when executing 'editor.action.trimTrailingWhitespace'. This can cause whitespace to not be trimmed from lines when there isn't up-to-date token information.",
      "scope": 5,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "files.insertFinalNewline": {
      "type": "boolean",
      "default": false,
      "description": "When enabled, insert a final new line at the end of the file when saving it.",
      "scope": 5,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "files.trimFinalNewlines": {
      "type": "boolean",
      "default": false,
      "description": "When enabled, will trim all new lines after the final new line at the end of the file when saving it.",
      "scope": 5,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "files.autoSave": {
      "type": "string",
      "enum": [
        "off",
        "afterDelay",
        "onFocusChange",
        "onWindowChange"
      ],
      "markdownEnumDescriptions": [
        "An editor with changes is never automatically saved.",
        "An editor with changes is automatically saved after the configured `#files.autoSaveDelay#`.",
        "An editor with changes is automatically saved when the editor loses focus.",
        "An editor with changes is automatically saved when the window loses focus."
      ],
      "default": "off",
      "markdownDescription": "Controls [auto save](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) of editors that have unsaved changes.",
      "scope": 5,
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "files.autoSaveDelay": {
      "type": "number",
      "default": 1000,
      "minimum": 0,
      "markdownDescription": "Controls the delay in milliseconds after which an editor with unsaved changes is saved automatically. Only applies when `#files.autoSave#` is set to `afterDelay`.",
      "scope": 5,
      "defaultDefaultValue": 1000,
      "restricted": false
    },
    "files.autoSaveWorkspaceFilesOnly": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled, will limit [auto save](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) of editors to files that are inside the opened workspace. Only applies when `#files.autoSave#` is enabled.",
      "scope": 5,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "files.autoSaveWhenNoErrors": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled, will limit [auto save](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) of editors to files that have no errors reported in them at the time the auto save is triggered. Only applies when `#files.autoSave#` is enabled.",
      "scope": 5,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "files.watcherExclude": {
      "type": "object",
      "patternProperties": {
        ".*": {
          "type": "boolean"
        }
      },
      "default": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true,
        "**/.hg/store/**": true
      },
      "markdownDescription": "Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) to exclude from file watching. Paths can either be relative to the watched folder or absolute. Glob patterns are matched relative from the watched folder. When you experience the file watcher process consuming a lot of CPU, make sure to exclude large folders that are of less interest (such as build output folders).",
      "scope": 4,
      "defaultDefaultValue": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true,
        "**/.hg/store/**": true
      },
      "restricted": false
    },
    "files.watcherInclude": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "Configure extra paths to watch for changes inside the workspace. By default, all workspace folders will be watched recursively, except for folders that are symbolic links. You can explicitly add absolute or relative paths to support watching folders that are symbolic links. Relative paths will be resolved to an absolute path using the currently opened workspace.",
      "scope": 4,
      "defaultDefaultValue": [],
      "restricted": false
    },
    "files.readonlyInclude": {
      "type": "object",
      "patternProperties": {
        ".*": {
          "type": "boolean"
        }
      },
      "default": {},
      "markdownDescription": "Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) to mark as read-only. Glob patterns are always evaluated relative to the path of the workspace folder unless they are absolute paths. You can exclude matching paths via the `#files.readonlyExclude#` setting. Files from readonly file system providers will always be read-only independent of this setting.",
      "scope": 4,
      "defaultDefaultValue": {},
      "restricted": false
    },
    "files.readonlyExclude": {
      "type": "object",
      "patternProperties": {
        ".*": {
          "type": "boolean"
        }
      },
      "default": {},
      "markdownDescription": "Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) to exclude from being marked as read-only if they match as a result of the `#files.readonlyInclude#` setting. Glob patterns are always evaluated relative to the path of the workspace folder unless they are absolute paths. Files from readonly file system providers will always be read-only independent of this setting.",
      "scope": 4,
      "defaultDefaultValue": {},
      "restricted": false
    },
    "files.saveConflictResolution": {
      "type": "string",
      "enum": [
        "askUser",
        "overwriteFileOnDisk"
      ],
      "enumDescriptions": [
        "Will refuse to save and ask for resolving the save conflict manually.",
        "Will resolve the save conflict by overwriting the file on disk with the changes in the editor."
      ],
      "description": "A save conflict can occur when a file is saved to disk that was changed by another program in the meantime. To prevent data loss, the user is asked to compare the changes in the editor with the version on disk. This setting should only be changed if you frequently encounter save conflict errors and may result in data loss if used without caution.",
      "default": "askUser",
      "scope": 5,
      "defaultDefaultValue": "askUser",
      "restricted": false
    },
    "editor.formatOnSave": {
      "type": "boolean",
      "description": "Format a file on save. A formatter must be available, the file must not be saved after delay, and the editor must not be shutting down.",
      "scope": 5,
      "default": false,
      "restricted": false
    },
    "editor.formatOnSaveMode": {
      "type": "string",
      "default": "file",
      "enum": [
        "file",
        "modifications",
        "modificationsIfAvailable"
      ],
      "enumDescriptions": [
        "Format the whole file.",
        "Format modifications (requires source control).",
        "Will attempt to format modifications only (requires source control). If source control can't be used, then the whole file will be formatted."
      ],
      "markdownDescription": "Controls if format on save formats the whole file or only modifications. Only applies when `#editor.formatOnSave#` is enabled.",
      "scope": 5,
      "defaultDefaultValue": "file",
      "restricted": false
    },
    "explorer.excludeGitIgnore": {
      "type": "boolean",
      "markdownDescription": "Controls whether entries in .gitignore should be parsed and excluded from the Explorer. Similar to `#files.exclude#`.",
      "default": false,
      "scope": 4,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "explorer.fileNesting.enabled": {
      "type": "boolean",
      "scope": 4,
      "markdownDescription": "Controls whether file nesting is enabled in the Explorer. File nesting allows for related files in a directory to be visually grouped together under a single parent file.",
      "default": false,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "explorer.fileNesting.patterns": {
      "type": "object",
      "scope": 4,
      "markdownDescription": "Controls nesting of files in the Explorer. `#explorer.fileNesting.enabled#` must be set for this to take effect. Each __Item__ represents a parent pattern and may contain a single `*` character that matches any string. Each __Value__ represents a comma separated list of the child patterns that should be shown nested under a given parent. Child patterns may contain several special tokens:\n- `${capture}`: Matches the resolved value of the `*` from the parent pattern\n- `${basename}`: Matches the parent file's basename, the `file` in `file.ts`\n- `${extname}`: Matches the parent file's extension, the `ts` in `file.ts`\n- `${dirname}`: Matches the parent file's directory name, the `src` in `src/file.ts`\n- `*`:  Matches any string, may only be used once per child pattern",
      "patternProperties": {
        "^[^*]*\\*?[^*]*$": {
          "markdownDescription": "Each key pattern may contain a single `*` character which will match any string.",
          "type": "string",
          "pattern": "^([^,*]*\\*?[^,*]*)(, ?[^,*]*\\*?[^,*]*)*$"
        }
      },
      "additionalProperties": false,
      "default": {
        "Cargo.toml": "Cargo.lock"
      },
      "defaultDefaultValue": {
        "*.ts": "${capture}.js",
        "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
        "*.jsx": "${capture}.js",
        "*.tsx": "${capture}.ts",
        "tsconfig.json": "tsconfig.*.json",
        "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml, bun.lockb"
      },
      "defaultValueSource": {
        "id": "rust-lang.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "restricted": false
    },
    "outline.collapseItems": {
      "description": "Controls whether Outline items are collapsed or expanded.",
      "type": "string",
      "scope": 5,
      "enum": [
        "alwaysCollapse",
        "alwaysExpand"
      ],
      "enumDescriptions": [
        "Collapse all items.",
        "Expand all items."
      ],
      "default": "alwaysExpand",
      "defaultDefaultValue": "alwaysExpand",
      "restricted": false
    },
    "outline.showFiles": {
      "type": "boolean",
      "scope": 5,
      "default": true,
      "markdownDescription": "When enabled, Outline shows `file`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showModules": {
      "type": "boolean",
      "scope": 5,
      "default": true,
      "markdownDescription": "When enabled, Outline shows `module`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showNamespaces": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `namespace`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showPackages": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `package`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showClasses": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `class`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showMethods": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `method`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showProperties": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `property`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showFields": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `field`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showConstructors": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `constructor`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showEnums": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `enum`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showInterfaces": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `interface`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showFunctions": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `function`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showVariables": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `variable`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showConstants": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `constant`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showStrings": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `string`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showNumbers": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `number`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showBooleans": {
      "type": "boolean",
      "scope": 5,
      "default": true,
      "markdownDescription": "When enabled, Outline shows `boolean`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showArrays": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `array`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showObjects": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `object`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showKeys": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `key`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showNull": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `null`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showEnumMembers": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `enumMember`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showStructs": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `struct`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showEvents": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `event`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showOperators": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `operator`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showTypeParameters": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `typeParameter`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scm.diffDecorations": {
      "type": "string",
      "enum": [
        "all",
        "gutter",
        "overview",
        "minimap",
        "none"
      ],
      "enumDescriptions": [
        "Show the diff decorations in all available locations.",
        "Show the diff decorations only in the editor gutter.",
        "Show the diff decorations only in the overview ruler.",
        "Show the diff decorations only in the minimap.",
        "Do not show the diff decorations."
      ],
      "default": "all",
      "description": "Controls diff decorations in the editor.",
      "defaultDefaultValue": "all",
      "scope": 4,
      "restricted": false
    },
    "scm.diffDecorationsGutterWidth": {
      "type": "number",
      "enum": [
        1,
        2,
        3,
        4,
        5
      ],
      "default": 3,
      "description": "Controls the width(px) of diff decorations in gutter (added & modified).",
      "defaultDefaultValue": 3,
      "scope": 4,
      "restricted": false
    },
    "scm.diffDecorationsGutterVisibility": {
      "type": "string",
      "enum": [
        "always",
        "hover"
      ],
      "enumDescriptions": [
        "Show the diff decorator in the gutter at all times.",
        "Show the diff decorator in the gutter only on hover."
      ],
      "description": "Controls the visibility of the Source Control diff decorator in the gutter.",
      "default": "always",
      "defaultDefaultValue": "always",
      "scope": 4,
      "restricted": false
    },
    "scm.diffDecorationsGutterAction": {
      "type": "string",
      "enum": [
        "diff",
        "none"
      ],
      "enumDescriptions": [
        "Show the inline diff Peek view on click.",
        "Do nothing."
      ],
      "description": "Controls the behavior of Source Control diff gutter decorations.",
      "default": "diff",
      "defaultDefaultValue": "diff",
      "scope": 4,
      "restricted": false
    },
    "scm.diffDecorationsGutterPattern": {
      "type": "object",
      "description": "Controls whether a pattern is used for the diff decorations in gutter.",
      "additionalProperties": false,
      "properties": {
        "added": {
          "type": "boolean",
          "description": "Use pattern for the diff decorations in gutter for added lines."
        },
        "modified": {
          "type": "boolean",
          "description": "Use pattern for the diff decorations in gutter for modified lines."
        }
      },
      "default": {
        "added": false,
        "modified": true
      },
      "defaultDefaultValue": {
        "added": false,
        "modified": true
      },
      "scope": 4,
      "restricted": false
    },
    "scm.diffDecorationsIgnoreTrimWhitespace": {
      "type": "string",
      "enum": [
        "true",
        "false",
        "inherit"
      ],
      "enumDescriptions": [
        "Ignore leading and trailing whitespace.",
        "Do not ignore leading and trailing whitespace.",
        "Inherit from `diffEditor.ignoreTrimWhitespace`."
      ],
      "description": "Controls whether leading and trailing whitespace is ignored in Source Control diff gutter decorations.",
      "default": "false",
      "defaultDefaultValue": "false",
      "scope": 4,
      "restricted": false
    },
    "scm.alwaysShowActions": {
      "type": "boolean",
      "description": "Controls whether inline actions are always visible in the Source Control view.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 4,
      "restricted": false
    },
    "scm.countBadge": {
      "type": "string",
      "enum": [
        "all",
        "focused",
        "off"
      ],
      "enumDescriptions": [
        "Show the sum of all Source Control Provider count badges.",
        "Show the count badge of the focused Source Control Provider.",
        "Disable the Source Control count badge."
      ],
      "description": "Controls the count badge on the Source Control icon on the Activity Bar.",
      "default": "all",
      "defaultDefaultValue": "all",
      "scope": 4,
      "restricted": false
    },
    "scm.providerCountBadge": {
      "type": "string",
      "enum": [
        "hidden",
        "auto",
        "visible"
      ],
      "enumDescriptions": [
        "Hide Source Control Provider count badges.",
        "Only show count badge for Source Control Provider when non-zero.",
        "Show Source Control Provider count badges."
      ],
      "markdownDescription": "Controls the count badges on Source Control Provider headers. These headers appear in the Source Control view when there is more than one provider or when the `#scm.alwaysShowRepositories#` setting is enabled, and in the Source Control Repositories view.",
      "default": "hidden",
      "defaultDefaultValue": "hidden",
      "scope": 4,
      "restricted": false
    },
    "scm.defaultViewMode": {
      "type": "string",
      "enum": [
        "tree",
        "list"
      ],
      "enumDescriptions": [
        "Show the repository changes as a tree.",
        "Show the repository changes as a list."
      ],
      "description": "Controls the default Source Control repository view mode.",
      "default": "list",
      "defaultDefaultValue": "list",
      "scope": 4,
      "restricted": false
    },
    "scm.defaultViewSortKey": {
      "type": "string",
      "enum": [
        "name",
        "path",
        "status"
      ],
      "enumDescriptions": [
        "Sort the repository changes by file name.",
        "Sort the repository changes by path.",
        "Sort the repository changes by Source Control status."
      ],
      "description": "Controls the default Source Control repository changes sort order when viewed as a list.",
      "default": "path",
      "defaultDefaultValue": "path",
      "scope": 4,
      "restricted": false
    },
    "scm.autoReveal": {
      "type": "boolean",
      "description": "Controls whether the Source Control view should automatically reveal and select files when opening them.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "scm.inputFontFamily": {
      "type": "string",
      "markdownDescription": "Controls the font for the input message. Use `default` for the workbench user interface font family, `editor` for the `#editor.fontFamily#`'s value, or a custom font family.",
      "default": "default",
      "defaultDefaultValue": "default",
      "scope": 4,
      "restricted": false
    },
    "scm.inputFontSize": {
      "type": "number",
      "markdownDescription": "Controls the font size for the input message in pixels.",
      "default": 13,
      "defaultDefaultValue": 13,
      "scope": 4,
      "restricted": false
    },
    "scm.inputMaxLineCount": {
      "type": "number",
      "markdownDescription": "Controls the maximum number of lines that the input will auto-grow to.",
      "minimum": 1,
      "maximum": 50,
      "default": 10,
      "defaultDefaultValue": 10,
      "scope": 4,
      "restricted": false
    },
    "scm.inputMinLineCount": {
      "type": "number",
      "markdownDescription": "Controls the minimum number of lines that the input will auto-grow from.",
      "minimum": 1,
      "maximum": 50,
      "default": 1,
      "defaultDefaultValue": 1,
      "scope": 4,
      "restricted": false
    },
    "scm.alwaysShowRepositories": {
      "type": "boolean",
      "markdownDescription": "Controls whether repositories should always be visible in the Source Control view.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 4,
      "restricted": false
    },
    "scm.repositories.sortOrder": {
      "type": "string",
      "enum": [
        "discovery time",
        "name",
        "path"
      ],
      "enumDescriptions": [
        "Repositories in the Source Control Repositories view are sorted by discovery time. Repositories in the Source Control view are sorted in the order that they were selected.",
        "Repositories in the Source Control Repositories and Source Control views are sorted by repository name.",
        "Repositories in the Source Control Repositories and Source Control views are sorted by repository path."
      ],
      "description": "Controls the sort order of the repositories in the source control repositories view.",
      "default": "discovery time",
      "defaultDefaultValue": "discovery time",
      "scope": 4,
      "restricted": false
    },
    "scm.repositories.visible": {
      "type": "number",
      "description": "Controls how many repositories are visible in the Source Control Repositories section. Set to 0, to be able to manually resize the view.",
      "default": 10,
      "defaultDefaultValue": 10,
      "scope": 4,
      "restricted": false
    },
    "scm.showActionButton": {
      "type": "boolean",
      "markdownDescription": "Controls whether an action button can be shown in the Source Control view.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "scm.showInputActionButton": {
      "type": "boolean",
      "markdownDescription": "Controls whether an action button can be shown in the Source Control input.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "scm.showIncomingChanges": {
      "type": "string",
      "enum": [
        "always",
        "never",
        "auto"
      ],
      "enumDescriptions": [
        "Always show incoming changes in the Source Control view.",
        "Never show incoming changes in the Source Control view.",
        "Only show incoming changes in the Source Control view when any exist."
      ],
      "description": "Controls whether incoming changes are shown in the Source Control view.",
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false
    },
    "scm.showOutgoingChanges": {
      "type": "string",
      "enum": [
        "always",
        "never",
        "auto"
      ],
      "enumDescriptions": [
        "Always show outgoing changes in the Source Control view.",
        "Never show outgoing changes in the Source Control view.",
        "Only show outgoing changes in the Source Control view when any exist."
      ],
      "description": "Controls whether outgoing changes are shown in the Source Control view.",
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 4,
      "restricted": false
    },
    "scm.showChangesSummary": {
      "type": "boolean",
      "description": "Controls whether the All Changes entry is shown for incoming/outgoing changes in the Source Control view.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "scm.workingSets.enabled": {
      "type": "boolean",
      "description": "Controls whether to store editor working sets when switching between source control history item groups.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 4,
      "restricted": false
    },
    "scm.workingSets.default": {
      "type": "string",
      "enum": [
        "empty",
        "current"
      ],
      "enumDescriptions": [
        "Use an empty working set when switching to a source control history item group that does not have a working set.",
        "Use the current working set when switching to a source control history item group that does not have a working set."
      ],
      "description": "Controls the default working set to use when switching to a source control history item group that does not have a working set.",
      "default": "current",
      "defaultDefaultValue": "current",
      "scope": 4,
      "restricted": false
    },
    "workbench.startupEditor": {
      "scope": 4,
      "type": "string",
      "enum": [
        "none",
        "welcomePage",
        "readme",
        "newUntitledFile",
        "welcomePageInEmptyWorkbench",
        "terminal"
      ],
      "enumDescriptions": [
        "Start without an editor.",
        "Open the Welcome page, with content to aid in getting started with VS Code and extensions.",
        "Open the README when opening a folder that contains one, fallback to 'welcomePage' otherwise. Note: This is only observed as a global configuration, it will be ignored if set in a workspace or folder configuration.",
        "Open a new untitled text file (only applies when opening an empty window).",
        "Open the Welcome page when opening an empty workbench.",
        "Open a new terminal in the editor area."
      ],
      "default": "welcomePage",
      "description": "Controls which editor is shown at startup, if none are restored from the previous session.",
      "defaultDefaultValue": "welcomePage",
      "restricted": false
    },
    "search.exclude": {
      "type": "object",
      "markdownDescription": "Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files and folders in fulltext searches and file search in quick open. To exclude files from the recently opened list in quick open, patterns must be absolute (for example `**/node_modules/**`). Inherits all glob patterns from the `#files.exclude#` setting.",
      "default": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/*.code-search": true
      },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "boolean",
            "description": "The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."
          },
          {
            "type": "object",
            "properties": {
              "when": {
                "type": "string",
                "pattern": "\\w*\\$\\(basename\\)\\w*",
                "default": "$(basename).ext",
                "markdownDescription": "Additional check on the siblings of a matching file. Use \\$(basename) as variable for the matching file name."
              }
            }
          }
        ]
      },
      "scope": 4,
      "defaultDefaultValue": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/*.code-search": true
      },
      "restricted": false
    },
    "search.useIgnoreFiles": {
      "type": "boolean",
      "markdownDescription": "Controls whether to use `.gitignore` and `.ignore` files when searching for files.",
      "default": true,
      "scope": 4,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "search.useGlobalIgnoreFiles": {
      "type": "boolean",
      "markdownDescription": "Controls whether to use your global gitignore file (for example, from `$HOME/.config/git/ignore`) when searching for files. Requires `#search.useIgnoreFiles#` to be enabled.",
      "default": false,
      "scope": 4,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "search.useParentIgnoreFiles": {
      "type": "boolean",
      "markdownDescription": "Controls whether to use `.gitignore` and `.ignore` files in parent directories when searching for files. Requires `#search.useIgnoreFiles#` to be enabled.",
      "default": false,
      "scope": 4,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "terminal.integrated.tabs.defaultColor": {
      "description": "A theme color ID to associate with terminal icons by default.",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "terminal.ansiBlack",
        "terminal.ansiRed",
        "terminal.ansiGreen",
        "terminal.ansiYellow",
        "terminal.ansiBlue",
        "terminal.ansiMagenta",
        "terminal.ansiCyan",
        "terminal.ansiWhite"
      ],
      "default": null,
      "scope": 4,
      "defaultDefaultValue": null,
      "restricted": false
    },
    "terminal.integrated.tabs.defaultIcon": {
      "description": "A codicon ID to associate with terminal icons by default.",
      "type": "string",
      "enum": [
        "add",
        "plus",
        "gist-new",
        "repo-create",
        "lightbulb",
        "light-bulb",
        "repo",
        "repo-delete",
        "gist-fork",
        "repo-forked",
        "git-pull-request",
        "git-pull-request-abandoned",
        "record-keys",
        "keyboard",
        "tag",
        "git-pull-request-label",
        "tag-add",
        "tag-remove",
        "person",
        "person-follow",
        "person-outline",
        "person-filled",
        "git-branch",
        "git-branch-create",
        "git-branch-delete",
        "source-control",
        "mirror",
        "mirror-public",
        "star",
        "star-add",
        "star-delete",
        "star-empty",
        "comment",
        "comment-add",
        "alert",
        "warning",
        "search",
        "search-save",
        "log-out",
        "sign-out",
        "log-in",
        "sign-in",
        "eye",
        "eye-unwatch",
        "eye-watch",
        "circle-filled",
        "primitive-dot",
        "close-dirty",
        "debug-breakpoint",
        "debug-breakpoint-disabled",
        "debug-hint",
        "terminal-decoration-success",
        "primitive-square",
        "edit",
        "pencil",
        "info",
        "issue-opened",
        "gist-private",
        "git-fork-private",
        "lock",
        "mirror-private",
        "close",
        "remove-close",
        "x",
        "repo-sync",
        "sync",
        "clone",
        "desktop-download",
        "beaker",
        "microscope",
        "vm",
        "device-desktop",
        "file",
        "file-text",
        "more",
        "ellipsis",
        "kebab-horizontal",
        "mail-reply",
        "reply",
        "organization",
        "organization-filled",
        "organization-outline",
        "new-file",
        "file-add",
        "new-folder",
        "file-directory-create",
        "trash",
        "trashcan",
        "history",
        "clock",
        "folder",
        "file-directory",
        "symbol-folder",
        "logo-github",
        "mark-github",
        "github",
        "terminal",
        "console",
        "repl",
        "zap",
        "symbol-event",
        "error",
        "stop",
        "variable",
        "symbol-variable",
        "array",
        "symbol-array",
        "symbol-module",
        "symbol-package",
        "symbol-namespace",
        "symbol-object",
        "symbol-method",
        "symbol-function",
        "symbol-constructor",
        "symbol-boolean",
        "symbol-null",
        "symbol-numeric",
        "symbol-number",
        "symbol-structure",
        "symbol-struct",
        "symbol-parameter",
        "symbol-type-parameter",
        "symbol-key",
        "symbol-text",
        "symbol-reference",
        "go-to-file",
        "symbol-enum",
        "symbol-value",
        "symbol-ruler",
        "symbol-unit",
        "activate-breakpoints",
        "archive",
        "arrow-both",
        "arrow-down",
        "arrow-left",
        "arrow-right",
        "arrow-small-down",
        "arrow-small-left",
        "arrow-small-right",
        "arrow-small-up",
        "arrow-up",
        "bell",
        "bold",
        "book",
        "bookmark",
        "debug-breakpoint-conditional-unverified",
        "debug-breakpoint-conditional",
        "debug-breakpoint-conditional-disabled",
        "debug-breakpoint-data-unverified",
        "debug-breakpoint-data",
        "debug-breakpoint-data-disabled",
        "debug-breakpoint-log-unverified",
        "debug-breakpoint-log",
        "debug-breakpoint-log-disabled",
        "briefcase",
        "broadcast",
        "browser",
        "bug",
        "calendar",
        "case-sensitive",
        "check",
        "checklist",
        "chevron-down",
        "chevron-left",
        "chevron-right",
        "chevron-up",
        "chrome-close",
        "chrome-maximize",
        "chrome-minimize",
        "chrome-restore",
        "circle-outline",
        "circle",
        "debug-breakpoint-unverified",
        "terminal-decoration-incomplete",
        "circle-slash",
        "circuit-board",
        "clear-all",
        "clippy",
        "close-all",
        "cloud-download",
        "cloud-upload",
        "code",
        "collapse-all",
        "color-mode",
        "comment-discussion",
        "credit-card",
        "dash",
        "dashboard",
        "database",
        "debug-continue",
        "debug-disconnect",
        "debug-pause",
        "debug-restart",
        "debug-start",
        "debug-step-into",
        "debug-step-out",
        "debug-step-over",
        "debug-stop",
        "debug",
        "device-camera-video",
        "device-camera",
        "device-mobile",
        "diff-added",
        "diff-ignored",
        "diff-modified",
        "diff-removed",
        "diff-renamed",
        "diff",
        "diff-sidebyside",
        "discard",
        "editor-layout",
        "empty-window",
        "exclude",
        "extensions",
        "eye-closed",
        "file-binary",
        "file-code",
        "file-media",
        "file-pdf",
        "file-submodule",
        "file-symlink-directory",
        "file-symlink-file",
        "file-zip",
        "files",
        "filter",
        "flame",
        "fold-down",
        "fold-up",
        "fold",
        "folder-active",
        "folder-opened",
        "gear",
        "gift",
        "gist-secret",
        "gist",
        "git-commit",
        "git-compare",
        "compare-changes",
        "git-merge",
        "github-action",
        "github-alt",
        "globe",
        "grabber",
        "graph",
        "gripper",
        "heart",
        "home",
        "horizontal-rule",
        "hubot",
        "inbox",
        "issue-reopened",
        "issues",
        "italic",
        "jersey",
        "json",
        "kebab-vertical",
        "key",
        "law",
        "lightbulb-autofix",
        "link-external",
        "link",
        "list-ordered",
        "list-unordered",
        "live-share",
        "loading",
        "location",
        "mail-read",
        "mail",
        "markdown",
        "megaphone",
        "mention",
        "milestone",
        "git-pull-request-milestone",
        "mortar-board",
        "move",
        "multiple-windows",
        "mute",
        "no-newline",
        "note",
        "octoface",
        "open-preview",
        "package",
        "paintcan",
        "pin",
        "play",
        "run",
        "plug",
        "preserve-case",
        "preview",
        "project",
        "pulse",
        "question",
        "quote",
        "radio-tower",
        "reactions",
        "references",
        "refresh",
        "regex",
        "remote-explorer",
        "remote",
        "remove",
        "replace-all",
        "replace",
        "repo-clone",
        "repo-force-push",
        "repo-pull",
        "repo-push",
        "report",
        "request-changes",
        "rocket",
        "root-folder-opened",
        "root-folder",
        "rss",
        "ruby",
        "save-all",
        "save-as",
        "save",
        "screen-full",
        "screen-normal",
        "search-stop",
        "server",
        "settings-gear",
        "settings",
        "shield",
        "smiley",
        "sort-precedence",
        "split-horizontal",
        "split-vertical",
        "squirrel",
        "star-full",
        "star-half",
        "symbol-class",
        "symbol-color",
        "symbol-constant",
        "symbol-enum-member",
        "symbol-field",
        "symbol-file",
        "symbol-interface",
        "symbol-keyword",
        "symbol-misc",
        "symbol-operator",
        "symbol-property",
        "wrench",
        "wrench-subaction",
        "symbol-snippet",
        "tasklist",
        "telescope",
        "text-size",
        "three-bars",
        "thumbsdown",
        "thumbsup",
        "tools",
        "triangle-down",
        "triangle-left",
        "triangle-right",
        "triangle-up",
        "twitter",
        "unfold",
        "unlock",
        "unmute",
        "unverified",
        "verified",
        "versions",
        "vm-active",
        "vm-outline",
        "vm-running",
        "watch",
        "whitespace",
        "whole-word",
        "window",
        "word-wrap",
        "zoom-in",
        "zoom-out",
        "list-filter",
        "list-flat",
        "list-selection",
        "selection",
        "list-tree",
        "debug-breakpoint-function-unverified",
        "debug-breakpoint-function",
        "debug-breakpoint-function-disabled",
        "debug-stackframe-active",
        "circle-small-filled",
        "debug-stackframe-dot",
        "terminal-decoration-mark",
        "debug-stackframe",
        "debug-stackframe-focused",
        "debug-breakpoint-unsupported",
        "symbol-string",
        "debug-reverse-continue",
        "debug-step-back",
        "debug-restart-frame",
        "debug-alt",
        "call-incoming",
        "call-outgoing",
        "menu",
        "expand-all",
        "feedback",
        "git-pull-request-reviewer",
        "group-by-ref-type",
        "ungroup-by-ref-type",
        "account",
        "git-pull-request-assignee",
        "bell-dot",
        "debug-console",
        "library",
        "output",
        "run-all",
        "sync-ignored",
        "pinned",
        "github-inverted",
        "server-process",
        "server-environment",
        "pass",
        "issue-closed",
        "stop-circle",
        "play-circle",
        "record",
        "debug-alt-small",
        "vm-connect",
        "cloud",
        "merge",
        "export",
        "graph-left",
        "magnet",
        "notebook",
        "redo",
        "check-all",
        "pinned-dirty",
        "pass-filled",
        "circle-large-filled",
        "circle-large",
        "circle-large-outline",
        "combine",
        "gather",
        "table",
        "variable-group",
        "type-hierarchy",
        "type-hierarchy-sub",
        "type-hierarchy-super",
        "git-pull-request-create",
        "run-above",
        "run-below",
        "notebook-template",
        "debug-rerun",
        "workspace-trusted",
        "workspace-untrusted",
        "workspace-unknown",
        "terminal-cmd",
        "terminal-debian",
        "terminal-linux",
        "terminal-powershell",
        "terminal-tmux",
        "terminal-ubuntu",
        "terminal-bash",
        "arrow-swap",
        "copy",
        "person-add",
        "filter-filled",
        "wand",
        "debug-line-by-line",
        "inspect",
        "layers",
        "layers-dot",
        "layers-active",
        "compass",
        "compass-dot",
        "compass-active",
        "azure",
        "issue-draft",
        "git-pull-request-closed",
        "git-pull-request-draft",
        "debug-all",
        "debug-coverage",
        "run-errors",
        "folder-library",
        "debug-continue-small",
        "beaker-stop",
        "graph-line",
        "graph-scatter",
        "pie-chart",
        "bracket",
        "bracket-dot",
        "bracket-error",
        "lock-small",
        "azure-devops",
        "verified-filled",
        "newline",
        "layout",
        "layout-activitybar-left",
        "layout-activitybar-right",
        "layout-panel-left",
        "layout-panel-center",
        "layout-panel-justify",
        "layout-panel-right",
        "layout-panel",
        "layout-sidebar-left",
        "layout-sidebar-right",
        "layout-statusbar",
        "layout-menubar",
        "layout-centered",
        "target",
        "indent",
        "record-small",
        "error-small",
        "terminal-decoration-error",
        "arrow-circle-down",
        "arrow-circle-left",
        "arrow-circle-right",
        "arrow-circle-up",
        "layout-sidebar-right-off",
        "layout-panel-off",
        "layout-sidebar-left-off",
        "blank",
        "heart-filled",
        "map",
        "map-horizontal",
        "fold-horizontal",
        "map-filled",
        "map-horizontal-filled",
        "fold-horizontal-filled",
        "circle-small",
        "bell-slash",
        "bell-slash-dot",
        "comment-unresolved",
        "git-pull-request-go-to-changes",
        "git-pull-request-new-changes",
        "search-fuzzy",
        "comment-draft",
        "send",
        "sparkle",
        "insert",
        "mic",
        "thumbsdown-filled",
        "thumbsup-filled",
        "coffee",
        "snake",
        "game",
        "vr",
        "chip",
        "piano",
        "music",
        "mic-filled",
        "repo-fetch",
        "copilot",
        "lightbulb-sparkle",
        "robot",
        "sparkle-filled",
        "diff-single",
        "diff-multiple",
        "surround-with",
        "share",
        "git-stash",
        "git-stash-apply",
        "git-stash-pop",
        "vscode",
        "vscode-insiders",
        "code-oss",
        "run-coverage",
        "run-all-coverage",
        "coverage",
        "github-project",
        "map-vertical",
        "fold-vertical",
        "map-vertical-filled",
        "fold-vertical-filled",
        "go-to-search",
        "percentage",
        "sort-percentage",
        "dialog-error",
        "dialog-warning",
        "dialog-info",
        "dialog-close",
        "tree-item-expanded",
        "tree-filter-on-type-on",
        "tree-filter-on-type-off",
        "tree-filter-clear",
        "tree-item-loading",
        "menu-selection",
        "menu-submenu",
        "menubar-more",
        "scrollbar-button-left",
        "scrollbar-button-right",
        "scrollbar-button-up",
        "scrollbar-button-down",
        "toolbar-more",
        "quick-input-back",
        "drop-down-button",
        "symbol-customcolor",
        "export",
        "workspace-unspecified",
        "newline",
        "thumbsdown-filled",
        "thumbsup-filled",
        "git-fetch",
        "lightbulb-sparkle-autofix",
        "debug-breakpoint-pending"
      ],
      "markdownEnumDescriptions": [
        "$(add)",
        "$(plus)",
        "$(gist-new)",
        "$(repo-create)",
        "$(lightbulb)",
        "$(light-bulb)",
        "$(repo)",
        "$(repo-delete)",
        "$(gist-fork)",
        "$(repo-forked)",
        "$(git-pull-request)",
        "$(git-pull-request-abandoned)",
        "$(record-keys)",
        "$(keyboard)",
        "$(tag)",
        "$(git-pull-request-label)",
        "$(tag-add)",
        "$(tag-remove)",
        "$(person)",
        "$(person-follow)",
        "$(person-outline)",
        "$(person-filled)",
        "$(git-branch)",
        "$(git-branch-create)",
        "$(git-branch-delete)",
        "$(source-control)",
        "$(mirror)",
        "$(mirror-public)",
        "$(star)",
        "$(star-add)",
        "$(star-delete)",
        "$(star-empty)",
        "$(comment)",
        "$(comment-add)",
        "$(alert)",
        "$(warning)",
        "$(search)",
        "$(search-save)",
        "$(log-out)",
        "$(sign-out)",
        "$(log-in)",
        "$(sign-in)",
        "$(eye)",
        "$(eye-unwatch)",
        "$(eye-watch)",
        "$(circle-filled)",
        "$(primitive-dot)",
        "$(close-dirty)",
        "$(debug-breakpoint)",
        "$(debug-breakpoint-disabled)",
        "$(debug-hint)",
        "$(terminal-decoration-success)",
        "$(primitive-square)",
        "$(edit)",
        "$(pencil)",
        "$(info)",
        "$(issue-opened)",
        "$(gist-private)",
        "$(git-fork-private)",
        "$(lock)",
        "$(mirror-private)",
        "$(close)",
        "$(remove-close)",
        "$(x)",
        "$(repo-sync)",
        "$(sync)",
        "$(clone)",
        "$(desktop-download)",
        "$(beaker)",
        "$(microscope)",
        "$(vm)",
        "$(device-desktop)",
        "$(file)",
        "$(file-text)",
        "$(more)",
        "$(ellipsis)",
        "$(kebab-horizontal)",
        "$(mail-reply)",
        "$(reply)",
        "$(organization)",
        "$(organization-filled)",
        "$(organization-outline)",
        "$(new-file)",
        "$(file-add)",
        "$(new-folder)",
        "$(file-directory-create)",
        "$(trash)",
        "$(trashcan)",
        "$(history)",
        "$(clock)",
        "$(folder)",
        "$(file-directory)",
        "$(symbol-folder)",
        "$(logo-github)",
        "$(mark-github)",
        "$(github)",
        "$(terminal)",
        "$(console)",
        "$(repl)",
        "$(zap)",
        "$(symbol-event)",
        "$(error)",
        "$(stop)",
        "$(variable)",
        "$(symbol-variable)",
        "$(array)",
        "$(symbol-array)",
        "$(symbol-module)",
        "$(symbol-package)",
        "$(symbol-namespace)",
        "$(symbol-object)",
        "$(symbol-method)",
        "$(symbol-function)",
        "$(symbol-constructor)",
        "$(symbol-boolean)",
        "$(symbol-null)",
        "$(symbol-numeric)",
        "$(symbol-number)",
        "$(symbol-structure)",
        "$(symbol-struct)",
        "$(symbol-parameter)",
        "$(symbol-type-parameter)",
        "$(symbol-key)",
        "$(symbol-text)",
        "$(symbol-reference)",
        "$(go-to-file)",
        "$(symbol-enum)",
        "$(symbol-value)",
        "$(symbol-ruler)",
        "$(symbol-unit)",
        "$(activate-breakpoints)",
        "$(archive)",
        "$(arrow-both)",
        "$(arrow-down)",
        "$(arrow-left)",
        "$(arrow-right)",
        "$(arrow-small-down)",
        "$(arrow-small-left)",
        "$(arrow-small-right)",
        "$(arrow-small-up)",
        "$(arrow-up)",
        "$(bell)",
        "$(bold)",
        "$(book)",
        "$(bookmark)",
        "$(debug-breakpoint-conditional-unverified)",
        "$(debug-breakpoint-conditional)",
        "$(debug-breakpoint-conditional-disabled)",
        "$(debug-breakpoint-data-unverified)",
        "$(debug-breakpoint-data)",
        "$(debug-breakpoint-data-disabled)",
        "$(debug-breakpoint-log-unverified)",
        "$(debug-breakpoint-log)",
        "$(debug-breakpoint-log-disabled)",
        "$(briefcase)",
        "$(broadcast)",
        "$(browser)",
        "$(bug)",
        "$(calendar)",
        "$(case-sensitive)",
        "$(check)",
        "$(checklist)",
        "$(chevron-down)",
        "$(chevron-left)",
        "$(chevron-right)",
        "$(chevron-up)",
        "$(chrome-close)",
        "$(chrome-maximize)",
        "$(chrome-minimize)",
        "$(chrome-restore)",
        "$(circle-outline)",
        "$(circle)",
        "$(debug-breakpoint-unverified)",
        "$(terminal-decoration-incomplete)",
        "$(circle-slash)",
        "$(circuit-board)",
        "$(clear-all)",
        "$(clippy)",
        "$(close-all)",
        "$(cloud-download)",
        "$(cloud-upload)",
        "$(code)",
        "$(collapse-all)",
        "$(color-mode)",
        "$(comment-discussion)",
        "$(credit-card)",
        "$(dash)",
        "$(dashboard)",
        "$(database)",
        "$(debug-continue)",
        "$(debug-disconnect)",
        "$(debug-pause)",
        "$(debug-restart)",
        "$(debug-start)",
        "$(debug-step-into)",
        "$(debug-step-out)",
        "$(debug-step-over)",
        "$(debug-stop)",
        "$(debug)",
        "$(device-camera-video)",
        "$(device-camera)",
        "$(device-mobile)",
        "$(diff-added)",
        "$(diff-ignored)",
        "$(diff-modified)",
        "$(diff-removed)",
        "$(diff-renamed)",
        "$(diff)",
        "$(diff-sidebyside)",
        "$(discard)",
        "$(editor-layout)",
        "$(empty-window)",
        "$(exclude)",
        "$(extensions)",
        "$(eye-closed)",
        "$(file-binary)",
        "$(file-code)",
        "$(file-media)",
        "$(file-pdf)",
        "$(file-submodule)",
        "$(file-symlink-directory)",
        "$(file-symlink-file)",
        "$(file-zip)",
        "$(files)",
        "$(filter)",
        "$(flame)",
        "$(fold-down)",
        "$(fold-up)",
        "$(fold)",
        "$(folder-active)",
        "$(folder-opened)",
        "$(gear)",
        "$(gift)",
        "$(gist-secret)",
        "$(gist)",
        "$(git-commit)",
        "$(git-compare)",
        "$(compare-changes)",
        "$(git-merge)",
        "$(github-action)",
        "$(github-alt)",
        "$(globe)",
        "$(grabber)",
        "$(graph)",
        "$(gripper)",
        "$(heart)",
        "$(home)",
        "$(horizontal-rule)",
        "$(hubot)",
        "$(inbox)",
        "$(issue-reopened)",
        "$(issues)",
        "$(italic)",
        "$(jersey)",
        "$(json)",
        "$(kebab-vertical)",
        "$(key)",
        "$(law)",
        "$(lightbulb-autofix)",
        "$(link-external)",
        "$(link)",
        "$(list-ordered)",
        "$(list-unordered)",
        "$(live-share)",
        "$(loading)",
        "$(location)",
        "$(mail-read)",
        "$(mail)",
        "$(markdown)",
        "$(megaphone)",
        "$(mention)",
        "$(milestone)",
        "$(git-pull-request-milestone)",
        "$(mortar-board)",
        "$(move)",
        "$(multiple-windows)",
        "$(mute)",
        "$(no-newline)",
        "$(note)",
        "$(octoface)",
        "$(open-preview)",
        "$(package)",
        "$(paintcan)",
        "$(pin)",
        "$(play)",
        "$(run)",
        "$(plug)",
        "$(preserve-case)",
        "$(preview)",
        "$(project)",
        "$(pulse)",
        "$(question)",
        "$(quote)",
        "$(radio-tower)",
        "$(reactions)",
        "$(references)",
        "$(refresh)",
        "$(regex)",
        "$(remote-explorer)",
        "$(remote)",
        "$(remove)",
        "$(replace-all)",
        "$(replace)",
        "$(repo-clone)",
        "$(repo-force-push)",
        "$(repo-pull)",
        "$(repo-push)",
        "$(report)",
        "$(request-changes)",
        "$(rocket)",
        "$(root-folder-opened)",
        "$(root-folder)",
        "$(rss)",
        "$(ruby)",
        "$(save-all)",
        "$(save-as)",
        "$(save)",
        "$(screen-full)",
        "$(screen-normal)",
        "$(search-stop)",
        "$(server)",
        "$(settings-gear)",
        "$(settings)",
        "$(shield)",
        "$(smiley)",
        "$(sort-precedence)",
        "$(split-horizontal)",
        "$(split-vertical)",
        "$(squirrel)",
        "$(star-full)",
        "$(star-half)",
        "$(symbol-class)",
        "$(symbol-color)",
        "$(symbol-constant)",
        "$(symbol-enum-member)",
        "$(symbol-field)",
        "$(symbol-file)",
        "$(symbol-interface)",
        "$(symbol-keyword)",
        "$(symbol-misc)",
        "$(symbol-operator)",
        "$(symbol-property)",
        "$(wrench)",
        "$(wrench-subaction)",
        "$(symbol-snippet)",
        "$(tasklist)",
        "$(telescope)",
        "$(text-size)",
        "$(three-bars)",
        "$(thumbsdown)",
        "$(thumbsup)",
        "$(tools)",
        "$(triangle-down)",
        "$(triangle-left)",
        "$(triangle-right)",
        "$(triangle-up)",
        "$(twitter)",
        "$(unfold)",
        "$(unlock)",
        "$(unmute)",
        "$(unverified)",
        "$(verified)",
        "$(versions)",
        "$(vm-active)",
        "$(vm-outline)",
        "$(vm-running)",
        "$(watch)",
        "$(whitespace)",
        "$(whole-word)",
        "$(window)",
        "$(word-wrap)",
        "$(zoom-in)",
        "$(zoom-out)",
        "$(list-filter)",
        "$(list-flat)",
        "$(list-selection)",
        "$(selection)",
        "$(list-tree)",
        "$(debug-breakpoint-function-unverified)",
        "$(debug-breakpoint-function)",
        "$(debug-breakpoint-function-disabled)",
        "$(debug-stackframe-active)",
        "$(circle-small-filled)",
        "$(debug-stackframe-dot)",
        "$(terminal-decoration-mark)",
        "$(debug-stackframe)",
        "$(debug-stackframe-focused)",
        "$(debug-breakpoint-unsupported)",
        "$(symbol-string)",
        "$(debug-reverse-continue)",
        "$(debug-step-back)",
        "$(debug-restart-frame)",
        "$(debug-alt)",
        "$(call-incoming)",
        "$(call-outgoing)",
        "$(menu)",
        "$(expand-all)",
        "$(feedback)",
        "$(git-pull-request-reviewer)",
        "$(group-by-ref-type)",
        "$(ungroup-by-ref-type)",
        "$(account)",
        "$(git-pull-request-assignee)",
        "$(bell-dot)",
        "$(debug-console)",
        "$(library)",
        "$(output)",
        "$(run-all)",
        "$(sync-ignored)",
        "$(pinned)",
        "$(github-inverted)",
        "$(server-process)",
        "$(server-environment)",
        "$(pass)",
        "$(issue-closed)",
        "$(stop-circle)",
        "$(play-circle)",
        "$(record)",
        "$(debug-alt-small)",
        "$(vm-connect)",
        "$(cloud)",
        "$(merge)",
        "$(export)",
        "$(graph-left)",
        "$(magnet)",
        "$(notebook)",
        "$(redo)",
        "$(check-all)",
        "$(pinned-dirty)",
        "$(pass-filled)",
        "$(circle-large-filled)",
        "$(circle-large)",
        "$(circle-large-outline)",
        "$(combine)",
        "$(gather)",
        "$(table)",
        "$(variable-group)",
        "$(type-hierarchy)",
        "$(type-hierarchy-sub)",
        "$(type-hierarchy-super)",
        "$(git-pull-request-create)",
        "$(run-above)",
        "$(run-below)",
        "$(notebook-template)",
        "$(debug-rerun)",
        "$(workspace-trusted)",
        "$(workspace-untrusted)",
        "$(workspace-unknown)",
        "$(terminal-cmd)",
        "$(terminal-debian)",
        "$(terminal-linux)",
        "$(terminal-powershell)",
        "$(terminal-tmux)",
        "$(terminal-ubuntu)",
        "$(terminal-bash)",
        "$(arrow-swap)",
        "$(copy)",
        "$(person-add)",
        "$(filter-filled)",
        "$(wand)",
        "$(debug-line-by-line)",
        "$(inspect)",
        "$(layers)",
        "$(layers-dot)",
        "$(layers-active)",
        "$(compass)",
        "$(compass-dot)",
        "$(compass-active)",
        "$(azure)",
        "$(issue-draft)",
        "$(git-pull-request-closed)",
        "$(git-pull-request-draft)",
        "$(debug-all)",
        "$(debug-coverage)",
        "$(run-errors)",
        "$(folder-library)",
        "$(debug-continue-small)",
        "$(beaker-stop)",
        "$(graph-line)",
        "$(graph-scatter)",
        "$(pie-chart)",
        "$(bracket)",
        "$(bracket-dot)",
        "$(bracket-error)",
        "$(lock-small)",
        "$(azure-devops)",
        "$(verified-filled)",
        "$(newline)",
        "$(layout)",
        "$(layout-activitybar-left)",
        "$(layout-activitybar-right)",
        "$(layout-panel-left)",
        "$(layout-panel-center)",
        "$(layout-panel-justify)",
        "$(layout-panel-right)",
        "$(layout-panel)",
        "$(layout-sidebar-left)",
        "$(layout-sidebar-right)",
        "$(layout-statusbar)",
        "$(layout-menubar)",
        "$(layout-centered)",
        "$(target)",
        "$(indent)",
        "$(record-small)",
        "$(error-small)",
        "$(terminal-decoration-error)",
        "$(arrow-circle-down)",
        "$(arrow-circle-left)",
        "$(arrow-circle-right)",
        "$(arrow-circle-up)",
        "$(layout-sidebar-right-off)",
        "$(layout-panel-off)",
        "$(layout-sidebar-left-off)",
        "$(blank)",
        "$(heart-filled)",
        "$(map)",
        "$(map-horizontal)",
        "$(fold-horizontal)",
        "$(map-filled)",
        "$(map-horizontal-filled)",
        "$(fold-horizontal-filled)",
        "$(circle-small)",
        "$(bell-slash)",
        "$(bell-slash-dot)",
        "$(comment-unresolved)",
        "$(git-pull-request-go-to-changes)",
        "$(git-pull-request-new-changes)",
        "$(search-fuzzy)",
        "$(comment-draft)",
        "$(send)",
        "$(sparkle)",
        "$(insert)",
        "$(mic)",
        "$(thumbsdown-filled)",
        "$(thumbsup-filled)",
        "$(coffee)",
        "$(snake)",
        "$(game)",
        "$(vr)",
        "$(chip)",
        "$(piano)",
        "$(music)",
        "$(mic-filled)",
        "$(repo-fetch)",
        "$(copilot)",
        "$(lightbulb-sparkle)",
        "$(robot)",
        "$(sparkle-filled)",
        "$(diff-single)",
        "$(diff-multiple)",
        "$(surround-with)",
        "$(share)",
        "$(git-stash)",
        "$(git-stash-apply)",
        "$(git-stash-pop)",
        "$(vscode)",
        "$(vscode-insiders)",
        "$(code-oss)",
        "$(run-coverage)",
        "$(run-all-coverage)",
        "$(coverage)",
        "$(github-project)",
        "$(map-vertical)",
        "$(fold-vertical)",
        "$(map-vertical-filled)",
        "$(fold-vertical-filled)",
        "$(go-to-search)",
        "$(percentage)",
        "$(sort-percentage)",
        "$(dialog-error)",
        "$(dialog-warning)",
        "$(dialog-info)",
        "$(dialog-close)",
        "$(tree-item-expanded)",
        "$(tree-filter-on-type-on)",
        "$(tree-filter-on-type-off)",
        "$(tree-filter-clear)",
        "$(tree-item-loading)",
        "$(menu-selection)",
        "$(menu-submenu)",
        "$(menubar-more)",
        "$(scrollbar-button-left)",
        "$(scrollbar-button-right)",
        "$(scrollbar-button-up)",
        "$(scrollbar-button-down)",
        "$(toolbar-more)",
        "$(quick-input-back)",
        "$(drop-down-button)",
        "$(symbol-customcolor)",
        "$(export)",
        "$(workspace-unspecified)",
        "$(newline)",
        "$(thumbsdown-filled)",
        "$(thumbsup-filled)",
        "$(git-fetch)",
        "$(lightbulb-sparkle-autofix)",
        "$(debug-breakpoint-pending)"
      ],
      "default": "terminal",
      "scope": 4,
      "defaultDefaultValue": "terminal",
      "restricted": false
    },
    "terminal.integrated.cwd": {
      "restricted": true,
      "description": "An explicit start path where the terminal will be launched, this is used as the current working directory (cwd) for the shell process. This may be particularly useful in workspace settings if the root directory is not a convenient cwd.",
      "type": "string",
      "default": "",
      "scope": 4
    },
    "css.customData": {
      "type": "array",
      "markdownDescription": "A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-css-languageservice/blob/master/docs/customData.md).\n\nVS Code loads custom data on startup to enhance its CSS support for CSS custom properties (variables), at-rules, pseudo-classes, and pseudo-elements you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.",
      "default": [],
      "items": {
        "type": "string"
      },
      "scope": 4,
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "css.completion.triggerPropertyValueCompletion": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.completion.completePropertyWithSemicolon": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Insert semicolon at end of line when completing CSS properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.validate": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Enables or disables all validations.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.hover.documentation": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show property and value documentation in CSS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.hover.references": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show references to MDN in CSS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.lint.compatibleVendorPrefixes": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.vendorPrefix": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "When using a vendor-specific prefix, also include the standard property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.lint.duplicateProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Do not use duplicate style definitions.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.emptyRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Do not use empty rulesets.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.lint.importStatement": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Import statements do not load in parallel.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.boxModel": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Do not use `width` or `height` when using `padding` or `border`.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.universalSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "The universal selector (`*`) is known to be slow.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.zeroUnits": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "No unit for zero needed.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.fontFaceProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "`@font-face` rule must define `src` and `font-family` properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.lint.hexColorLength": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Hex colors must consist of 3, 4, 6 or 8 hex numbers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "css.lint.argumentsInColorFunction": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Invalid number of parameters.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "css.lint.unknownProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.lint.validProperties": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string"
      },
      "scope": 4,
      "default": [],
      "description": "A list of properties that are not validated against the `unknownProperties` rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "css.lint.ieHack": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "IE hacks are only necessary when supporting IE7 and older.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.unknownVendorSpecificProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Unknown vendor specific property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.propertyIgnoredDueToDisplay": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.lint.important": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.float": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.idSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.unknownAtRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown at-rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.format.newlineBetweenSelectors": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Separate selectors with a new line.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.format.newlineBetweenRules": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Separate rulesets by a blank line.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.format.spaceAroundSelectorSeparator": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "markdownDescription": "Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "css.format.braceStyle": {
      "type": "string",
      "scope": 4,
      "default": "collapse",
      "enum": [
        "collapse",
        "expand"
      ],
      "markdownDescription": "Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "collapse",
      "restricted": false
    },
    "css.format.preserveNewLines": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Whether existing line breaks before elements should be preserved.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.format.maxPreserveNewLines": {
      "type": [
        "number",
        "null"
      ],
      "scope": 4,
      "default": null,
      "markdownDescription": "Maximum number of line breaks to be preserved in one chunk, when `#css.format.preserveNewLines#` is enabled.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "scss.completion.triggerPropertyValueCompletion": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.completion.completePropertyWithSemicolon": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Insert semicolon at end of line when completing CSS properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.validate": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Enables or disables all validations.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.hover.documentation": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show property and value documentation in SCSS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.hover.references": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show references to MDN in SCSS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.lint.compatibleVendorPrefixes": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.vendorPrefix": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "When using a vendor-specific prefix, also include the standard property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.lint.duplicateProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Do not use duplicate style definitions.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.emptyRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Do not use empty rulesets.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.lint.importStatement": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Import statements do not load in parallel.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.boxModel": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Do not use `width` or `height` when using `padding` or `border`.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.universalSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "The universal selector (`*`) is known to be slow.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.zeroUnits": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "No unit for zero needed.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.fontFaceProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "`@font-face` rule must define `src` and `font-family` properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.lint.hexColorLength": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Hex colors must consist of 3, 4, 6 or 8 hex numbers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "scss.lint.argumentsInColorFunction": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Invalid number of parameters.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "scss.lint.unknownProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.lint.validProperties": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string"
      },
      "scope": 4,
      "default": [],
      "description": "A list of properties that are not validated against the `unknownProperties` rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "scss.lint.ieHack": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "IE hacks are only necessary when supporting IE7 and older.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.unknownVendorSpecificProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Unknown vendor specific property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.propertyIgnoredDueToDisplay": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.lint.important": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.float": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.idSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.unknownAtRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown at-rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.format.newlineBetweenSelectors": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Separate selectors with a new line.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.format.newlineBetweenRules": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Separate rulesets by a blank line.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.format.spaceAroundSelectorSeparator": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "markdownDescription": "Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "scss.format.braceStyle": {
      "type": "string",
      "scope": 4,
      "default": "collapse",
      "enum": [
        "collapse",
        "expand"
      ],
      "markdownDescription": "Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "collapse",
      "restricted": false
    },
    "scss.format.preserveNewLines": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Whether existing line breaks before elements should be preserved.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.format.maxPreserveNewLines": {
      "type": [
        "number",
        "null"
      ],
      "scope": 4,
      "default": null,
      "markdownDescription": "Maximum number of line breaks to be preserved in one chunk, when `#scss.format.preserveNewLines#` is enabled.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "less.completion.triggerPropertyValueCompletion": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.completion.completePropertyWithSemicolon": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Insert semicolon at end of line when completing CSS properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.validate": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Enables or disables all validations.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.hover.documentation": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show property and value documentation in LESS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.hover.references": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show references to MDN in LESS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.lint.compatibleVendorPrefixes": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.vendorPrefix": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "When using a vendor-specific prefix, also include the standard property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.lint.duplicateProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Do not use duplicate style definitions.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.emptyRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Do not use empty rulesets.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.lint.importStatement": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Import statements do not load in parallel.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.boxModel": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Do not use `width` or `height` when using `padding` or `border`.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.universalSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "The universal selector (`*`) is known to be slow.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.zeroUnits": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "No unit for zero needed.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.fontFaceProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "`@font-face` rule must define `src` and `font-family` properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.lint.hexColorLength": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Hex colors must consist of 3, 4, 6 or 8 hex numbers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "less.lint.argumentsInColorFunction": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Invalid number of parameters.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "less.lint.unknownProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.lint.validProperties": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string"
      },
      "scope": 4,
      "default": [],
      "description": "A list of properties that are not validated against the `unknownProperties` rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "less.lint.ieHack": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "IE hacks are only necessary when supporting IE7 and older.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.unknownVendorSpecificProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Unknown vendor specific property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.propertyIgnoredDueToDisplay": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.lint.important": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.float": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.idSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.unknownAtRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown at-rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.format.newlineBetweenSelectors": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Separate selectors with a new line.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.format.newlineBetweenRules": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Separate rulesets by a blank line.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.format.spaceAroundSelectorSeparator": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "markdownDescription": "Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "less.format.braceStyle": {
      "type": "string",
      "scope": 4,
      "default": "collapse",
      "enum": [
        "collapse",
        "expand"
      ],
      "markdownDescription": "Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "collapse",
      "restricted": false
    },
    "less.format.preserveNewLines": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Whether existing line breaks before elements should be preserved.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.format.maxPreserveNewLines": {
      "type": [
        "number",
        "null"
      ],
      "scope": 4,
      "default": null,
      "markdownDescription": "Maximum number of line breaks to be preserved in one chunk, when `#less.format.preserveNewLines#` is enabled.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "emmet.showAbbreviationSuggestions": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "Shows possible Emmet abbreviations as suggestions. Not applicable in stylesheets or when emmet.showExpandedAbbreviation is set to `\"never\"`.",
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "emmet.triggerExpansionOnTab": {
      "type": "boolean",
      "default": false,
      "scope": 5,
      "markdownDescription": "When enabled, Emmet abbreviations are expanded when pressing TAB, even when completions do not show up. When disabled, completions that show up can still be accepted by pressing TAB.",
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.enabled": {
      "type": "boolean",
      "scope": 4,
      "description": "Whether Git is enabled.",
      "default": true,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.autofetch": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "all"
      ],
      "scope": 4,
      "markdownDescription": "When set to true, commits will automatically be fetched from the default remote of the current Git repository. Setting to `all` will fetch from all remotes.",
      "default": false,
      "tags": [
        "usesOnlineServices"
      ],
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.autofetchPeriod": {
      "type": "number",
      "scope": 4,
      "markdownDescription": "Duration in seconds between each automatic git fetch, when `#git.autofetch#` is enabled.",
      "default": 180,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 180,
      "restricted": false
    },
    "git.defaultBranchName": {
      "type": "string",
      "markdownDescription": "The name of the default branch (example: main, trunk, development) when initializing a new Git repository. When set to empty, the default branch name configured in Git will be used. **Note:** Requires Git version `2.28.0` or later.",
      "default": "main",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "main",
      "restricted": false
    },
    "git.branchPrefix": {
      "type": "string",
      "description": "Prefix used when creating a new branch.",
      "default": "",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "git.branchProtection": {
      "type": "array",
      "markdownDescription": "List of protected branches. By default, a prompt is shown before changes are committed to a protected branch. The prompt can be controlled using the `#git.branchProtectionPrompt#`  setting.",
      "items": {
        "type": "string"
      },
      "default": [],
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "git.branchProtectionPrompt": {
      "type": "string",
      "description": "Controls whether a prompt is being shown before changes are committed to a protected branch.",
      "enum": [
        "alwaysCommit",
        "alwaysCommitToNewBranch",
        "alwaysPrompt"
      ],
      "enumDescriptions": [
        "Always commit changes to the protected branch.",
        "Always commit changes to a new branch.",
        "Always prompt before changes are committed to a protected branch."
      ],
      "default": "alwaysPrompt",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "alwaysPrompt",
      "restricted": false
    },
    "git.branchRandomName.enable": {
      "type": "boolean",
      "description": "Controls whether a random name is generated when creating a new branch.",
      "default": false,
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.branchRandomName.dictionary": {
      "type": "array",
      "markdownDescription": "List of dictionaries used for the randomly generated branch name. Each value represents the dictionary used to generate the segment of the branch name. Supported dictionaries: `adjectives`, `animals`, `colors` and `numbers`.",
      "items": {
        "type": "string",
        "enum": [
          "adjectives",
          "animals",
          "colors",
          "numbers"
        ],
        "enumDescriptions": [
          "A random adjective",
          "A random animal name",
          "A random color name",
          "A random number between 100 and 999"
        ]
      },
      "minItems": 1,
      "maxItems": 5,
      "default": [
        "adjectives",
        "animals"
      ],
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [
        "adjectives",
        "animals"
      ],
      "restricted": false
    },
    "git.countBadge": {
      "type": "string",
      "enum": [
        "all",
        "tracked",
        "off"
      ],
      "enumDescriptions": [
        "Count all changes.",
        "Count only tracked changes.",
        "Turn off counter."
      ],
      "description": "Controls the Git count badge.",
      "default": "all",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "all",
      "restricted": false
    },
    "git.verboseCommit": {
      "type": "boolean",
      "scope": 4,
      "markdownDescription": "Enable verbose output when `#git.useEditorAsCommitInput#` is enabled.",
      "default": false,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.enableSmartCommit": {
      "type": "boolean",
      "scope": 4,
      "description": "Commit all changes when there are no staged changes.",
      "default": false,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.smartCommitChanges": {
      "type": "string",
      "enum": [
        "all",
        "tracked"
      ],
      "enumDescriptions": [
        "Automatically stage all changes.",
        "Automatically stage tracked changes only."
      ],
      "scope": 4,
      "description": "Control which changes are automatically staged by Smart Commit.",
      "default": "all",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "all",
      "restricted": false
    },
    "git.suggestSmartCommit": {
      "type": "boolean",
      "scope": 4,
      "description": "Suggests to enable smart commit (commit all changes when there are no staged changes).",
      "default": true,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.enableCommitSigning": {
      "type": "boolean",
      "scope": 4,
      "description": "Enables commit signing with GPG, X.509, or SSH.",
      "default": false,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.confirmEmptyCommits": {
      "type": "boolean",
      "scope": 4,
      "description": "Always confirm the creation of empty commits for the 'Git: Commit Empty' command.",
      "default": true,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.enableStatusBarSync": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the Git Sync command appears in the status bar.",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.followTagsWhenSync": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Push all annotated tags when running the sync command.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.replaceTagsWhenPull": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Automatically replace the local tags with the remote tags in case of a conflict when running the pull command.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.promptToSaveFilesBeforeStash": {
      "type": "string",
      "enum": [
        "always",
        "staged",
        "never"
      ],
      "enumDescriptions": [
        "Check for any unsaved files.",
        "Check only for unsaved staged files.",
        "Disable this check."
      ],
      "scope": 4,
      "default": "always",
      "description": "Controls whether Git should check for unsaved files before stashing changes.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "always",
      "restricted": false
    },
    "git.promptToSaveFilesBeforeCommit": {
      "type": "string",
      "enum": [
        "always",
        "staged",
        "never"
      ],
      "enumDescriptions": [
        "Check for any unsaved files.",
        "Check only for unsaved staged files.",
        "Disable this check."
      ],
      "scope": 4,
      "default": "always",
      "description": "Controls whether Git should check for unsaved files before committing.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "always",
      "restricted": false
    },
    "git.postCommitCommand": {
      "type": "string",
      "enum": [
        "none",
        "push",
        "sync"
      ],
      "enumDescriptions": [
        "Don't run any command after a commit.",
        "Run 'git push' after a successful commit.",
        "Run 'git pull' and 'git push' after a successful commit."
      ],
      "markdownDescription": "Run a git command after a successful commit.",
      "scope": 4,
      "default": "none",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "none",
      "restricted": false
    },
    "git.rememberPostCommitCommand": {
      "type": "boolean",
      "description": "Remember the last git command that ran after a commit.",
      "scope": 4,
      "default": false,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.detectSubmodules": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether to automatically detect Git submodules.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.detectSubmodulesLimit": {
      "type": "number",
      "scope": 4,
      "default": 10,
      "description": "Controls the limit of Git submodules detected.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 10,
      "restricted": false
    },
    "git.alwaysShowStagedChangesResourceGroup": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Always show the Staged Changes resource group.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.alwaysSignOff": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Controls the signoff flag for all commits.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoreSubmodules": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Ignore modifications to submodules in the file tree.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.scanRepositories": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "scope": 4,
      "description": "List of paths to search for Git repositories in.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "git.showProgress": {
      "type": "boolean",
      "description": "Controls whether Git actions should show progress.",
      "default": true,
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.rebaseWhenSync": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Force Git to use rebase when running the sync command.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.pullBeforeCheckout": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Controls whether a branch that does not have outgoing commits is fast-forwarded before it is checked out.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.fetchOnPull": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "When enabled, fetch all branches when pulling. Otherwise, fetch just the current one.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.pruneOnFetch": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Prune when fetching.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.pullTags": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Fetch all tags when pulling.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.autoStash": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Stash any changes before pulling and restore them after successful pull.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.closeDiffOnOperation": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Controls whether the diff editor should be automatically closed when changes are stashed, committed, discarded, staged, or unstaged.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.openDiffOnClick": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether the diff editor should be opened when clicking a change. Otherwise the regular editor will be opened.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.supportCancellation": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Controls whether a notification comes up when running the Sync action, which allows the user to cancel the operation.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.untrackedChanges": {
      "type": "string",
      "enum": [
        "mixed",
        "separate",
        "hidden"
      ],
      "enumDescriptions": [
        "All changes, tracked and untracked, appear together and behave equally.",
        "Untracked changes appear separately in the Source Control view. They are also excluded from several actions.",
        "Untracked changes are hidden and excluded from several actions."
      ],
      "default": "mixed",
      "description": "Controls how untracked changes behave.",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "mixed",
      "restricted": false
    },
    "git.requireGitUserConfig": {
      "type": "boolean",
      "description": "Controls whether to require explicit Git user configuration or allow Git to guess if missing.",
      "default": true,
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.showCommitInput": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether to show the commit input in the Git source control panel.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.useCommitInputAsStashMessage": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Controls whether to use the message from the commit input box as the default stash message.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.showActionButton": {
      "type": "object",
      "additionalProperties": false,
      "description": "Controls whether an action button is shown in the Source Control view.",
      "properties": {
        "commit": {
          "type": "boolean",
          "description": "Show an action button to commit changes when the local branch has modified files ready to be committed."
        },
        "publish": {
          "type": "boolean",
          "description": "Show an action button to publish the local branch when it does not have a tracking remote branch."
        },
        "sync": {
          "type": "boolean",
          "description": "Show an action button to synchronize changes when the local branch is either ahead or behind the remote branch."
        }
      },
      "default": {
        "commit": true,
        "publish": true,
        "sync": true
      },
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": {
        "commit": true,
        "publish": true,
        "sync": true
      },
      "restricted": false
    },
    "git.statusLimit": {
      "type": "number",
      "scope": 4,
      "default": 10000,
      "description": "Controls how to limit the number of changes that can be parsed from Git status command. Can be set to 0 for no limit.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 10000,
      "restricted": false
    },
    "git.repositoryScanIgnoredFolders": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "node_modules"
      ],
      "scope": 4,
      "markdownDescription": "List of folders that are ignored while scanning for Git repositories when `#git.autoRepositoryDetection#` is set to `true` or `subFolders`.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [
        "node_modules"
      ],
      "restricted": false
    },
    "git.repositoryScanMaxDepth": {
      "type": "number",
      "scope": 4,
      "default": 1,
      "markdownDescription": "Controls the depth used when scanning workspace folders for Git repositories when `#git.autoRepositoryDetection#` is set to `true` or `subFolders`. Can be set to `-1` for no limit.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 1,
      "restricted": false
    },
    "git.optimisticUpdate": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether to optimistically update the state of the Source Control view after running git commands.",
      "scope": 4,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.openRepositoryInParentFolders": {
      "type": "string",
      "enum": [
        "always",
        "never",
        "prompt"
      ],
      "enumDescriptions": [
        "Always open a repository in parent folders of workspaces or open files.",
        "Never open a repository in parent folders of workspaces or open files.",
        "Prompt before opening a repository the parent folders of workspaces or open files."
      ],
      "default": "prompt",
      "markdownDescription": "Control whether a repository in parent folders of workspaces or open files should be opened.",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "git.similarityThreshold": {
      "type": "number",
      "default": 50,
      "minimum": 0,
      "maximum": 100,
      "markdownDescription": "Controls the threshold of the similarity index (the amount of additions/deletions compared to the file's size) for changes in a pair of added/deleted files to be considered a rename. **Note:** Requires Git version `2.18.0` or later.",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 50,
      "restricted": false
    },
    "github.branchProtection": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether to query repository rules for GitHub repositories",
      "source": {
        "id": "vscode.github",
        "displayName": "GitHub"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "github.gitAuthentication": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether to enable automatic GitHub authentication for git commands within VS Code.",
      "source": {
        "id": "vscode.github",
        "displayName": "GitHub"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.completion.attributeDefaultValue": {
      "type": "string",
      "scope": 4,
      "enum": [
        "doublequotes",
        "singlequotes",
        "empty"
      ],
      "enumDescriptions": [
        "Attribute value is set to \"\".",
        "Attribute value is set to ''.",
        "Attribute value is not set."
      ],
      "default": "doublequotes",
      "markdownDescription": "Controls the default value for attributes when completion is accepted.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "doublequotes",
      "restricted": false
    },
    "html.customData": {
      "type": "array",
      "markdownDescription": "A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-html-languageservice/blob/master/docs/customData.md).\n\nVS Code loads custom data on startup to enhance its HTML support for the custom HTML tags, attributes and attribute values you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.",
      "default": [],
      "items": {
        "type": "string"
      },
      "scope": 4,
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "html.format.wrapLineLength": {
      "type": "integer",
      "scope": 4,
      "default": 120,
      "description": "Maximum amount of characters per line (0 = disable).",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": 120,
      "restricted": false
    },
    "html.format.unformatted": {
      "type": [
        "string",
        "null"
      ],
      "scope": 4,
      "default": "wbr",
      "markdownDescription": "List of tags, comma separated, that shouldn't be reformatted. `null` defaults to all tags listed at https://www.w3.org/TR/html5/dom.html#phrasing-content.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "wbr",
      "restricted": false
    },
    "html.format.contentUnformatted": {
      "type": [
        "string",
        "null"
      ],
      "scope": 4,
      "default": "pre,code,textarea",
      "markdownDescription": "List of tags, comma separated, where the content shouldn't be reformatted. `null` defaults to the `pre` tag.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "pre,code,textarea",
      "restricted": false
    },
    "html.format.indentInnerHtml": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "markdownDescription": "Indent `<head>` and `<body>` sections.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "html.format.preserveNewLines": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.format.maxPreserveNewLines": {
      "type": [
        "number",
        "null"
      ],
      "scope": 4,
      "default": null,
      "markdownDescription": "Maximum number of line breaks to be preserved in one chunk. Use `null` for unlimited.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "html.format.indentHandlebars": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "markdownDescription": "Format and indent `{{#foo}}` and `{{/foo}}`.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "html.format.extraLiners": {
      "type": [
        "string",
        "null"
      ],
      "scope": 4,
      "default": "head, body, /html",
      "markdownDescription": "List of tags, comma separated, that should have an extra newline before them. `null` defaults to `\"head, body, /html\"`.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "head, body, /html",
      "restricted": false
    },
    "html.format.wrapAttributes": {
      "type": "string",
      "scope": 4,
      "default": "auto",
      "enum": [
        "auto",
        "force",
        "force-aligned",
        "force-expand-multiline",
        "aligned-multiple",
        "preserve",
        "preserve-aligned"
      ],
      "enumDescriptions": [
        "Wrap attributes only when line length is exceeded.",
        "Wrap each attribute except first.",
        "Wrap each attribute except first and keep aligned.",
        "Wrap each attribute.",
        "Wrap when line length is exceeded, align attributes vertically.",
        "Preserve wrapping of attributes.",
        "Preserve wrapping of attributes but align."
      ],
      "description": "Wrap attributes.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "html.format.wrapAttributesIndentSize": {
      "type": [
        "number",
        "null"
      ],
      "scope": 4,
      "default": null,
      "markdownDescription": "Indent wrapped attributes to after N characters. Use `null` to use the default indent size. Ignored if `#html.format.wrapAttributes#` is set to `aligned`.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "html.format.templating": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Honor django, erb, handlebars and php templating language tags.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "html.format.unformattedContentDelimiter": {
      "type": "string",
      "scope": 4,
      "default": "",
      "markdownDescription": "Keep text content together between this string.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "html.suggest.html5": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether the built-in HTML language support suggests HTML5 tags, properties and values.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.validate.scripts": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether the built-in HTML language support validates embedded scripts.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.validate.styles": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether the built-in HTML language support validates embedded styles.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.autoCreateQuotes": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Enable/disable auto creation of quotes for HTML attribute assignment. The type of quotes can be configured by `#html.completion.attributeDefaultValue#`.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.autoClosingTags": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Enable/disable autoclosing of HTML tags.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.hover.documentation": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show tag and attribute documentation in hover.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.hover.references": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show references to MDN in hover.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.mirrorCursorOnMatchingTag": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Enable/disable mirroring cursor on matching HTML tag.",
      "deprecationMessage": "Deprecated in favor of `editor.linkedEditing`",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "ipynb.pasteImagesAsAttachments.enabled": {
      "type": "boolean",
      "scope": 4,
      "markdownDescription": "Enable/disable pasting of images into Markdown cells in ipynb notebook files. Pasted images are inserted as attachments to the cell.",
      "default": true,
      "source": {
        "id": "vscode.ipynb",
        "displayName": ".ipynb Support"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "json.schemas": {
      "type": "array",
      "scope": 4,
      "description": "Associate schemas to JSON files in the current project.",
      "items": {
        "type": "object",
        "default": {
          "fileMatch": [
            "/myfile"
          ],
          "url": "schemaURL"
        },
        "properties": {
          "url": {
            "type": "string",
            "default": "/user.schema.json",
            "description": "A URL or absolute file path to a schema. Can be a relative path (starting with './') in workspace and workspace folder settings."
          },
          "fileMatch": {
            "type": "array",
            "items": {
              "type": "string",
              "default": "MyFile.json",
              "description": "A file pattern that can contain '*' and '**' to match against when resolving JSON files to schemas. When beginning with '!', it defines an exclusion pattern."
            },
            "minItems": 1,
            "description": "An array of file patterns to match against when resolving JSON files to schemas. `*` and '**' can be used as a wildcard. Exclusion patterns can also be defined and start with '!'. A file matches when there is at least one matching pattern and the last matching pattern is not an exclusion pattern."
          },
          "schema": {
            "$ref": "http://json-schema.org/draft-07/schema#",
            "description": "The schema definition for the given URL. The schema only needs to be provided to avoid accesses to the schema URL."
          }
        }
      },
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "default": [],
      "restricted": false
    },
    "markdown.styles": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "A list of URLs or local paths to CSS style sheets to use from the Markdown preview. Relative paths are interpreted relative to the folder open in the Explorer. If there is no open folder, they are interpreted relative to the location of the Markdown file. All '\\' need to be written as '\\\\'.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": true
    },
    "markdown.preview.breaks": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Sets how line-breaks are rendered in the Markdown preview. Setting it to `true` creates a `<br>` for newlines inside paragraphs.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.preview.linkify": {
      "type": "boolean",
      "default": true,
      "description": "Convert URL-like text to links in the Markdown preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.preview.typographer": {
      "type": "boolean",
      "default": false,
      "description": "Enable some language-neutral replacement and quotes beautification in the Markdown preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.preview.fontFamily": {
      "type": "string",
      "default": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
      "description": "Controls the font family used in the Markdown preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
      "restricted": false
    },
    "markdown.preview.fontSize": {
      "type": "number",
      "default": 14,
      "description": "Controls the font size in pixels used in the Markdown preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": 14,
      "restricted": false
    },
    "markdown.preview.lineHeight": {
      "type": "number",
      "default": 1.6,
      "description": "Controls the line height used in the Markdown preview. This number is relative to the font size.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": 1.6,
      "restricted": false
    },
    "markdown.preview.scrollPreviewWithEditor": {
      "type": "boolean",
      "default": true,
      "description": "When a Markdown editor is scrolled, update the view of the preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.preview.markEditorSelection": {
      "type": "boolean",
      "default": true,
      "description": "Mark the current editor selection in the Markdown preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.preview.scrollEditorWithPreview": {
      "type": "boolean",
      "default": true,
      "description": "When a Markdown preview is scrolled, update the view of the editor.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.preview.doubleClickToSwitchToEditor": {
      "type": "boolean",
      "default": true,
      "description": "Double-click in the Markdown preview to switch to the editor.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.preview.openMarkdownLinks": {
      "type": "string",
      "default": "inPreview",
      "description": "Controls how links to other Markdown files in the Markdown preview should be opened.",
      "scope": 4,
      "enum": [
        "inPreview",
        "inEditor"
      ],
      "enumDescriptions": [
        "Try to open links in the Markdown preview.",
        "Try to open links in the editor."
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "inPreview",
      "restricted": false
    },
    "markdown.links.openLocation": {
      "type": "string",
      "default": "currentGroup",
      "description": "Controls where links in Markdown files should be opened.",
      "scope": 4,
      "enum": [
        "currentGroup",
        "beside"
      ],
      "enumDescriptions": [
        "Open links in the active editor group.",
        "Open links beside the active editor."
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "currentGroup",
      "restricted": false
    },
    "markdown.suggest.paths.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable path suggestions while writing links in Markdown files.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.suggest.paths.includeWorkspaceHeaderCompletions": {
      "type": "string",
      "default": "onDoubleHash",
      "scope": 4,
      "markdownDescription": "Enable suggestions for headers in other Markdown files in the current workspace. Accepting one of these suggestions inserts the full path to header in that file, for example: `[link text](/path/to/file.md#header)`.",
      "enum": [
        "never",
        "onDoubleHash",
        "onSingleOrDoubleHash"
      ],
      "markdownEnumDescriptions": [
        "Disable workspace header suggestions.",
        "Enable workspace header suggestions after typing `##` in a path, for example: `[link text](##`.",
        "Enable workspace header suggestions after typing either `##` or `#` in a path, for example: `[link text](#` or `[link text](##`."
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "onDoubleHash",
      "restricted": false
    },
    "markdown.editor.drop.enabled": {
      "type": "string",
      "scope": 4,
      "markdownDescription": "Enable dropping files into a Markdown editor while holding Shift. Requires enabling `#editor.dropIntoEditor.enabled#`.",
      "default": "smart",
      "enum": [
        "always",
        "smart",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Always insert Markdown links.",
        "Smartly create Markdown links by default when not dropping into a code block or other special element. Use the drop widget to switch between pasting as plain text or as Markdown links.",
        "Never create Markdown links."
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "smart",
      "restricted": false
    },
    "markdown.editor.filePaste.enabled": {
      "type": "string",
      "scope": 4,
      "markdownDescription": "Enable pasting files into a Markdown editor to create Markdown links. Requires enabling `#editor.pasteAs.enabled#`.",
      "default": "smart",
      "enum": [
        "always",
        "smart",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Always insert Markdown links.",
        "Smartly create Markdown links by default when not pasting into a code block or other special element. Use the paste widget to switch between pasting as plain text or as Markdown links.",
        "Never create Markdown links."
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "smart",
      "restricted": false
    },
    "markdown.editor.pasteUrlAsFormattedLink.enabled": {
      "type": "string",
      "scope": 4,
      "markdownDescription": "Controls if Markdown links are created when URLs are pasted into a Markdown editor. Requires enabling `#editor.pasteAs.enabled#`.",
      "default": "smartWithSelection",
      "enum": [
        "always",
        "smart",
        "smartWithSelection",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Always insert Markdown links.",
        "Smartly create Markdown links by default when not pasting into a code block or other special element. Use the paste widget to switch between pasting as plain text or as Markdown links.",
        "Smartly create Markdown links by default when you have selected text and are not pasting into a code block or other special element. Use the paste widget to switch between pasting as plain text or as Markdown links.",
        "Never create Markdown links."
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "smartWithSelection",
      "restricted": false
    },
    "markdown.validate.enabled": {
      "type": "boolean",
      "scope": 4,
      "description": "Enable all error reporting in Markdown files.",
      "default": false,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.validate.referenceLinks.enabled": {
      "type": "string",
      "scope": 4,
      "markdownDescription": "Validate reference links in Markdown files, for example: `[link][ref]`. Requires enabling `#markdown.validate.enabled#`.",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "markdown.validate.fragmentLinks.enabled": {
      "type": "string",
      "scope": 4,
      "markdownDescription": "Validate fragment links to headers in the current Markdown file, for example: `[link](#header)`. Requires enabling `#markdown.validate.enabled#`.",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "markdown.validate.fileLinks.enabled": {
      "type": "string",
      "scope": 4,
      "markdownDescription": "Validate links to other files in Markdown files, for example `[link](/path/to/file.md)`. This checks that the target files exists. Requires enabling `#markdown.validate.enabled#`.",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "markdown.validate.fileLinks.markdownFragmentLinks": {
      "type": "string",
      "scope": 4,
      "markdownDescription": "Validate the fragment part of links to headers in other files in Markdown files, for example: `[link](/path/to/file.md#header)`. Inherits the setting value from `#markdown.validate.fragmentLinks.enabled#` by default.",
      "default": "inherit",
      "enum": [
        "inherit",
        "ignore",
        "warning",
        "error"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "inherit",
      "restricted": false
    },
    "markdown.validate.ignoredLinks": {
      "type": "array",
      "scope": 4,
      "markdownDescription": "Configure links that should not be validated. For example adding `/about` would not validate the link `[about](/about)`, while the glob `/assets/**/*.svg` would let you skip validation for any link to `.svg` files under the `assets` directory.",
      "items": {
        "type": "string"
      },
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "default": [],
      "restricted": false
    },
    "markdown.validate.unusedLinkDefinitions.enabled": {
      "type": "string",
      "scope": 4,
      "markdownDescription": "Validate link definitions that are unused in the current file.",
      "default": "hint",
      "enum": [
        "ignore",
        "hint",
        "warning",
        "error"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "hint",
      "restricted": false
    },
    "markdown.validate.duplicateLinkDefinitions.enabled": {
      "type": "string",
      "scope": 4,
      "markdownDescription": "Validate duplicated definitions in the current file.",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "markdown.occurrencesHighlight.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable highlighting link occurrences in the current document.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.experimental.updateLinksOnPaste": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable automatic updating of links in text that is copied and pasted from one Markdown editor to another.",
      "scope": 4,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.math.macros": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "description": "A collection of custom macros. Each macro is a key-value pair where the key is a new command name and the value is the expansion of the macro.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-math",
        "displayName": "Markdown Math"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "npm.autoDetect": {
      "type": "string",
      "enum": [
        "off",
        "on"
      ],
      "default": "on",
      "scope": 4,
      "description": "Controls whether npm scripts should be automatically detected.",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": "on",
      "restricted": false
    },
    "npm.runSilent": {
      "type": "boolean",
      "default": false,
      "scope": 4,
      "markdownDescription": "Run npm commands with the `--silent` option.",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "npm.packageManager": {
      "scope": 4,
      "type": "string",
      "enum": [
        "auto",
        "npm",
        "yarn",
        "pnpm",
        "bun"
      ],
      "enumDescriptions": [
        "Auto-detect which package manager to use for running scripts based on lock files and installed package managers.",
        "Use npm as the package manager for running scripts.",
        "Use yarn as the package manager for running scripts.",
        "Use pnpm as the package manager for running scripts.",
        "Use bun as the package manager for running scripts."
      ],
      "default": "auto",
      "description": "The package manager used to run scripts.",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "npm.exclude": {
      "type": [
        "string",
        "array"
      ],
      "items": {
        "type": "string"
      },
      "description": "Configure glob patterns for folders that should be excluded from automatic script detection.",
      "scope": 4,
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "default": "",
      "restricted": false
    },
    "npm.enableScriptExplorer": {
      "type": "boolean",
      "default": false,
      "scope": 4,
      "deprecationMessage": "The NPM Script Explorer is now available in 'Views' menu in the Explorer in all folders.",
      "description": "Enable an explorer view for npm scripts when there is no top-level 'package.json' file.",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "npm.enableRunFromFolder": {
      "type": "boolean",
      "default": false,
      "scope": 4,
      "description": "Enable running npm scripts contained in a folder from the Explorer context menu.",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "npm.scriptExplorerExclude": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "markdownDescription": "An array of regular expressions that indicate which scripts should be excluded from the NPM Scripts view.",
      "scope": 4,
      "default": [],
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "javascript.suggest.completeFunctionCalls": {
      "type": "boolean",
      "default": false,
      "description": "Complete functions with their parameter signature.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.suggest.completeFunctionCalls": {
      "type": "boolean",
      "default": false,
      "description": "Complete functions with their parameter signature.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.suggest.includeAutomaticOptionalChainCompletions": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires strict null checks to be enabled.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.includeAutomaticOptionalChainCompletions": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires strict null checks to be enabled.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.inlayHints.parameterNames.enabled": {
      "type": "string",
      "enum": [
        "none",
        "literals",
        "all"
      ],
      "enumDescriptions": [
        "Disable parameter name hints.",
        "Enable parameter name hints only for literal arguments.",
        "Enable parameter name hints for literal and non-literal arguments."
      ],
      "default": "none",
      "markdownDescription": "Enable/disable inlay hints for parameter names:\n```typescript\n\nparseInt(/* str: */ '123', /* radix: */ 8)\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "none",
      "restricted": false
    },
    "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Suppress parameter name hints on arguments whose text is identical to the parameter name.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.inlayHints.parameterTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit parameter types:\n```typescript\n\nel.addEventListener('click', e /* :MouseEvent */ => ...)\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.inlayHints.variableTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit variable types:\n```typescript\n\nconst foo /* :number */ = Date.now();\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Suppress type hints on variables whose name is identical to the type name.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.inlayHints.propertyDeclarationTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit types on property declarations:\n```typescript\n\nclass Foo {\n\tprop /* :number */ = Date.now();\n}\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.inlayHints.functionLikeReturnTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit return types on function signatures:\n```typescript\n\nfunction foo() /* :number */ {\n\treturn Date.now();\n} \n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.inlayHints.enumMemberValues.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for member values in enum declarations:\n```typescript\n\nenum MyValue {\n\tA /* = 0 */;\n\tB /* = 1 */;\n}\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.inlayHints.parameterNames.enabled": {
      "type": "string",
      "enum": [
        "none",
        "literals",
        "all"
      ],
      "enumDescriptions": [
        "Disable parameter name hints.",
        "Enable parameter name hints only for literal arguments.",
        "Enable parameter name hints for literal and non-literal arguments."
      ],
      "default": "none",
      "markdownDescription": "Enable/disable inlay hints for parameter names:\n```typescript\n\nparseInt(/* str: */ '123', /* radix: */ 8)\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "none",
      "restricted": false
    },
    "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Suppress parameter name hints on arguments whose text is identical to the parameter name.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.inlayHints.parameterTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit parameter types:\n```typescript\n\nel.addEventListener('click', e /* :MouseEvent */ => ...)\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.inlayHints.variableTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit variable types:\n```typescript\n\nconst foo /* :number */ = Date.now();\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.inlayHints.variableTypes.suppressWhenTypeMatchesName": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Suppress type hints on variables whose name is identical to the type name.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.inlayHints.propertyDeclarationTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit types on property declarations:\n```typescript\n\nclass Foo {\n\tprop /* :number */ = Date.now();\n}\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.inlayHints.functionLikeReturnTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit return types on function signatures:\n```typescript\n\nfunction foo() /* :number */ {\n\treturn Date.now();\n} \n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.inlayHints.enumMemberValues.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for member values in enum declarations:\n```typescript\n\nenum MyValue {\n\tA /* = 0 */;\n\tB /* = 1 */;\n}\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.suggest.includeCompletionsForImportStatements": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable auto-import-style completions on partially-typed import statements.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.includeCompletionsForImportStatements": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable auto-import-style completions on partially-typed import statements.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterCommaDelimiter": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a comma delimiter.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterConstructor": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after the constructor keyword.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterSemicolonInForStatements": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a semicolon in a for statement.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a binary operator.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after keywords in a control flow statement.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after function keyword for anonymous functions.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceBeforeFunctionParenthesis": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling before function argument parentheses.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing non-empty parenthesis.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing non-empty brackets.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after opening and before closing non-empty braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after opening and before closing empty braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing template string braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing JSX expression braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterTypeAssertion": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after type assertions in TypeScript.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.placeOpenBraceOnNewLineForFunctions": {
      "type": "boolean",
      "default": false,
      "description": "Defines whether an open brace is put onto a new line for functions or not.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.placeOpenBraceOnNewLineForControlBlocks": {
      "type": "boolean",
      "default": false,
      "description": "Defines whether an open brace is put onto a new line for control blocks or not.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.semicolons": {
      "type": "string",
      "default": "ignore",
      "description": "Defines handling of optional semicolons.",
      "scope": 4,
      "enum": [
        "ignore",
        "insert",
        "remove"
      ],
      "enumDescriptions": [
        "Don't insert or remove any semicolons.",
        "Insert semicolons at statement ends.",
        "Remove unnecessary semicolons."
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "typescript.format.indentSwitchCase": {
      "type": "boolean",
      "default": true,
      "description": "Indent case clauses in switch statements. Requires using TypeScript 5.1+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterCommaDelimiter": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a comma delimiter.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterConstructor": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after the constructor keyword.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterSemicolonInForStatements": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a semicolon in a for statement.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a binary operator.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after keywords in a control flow statement.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after function keyword for anonymous functions.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceBeforeFunctionParenthesis": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling before function argument parentheses.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing non-empty parenthesis.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing non-empty brackets.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after opening and before closing non-empty braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after opening and before closing empty braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing template string braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing JSX expression braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.placeOpenBraceOnNewLineForFunctions": {
      "type": "boolean",
      "default": false,
      "description": "Defines whether an open brace is put onto a new line for functions or not.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.placeOpenBraceOnNewLineForControlBlocks": {
      "type": "boolean",
      "default": false,
      "description": "Defines whether an open brace is put onto a new line for control blocks or not.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.semicolons": {
      "type": "string",
      "default": "ignore",
      "description": "Defines handling of optional semicolons.",
      "scope": 4,
      "enum": [
        "ignore",
        "insert",
        "remove"
      ],
      "enumDescriptions": [
        "Don't insert or remove any semicolons.",
        "Insert semicolons at statement ends.",
        "Remove unnecessary semicolons."
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "javascript.suggest.names": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable/disable including unique names from the file in JavaScript suggestions. Note that name suggestions are always disabled in JavaScript code that is semantically checked using `@ts-check` or `checkJs`.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.paths": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestions for paths in import statements and require calls.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.paths": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestions for paths in import statements and require calls.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.autoImports": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable auto import suggestions.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.autoImports": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable auto import suggestions.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.completeJSDocs": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestion to complete JSDoc comments.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.completeJSDocs": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestion to complete JSDoc comments.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.jsdoc.generateReturns": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable/disable generating `@returns` annotations for JSDoc templates.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.jsdoc.generateReturns": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable/disable generating `@returns` annotations for JSDoc templates.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggestionActions.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestion diagnostics for JavaScript files in the editor.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggestionActions.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestion diagnostics for TypeScript files in the editor.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.preferences.quoteStyle": {
      "type": "string",
      "enum": [
        "auto",
        "single",
        "double"
      ],
      "default": "auto",
      "markdownDescription": "Preferred quote style to use for Quick Fixes.",
      "markdownEnumDescriptions": [
        "Infer quote type from existing code",
        "Always use single quotes: `'`",
        "Always use double quotes: `\"`"
      ],
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.preferences.quoteStyle": {
      "type": "string",
      "enum": [
        "auto",
        "single",
        "double"
      ],
      "default": "auto",
      "markdownDescription": "Preferred quote style to use for Quick Fixes.",
      "markdownEnumDescriptions": [
        "Infer quote type from existing code",
        "Always use single quotes: `'`",
        "Always use double quotes: `\"`"
      ],
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "javascript.preferences.importModuleSpecifier": {
      "type": "string",
      "enum": [
        "shortest",
        "relative",
        "non-relative",
        "project-relative"
      ],
      "markdownEnumDescriptions": [
        "Prefers a non-relative import only if one is available that has fewer path segments than a relative import.",
        "Prefers a relative path to the imported file location.",
        "Prefers a non-relative import based on the `baseUrl` or `paths` configured in your `jsconfig.json` / `tsconfig.json`.",
        "Prefers a non-relative import only if the relative import path would leave the package or project directory."
      ],
      "default": "shortest",
      "description": "Preferred path style for auto imports.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "shortest",
      "restricted": false
    },
    "typescript.preferences.importModuleSpecifier": {
      "type": "string",
      "enum": [
        "shortest",
        "relative",
        "non-relative",
        "project-relative"
      ],
      "markdownEnumDescriptions": [
        "Prefers a non-relative import only if one is available that has fewer path segments than a relative import.",
        "Prefers a relative path to the imported file location.",
        "Prefers a non-relative import based on the `baseUrl` or `paths` configured in your `jsconfig.json` / `tsconfig.json`.",
        "Prefers a non-relative import only if the relative import path would leave the package or project directory."
      ],
      "default": "shortest",
      "description": "Preferred path style for auto imports.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "shortest",
      "restricted": false
    },
    "javascript.preferences.importModuleSpecifierEnding": {
      "type": "string",
      "enum": [
        "auto",
        "minimal",
        "index",
        "js"
      ],
      "enumItemLabels": [
        null,
        null,
        null,
        ".js / .ts"
      ],
      "markdownEnumDescriptions": [
        "Use project settings to select a default.",
        "Shorten `./component/index.js` to `./component`.",
        "Shorten `./component/index.js` to `./component/index`.",
        "Do not shorten path endings; include the `.js` or `.ts` extension."
      ],
      "default": "auto",
      "description": "Preferred path ending for auto imports.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.preferences.importModuleSpecifierEnding": {
      "type": "string",
      "enum": [
        "auto",
        "minimal",
        "index",
        "js"
      ],
      "enumItemLabels": [
        null,
        null,
        null,
        ".js / .ts"
      ],
      "markdownEnumDescriptions": [
        "Use project settings to select a default.",
        "Shorten `./component/index.js` to `./component`.",
        "Shorten `./component/index.js` to `./component/index`.",
        "Do not shorten path endings; include the `.js` or `.ts` extension."
      ],
      "default": "auto",
      "description": "Preferred path ending for auto imports.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "javascript.preferences.jsxAttributeCompletionStyle": {
      "type": "string",
      "enum": [
        "auto",
        "braces",
        "none"
      ],
      "markdownEnumDescriptions": [
        "Insert `={}` or `=\"\"` after attribute names based on the prop type. See `javascript.preferences.quoteStyle` to control the type of quotes used for string attributes.",
        "Insert `={}` after attribute names.",
        "Only insert attribute names."
      ],
      "default": "auto",
      "description": "Preferred style for JSX attribute completions.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.preferences.jsxAttributeCompletionStyle": {
      "type": "string",
      "enum": [
        "auto",
        "braces",
        "none"
      ],
      "markdownEnumDescriptions": [
        "Insert `={}` or `=\"\"` after attribute names based on the prop type. See `typescript.preferences.quoteStyle` to control the type of quotes used for string attributes.",
        "Insert `={}` after attribute names.",
        "Only insert attribute names."
      ],
      "default": "auto",
      "description": "Preferred style for JSX attribute completions.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.preferences.autoImportFileExcludePatterns": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "markdownDescription": "Specify glob patterns of files to exclude from auto imports. Relative paths are resolved relative to the workspace root. Patterns are evaluated using tsconfig.json [`exclude`](https://www.typescriptlang.org/tsconfig#exclude) semantics.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "default": [],
      "restricted": false
    },
    "javascript.preferences.autoImportFileExcludePatterns": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "markdownDescription": "Specify glob patterns of files to exclude from auto imports. Relative paths are resolved relative to the workspace root. Patterns are evaluated using tsconfig.json [`exclude`](https://www.typescriptlang.org/tsconfig#exclude) semantics.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "default": [],
      "restricted": false
    },
    "typescript.preferences.preferTypeOnlyAutoImports": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Include the `type` keyword in auto-imports whenever possible. Requires using TypeScript 5.3+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.preferences.renameShorthandProperties": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable introducing aliases for object shorthand properties during renames.",
      "deprecationMessage": "The setting 'typescript.preferences.renameShorthandProperties' has been deprecated in favor of 'typescript.preferences.useAliasesForRenames'",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.preferences.renameShorthandProperties": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable introducing aliases for object shorthand properties during renames.",
      "deprecationMessage": "The setting 'typescript.preferences.renameShorthandProperties' has been deprecated in favor of 'typescript.preferences.useAliasesForRenames'",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.preferences.useAliasesForRenames": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable introducing aliases for object shorthand properties during renames.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.preferences.useAliasesForRenames": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable introducing aliases for object shorthand properties during renames.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.preferences.renameMatchingJsxTags": {
      "type": "boolean",
      "default": true,
      "description": "When on a JSX tag, try to rename the matching tag instead of renaming the symbol. Requires using TypeScript 5.1+ in the workspace.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.preferences.renameMatchingJsxTags": {
      "type": "boolean",
      "default": true,
      "description": "When on a JSX tag, try to rename the matching tag instead of renaming the symbol. Requires using TypeScript 5.1+ in the workspace.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.updateImportsOnFileMove.enabled": {
      "type": "string",
      "enum": [
        "prompt",
        "always",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Prompt on each rename.",
        "Always update paths automatically.",
        "Never rename paths and don't prompt."
      ],
      "default": "prompt",
      "description": "Enable/disable automatic updating of import paths when you rename or move a file in VS Code.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "javascript.updateImportsOnFileMove.enabled": {
      "type": "string",
      "enum": [
        "prompt",
        "always",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Prompt on each rename.",
        "Always update paths automatically.",
        "Never rename paths and don't prompt."
      ],
      "default": "prompt",
      "description": "Enable/disable automatic updating of import paths when you rename or move a file in VS Code.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "typescript.autoClosingTags": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable automatic closing of JSX tags.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.autoClosingTags": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable automatic closing of JSX tags.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enabled/disable autocomplete suggestions.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enabled/disable autocomplete suggestions.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.classMemberSnippets.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable snippet completions for class members.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.classMemberSnippets.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable snippet completions for class members.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.objectLiteralMethodSnippets.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable snippet completions for methods in object literals.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.suggestions": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable autocomplete suggestions.",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.hovers": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable hovers.",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.codeActions": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable code actions.",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.colorDecorators": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.validate": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.lint.cssConflict": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "Class names on the same HTML element which apply the same CSS property or properties",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "tailwindCSS.lint.invalidApply": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "markdownDescription": "Unsupported use of the [`@apply` directive](https://tailwindcss.com/docs/functions-and-directives/#apply)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "tailwindCSS.lint.invalidScreen": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "markdownDescription": "Unknown screen name used with the [`@screen` directive](https://tailwindcss.com/docs/functions-and-directives/#screen)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "tailwindCSS.lint.invalidVariant": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "markdownDescription": "Unknown variant name used with the [`@variants` directive](https://tailwindcss.com/docs/functions-and-directives/#variants)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "tailwindCSS.lint.invalidConfigPath": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "markdownDescription": "Unknown or invalid path used with the [`theme` helper](https://tailwindcss.com/docs/functions-and-directives/#theme)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "tailwindCSS.lint.invalidTailwindDirective": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "markdownDescription": "Unknown value used with the [`@tailwind` directive](https://tailwindcss.com/docs/functions-and-directives/#tailwind)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "tailwindCSS.lint.recommendedVariantOrder": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "Class variants not in the recommended order (applies in [JIT mode](https://tailwindcss.com/docs/just-in-time-mode) only)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "tailwindCSS.experimental.classRegex": {
      "type": "array",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "default": [],
      "restricted": false
    },
    "angular-schematics.schematicsDisabled": {
      "scope": 4,
      "description": "List of schematics ids to disable.",
      "type": "array",
      "default": null,
      "uniqueItems": true,
      "items": {
        "anyOf": [
          {
            "type": "string",
            "enum": [
              "angular-service",
              "angular-component",
              "angular-page",
              "angular-module-routing",
              "angular-directive",
              "angular-pipe",
              "angular-module-declarations",
              "angular-guard",
              "angular-interceptor",
              "angular-resolver",
              "angular-async-reactive-service",
              "angular-sync-reactive-service",
              "angular-unit-test",
              "typescript-interface",
              "typescript-class"
            ]
          },
          {
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "source": {
        "id": "cyrilletuzi.angular-schematics",
        "displayName": "Angular Schematics"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "angular-schematics.schematicsDefaultOptions": {
      "scope": 4,
      "description": "List of default values for schematics options.",
      "type": "object",
      "additionalProperties": false,
      "default": null,
      "properties": {
        "angular-*": {
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "shadowDom": {
              "type": "boolean"
            },
            "externalTemplate": {
              "type": "boolean"
            },
            "inlineStyle": {
              "type": "boolean"
            },
            "style": {
              "type": "string",
              "enum": [
                "css",
                "scss",
                "sass",
                "less"
              ],
              "default": "css"
            },
            "skipStyle": {
              "type": "boolean"
            },
            "stylesArray": {
              "type": "boolean"
            },
            "selectorPrefix": {
              "type": "string"
            }
          }
        },
        "angular-component": {
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "skipChangeDetectionOnPush": {
              "type": "boolean"
            },
            "skipDisplayBlock": {
              "type": "boolean"
            },
            "withOnInit": {
              "type": "boolean"
            },
            "skipPathSubfolder": {
              "type": "boolean"
            }
          }
        },
        "angular-page": {
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "skipChangeDetectionOnPush": {
              "type": "boolean"
            },
            "skipOnInit": {
              "type": "boolean"
            },
            "skipPathSubfolder": {
              "type": "boolean"
            }
          }
        },
        "angular-sync-reactive-service": {
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "skipDocumentation": {
              "type": "boolean"
            }
          }
        },
        "angular-async-reactive-service": {
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "skipDocumentation": {
              "type": "boolean"
            }
          }
        }
      },
      "patternProperties": {
        "^[a-zA-Z*-]+$": {
          "description": "Schematic identifier (example: \"angular-component\").",
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z]+$": {
              "description": "Name of the option (example: \"externalTemplate\")",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          }
        }
      },
      "source": {
        "id": "cyrilletuzi.angular-schematics",
        "displayName": "Angular Schematics"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "angular-schematics.pathsWithPredefinedSchematic": {
      "scope": 4,
      "description": "List of paths with a predefined associated schematic(s).",
      "type": "array",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "path",
          "schematicId"
        ],
        "properties": {
          "path": {
            "description": "A path relative to the workspace folder (for example: \"src/app/core-services\"). Globs are possible (for example: \"src/app/features/**/pages\"), it uses minimath, see https://github.com/isaacs/minimatch",
            "type": "string",
            "minLength": 1
          },
          "schematicId": {
            "description": "Required identifier(s) of the schematic to preselect for this path (example: \"angular-component\" or [\"angular-component\", \"angular-directive\"]).",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "angular-service",
                  "angular-component",
                  "angular-page",
                  "angular-module-routing",
                  "angular-directive",
                  "angular-pipe",
                  "angular-module-declarations",
                  "angular-guard",
                  "angular-interceptor",
                  "angular-resolver",
                  "angular-async-reactive-service",
                  "angular-sync-reactive-service",
                  "angular-unit-test",
                  "typescript-interface",
                  "typescript-class"
                ]
              },
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "items": {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "angular-service",
                        "angular-component",
                        "angular-page",
                        "angular-module-routing",
                        "angular-directive",
                        "angular-pipe",
                        "angular-module-declarations",
                        "angular-guard",
                        "angular-interceptor",
                        "angular-resolver",
                        "angular-async-reactive-service",
                        "angular-sync-reactive-service",
                        "angular-unit-test",
                        "typescript-interface",
                        "typescript-class"
                      ]
                    },
                    {
                      "type": "string",
                      "minLength": 1
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "source": {
        "id": "cyrilletuzi.angular-schematics",
        "displayName": "Angular Schematics"
      },
      "default": [],
      "restricted": false
    },
    "angular-schematics.enforceArchitecture": {
      "scope": 4,
      "description": "Authorize generation only in paths configured in \"pathsWithPredefinedSchematic\". \"error\" will restrict generation in other paths. \"warn\" will warn the user but allows to do it anyway. \"off\" by default or if \"pathsWithPredefinedSchematic\" is empty.",
      "type": "string",
      "enum": [
        "off",
        "warn",
        "error"
      ],
      "default": "off",
      "source": {
        "id": "cyrilletuzi.angular-schematics",
        "displayName": "Angular Schematics"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "angular-schematics.additionalSchematics": {
      "scope": 4,
      "description": "List of relative paths of local schematics parent folders (example: [\"./schematics\"]).",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "pattern": "^\\.\\/"
      },
      "source": {
        "id": "cyrilletuzi.angular-schematics",
        "displayName": "Angular Schematics"
      },
      "default": [],
      "restricted": false
    },
    "angular-schematics.localSchematicsPath": {
      "scope": 4,
      "description": "Destination path when creating new custom schematics, relative to the workspace folder. Defaults to \"./schematics\".",
      "type": "string",
      "pattern": "^\\.\\/",
      "default": "./schematics",
      "source": {
        "id": "cyrilletuzi.angular-schematics",
        "displayName": "Angular Schematics"
      },
      "defaultDefaultValue": "./schematics",
      "restricted": false
    },
    "angular-schematics.localSchematicsPrefix": {
      "scope": 4,
      "description": "Prefix for schematic id when creating new custom schematics (example: \"mycompany\").",
      "type": "string",
      "source": {
        "id": "cyrilletuzi.angular-schematics",
        "displayName": "Angular Schematics"
      },
      "default": "",
      "restricted": false
    },
    "angular-schematics.angularForceNgModules": {
      "scope": 4,
      "description": "Generate components, directives and pipes with NgModules instead of standalone ones. Not recommanded.",
      "type": "boolean",
      "default": false,
      "source": {
        "id": "cyrilletuzi.angular-schematics",
        "displayName": "Angular Schematics"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular-schematics.angularForceClassInterceptor": {
      "scope": 4,
      "description": "Generate class interceptors instead of functional ones. Not recommanded.",
      "type": "boolean",
      "default": false,
      "source": {
        "id": "cyrilletuzi.angular-schematics",
        "displayName": "Angular Schematics"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular-schematics.angularForceClassGuardsAndResolvers": {
      "scope": 4,
      "description": "Generate class guards and resolvers instead of functional ones. Not recommanded.",
      "type": "boolean",
      "default": false,
      "source": {
        "id": "cyrilletuzi.angular-schematics",
        "displayName": "Angular Schematics"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular-schematics.angularDisableProjectPathCheck": {
      "scope": 4,
      "description": "By default, for Angular schematics, the extension checks if the destination path is part of a known Angular project from angular.json. But some projects diverge from the official Angular CLI configuration, so, while not recommended, this option allows to disable this check.",
      "type": "boolean",
      "default": false,
      "source": {
        "id": "cyrilletuzi.angular-schematics",
        "displayName": "Angular Schematics"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "angular-schematics.forcedDependencies": {
      "scope": 4,
      "description": "If the extension cannot detect your dependencies, you can force them here, with the same syntax as package.json. For example: { \"@angular/core\": \"^17.0.0\" }",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "source": {
        "id": "cyrilletuzi.angular-schematics",
        "displayName": "Angular Schematics"
      },
      "default": {},
      "restricted": false
    },
    "eslint.enable": {
      "scope": 4,
      "type": "boolean",
      "default": true,
      "description": "Controls whether eslint is enabled or not.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "eslint.packageManager": {
      "scope": 4,
      "type": "string",
      "enum": [
        "npm",
        "yarn",
        "pnpm"
      ],
      "default": "npm",
      "description": "The package manager you use to install node modules.",
      "deprecationMessage": "The setting is deprecated. The Package Manager is automatically detected now.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": "npm",
      "restricted": false
    },
    "eslint.problems.shortenToSingleLine": {
      "type": "boolean",
      "default": false,
      "description": "Shortens the text spans of underlined problems to their first related line.",
      "scope": 4,
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.nodeEnv": {
      "scope": 4,
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "The value of `NODE_ENV` to use when running eslint tasks.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "eslint.options": {
      "scope": 4,
      "type": "object",
      "default": {},
      "markdownDescription": "The eslint options object to provide args normally passed to eslint when executed from a command line (see https://eslint.org/docs/developer-guide/nodejs-api#eslint-class).",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "eslint.run": {
      "scope": 4,
      "type": "string",
      "enum": [
        "onSave",
        "onType"
      ],
      "default": "onType",
      "description": "Run the linter on save (onSave) or on type (onType)",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": "onType",
      "restricted": false
    },
    "eslint.autoFixOnSave": {
      "scope": 4,
      "type": "boolean",
      "default": false,
      "description": "Turns auto fix on save on or off.",
      "deprecationMessage": "The setting is deprecated. Use editor.codeActionsOnSave instead with a source.fixAll.eslint member.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.quiet": {
      "scope": 4,
      "type": "boolean",
      "default": false,
      "description": "Turns on quiet mode, which ignores warnings.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.onIgnoredFiles": {
      "scope": 4,
      "type": "string",
      "enum": [
        "warn",
        "off"
      ],
      "default": "off",
      "description": "Whether ESLint should issue a warning on ignored files.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "eslint.useESLintClass": {
      "scope": 4,
      "type": "boolean",
      "default": false,
      "description": "Since version 7 ESLint offers a new API call ESLint. Use it even if the old CLIEngine is available. From version 8 on forward on ESLint class is available.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.experimental.useFlatConfig": {
      "scope": 4,
      "type": "boolean",
      "default": false,
      "description": "Enables support of experimental Flat Config (aka eslint.config.js, supported by ESLint version 8.21 or later).",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.workingDirectories": {
      "scope": 4,
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string",
                "enum": [
                  "auto",
                  "location"
                ],
                "default": "location"
              }
            },
            "required": [
              "mode"
            ]
          },
          {
            "type": "object",
            "properties": {
              "directory": {
                "type": "string",
                "description": "The working directory to use if a file's path starts with this directory."
              },
              "changeProcessCWD": {
                "type": "boolean",
                "description": "Whether the process's cwd should be changed as well."
              }
            },
            "deprecationMessage": "Use the new !cwd form.",
            "required": [
              "directory"
            ]
          },
          {
            "type": "object",
            "properties": {
              "directory": {
                "type": "string",
                "description": "The working directory to use if a file's path starts with this directory."
              },
              "!cwd": {
                "type": "boolean",
                "description": "Set to true if ESLint shouldn't change the working directory."
              }
            },
            "required": [
              "directory"
            ]
          },
          {
            "type": "object",
            "properties": {
              "pattern": {
                "type": "string",
                "description": "A glob pattern to match a working directory."
              },
              "!cwd": {
                "type": "boolean",
                "description": "Set to true if ESLint shouldn't change the working directory."
              }
            },
            "required": [
              "pattern"
            ]
          }
        ]
      },
      "markdownDescription": "Specifies how the working directories ESLint is using are computed. ESLint resolves configuration files (e.g. `eslintrc`, `.eslintignore`) relative to a working directory so it is important to configure this correctly.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "default": [],
      "restricted": false
    },
    "eslint.validate": {
      "scope": 4,
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "description": "The language id to be validated by ESLint."
              },
              "autoFix": {
                "type": "boolean",
                "description": "Whether auto fixes are provided for the language."
              }
            },
            "deprecationMessage": "Auto Fix is enabled by default. Use the single string form."
          }
        ]
      },
      "description": "An array of language ids which should be validated by ESLint. If not installed ESLint will show an error.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "default": [],
      "restricted": false
    },
    "eslint.ignoreUntitled": {
      "scope": 4,
      "type": "boolean",
      "default": false,
      "description": "If true, untitled files won't be validated by ESLint.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.probe": {
      "scope": 4,
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "html",
        "vue",
        "markdown"
      ],
      "description": "An array of language ids for which the extension should probe if support is installed.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "html",
        "vue",
        "markdown"
      ],
      "restricted": false
    },
    "eslint.provideLintTask": {
      "scope": 4,
      "type": "boolean",
      "default": false,
      "deprecationMessage": "This option is deprecated. Use eslint.lintTask.enable instead.",
      "description": "Controls whether a task for linting the whole workspace will be available.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.lintTask.enable": {
      "scope": 4,
      "type": "boolean",
      "default": false,
      "description": "Controls whether a task for linting the whole workspace will be available.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.lintTask.options": {
      "scope": 4,
      "type": "string",
      "default": ".",
      "markdownDescription": "Command line options applied when running the task for linting the whole workspace (see https://eslint.org/docs/user-guide/command-line-interface).",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": ".",
      "restricted": false
    },
    "eslint.codeAction.disableRuleComment": {
      "scope": 4,
      "type": "object",
      "default": {
        "enable": true,
        "location": "separateLine",
        "commentStyle": "line"
      },
      "properties": {
        "enable": {
          "type": "boolean",
          "default": true,
          "description": "Show the disable code actions."
        },
        "location": {
          "type": "string",
          "enum": [
            "separateLine",
            "sameLine"
          ],
          "default": "separateLine",
          "description": "Configure the disable rule code action to insert the comment on the same line or a new line."
        },
        "commentStyle": {
          "type": "string",
          "enum": [
            "line",
            "block"
          ],
          "default": "line",
          "definition": "The comment style to use when disabling a rule on a specific line."
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Show disable lint rule in the quick fix menu.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": {
        "enable": true,
        "location": "separateLine",
        "commentStyle": "line"
      },
      "restricted": false
    },
    "eslint.codeAction.showDocumentation": {
      "scope": 4,
      "type": "object",
      "default": {
        "enable": true
      },
      "properties": {
        "enable": {
          "type": "boolean",
          "default": true,
          "description": "Show the documentation code actions."
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Show open lint rule documentation web page in the quick fix menu.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": {
        "enable": true
      },
      "restricted": false
    },
    "eslint.codeActionsOnSave.mode": {
      "scope": 4,
      "type": "string",
      "enum": [
        "all",
        "problems"
      ],
      "enumDescriptions": [
        "Fixes all possible problems in the file. This option might take some time.",
        "Fixes only reported problems that have non-overlapping textual edits. This option runs a lot faster."
      ],
      "default": "all",
      "markdownDescription": "Specifies the code action mode. Possible values are 'all' and 'problems'.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": "all",
      "restricted": false
    },
    "eslint.codeActionsOnSave.rules": {
      "scope": 4,
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "markdownDescription": "The rules that should be executed when computing the code actions on save or formatting a file. Defaults to the rules configured via the ESLint configuration",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "eslint.format.enable": {
      "scope": 4,
      "type": "boolean",
      "default": false,
      "description": "Enables ESLint as a formatter.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.rules.customizations": {
      "items": {
        "properties": {
          "severity": {
            "enum": [
              "downgrade",
              "error",
              "info",
              "default",
              "upgrade",
              "warn",
              "off"
            ],
            "type": "string"
          },
          "rule": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scope": 4,
      "type": "array",
      "description": "Override the severity of one or more rules reported by this extension, regardless of the project's ESLint config. Use globs to apply default severities for multiple rules.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "default": [],
      "restricted": false
    },
    "eslint.notebooks.rules.customizations": {
      "items": {
        "properties": {
          "severity": {
            "enum": [
              "downgrade",
              "error",
              "info",
              "default",
              "upgrade",
              "warn",
              "off"
            ],
            "type": "string"
          },
          "rule": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scope": 4,
      "type": "array",
      "description": "A special rules customization section for text cells in notebook documents.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "default": [],
      "restricted": false
    },
    "eslint.timeBudget.onValidation": {
      "scope": 4,
      "type": "object",
      "properties": {
        "warn": {
          "type": "number",
          "default": 4000,
          "minimum": 0,
          "markdownDescription": "The time budget in milliseconds to spend on validation before showing a warning."
        },
        "error": {
          "type": "number",
          "default": 8000,
          "minimum": 0,
          "markdownDescription": "The time budget in milliseconds to spend on validation before showing an error."
        }
      },
      "default": {
        "warn": 4000,
        "error": 8000
      },
      "markdownDescription": "The time budget in milliseconds to spend on validation before showing a warning or error.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": {
        "warn": 4000,
        "error": 8000
      },
      "restricted": false
    },
    "eslint.timeBudget.onFixes": {
      "scope": 4,
      "type": "object",
      "properties": {
        "warn": {
          "type": "number",
          "default": 3000,
          "minimum": 0,
          "markdownDescription": "The time budget in milliseconds to spend on computing fixes before showing a warning."
        },
        "error": {
          "type": "number",
          "default": 6000,
          "minimum": 0,
          "markdownDescription": "The time budget in milliseconds to spend on computing fixes before showing an error."
        }
      },
      "default": {
        "warn": 3000,
        "error": 6000
      },
      "markdownDescription": "The time budget in milliseconds to spend on computing fixes before showing a warning or error.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": {
        "warn": 3000,
        "error": 6000
      },
      "restricted": false
    },
    "prettier.enable": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether Prettier is enabled or not. Reload required.",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "prettier.requireConfig": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.resolveGlobalModules": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": true
    },
    "prettier.withNodeModules": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "This extension will process files in `node_modules`.",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": true
    },
    "prettier.packageManager": {
      "scope": 4,
      "type": "string",
      "enum": [
        "npm",
        "yarn",
        "pnpm"
      ],
      "default": "npm",
      "deprecationMessage": "Package manager is now automatically detected by VS Code. This setting is no longer used.",
      "markdownDescription": "The package manager you use to install node modules.",
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "npm",
      "restricted": false
    },
    "prettier.useEditorConfig": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Whether or not to take `.editorconfig` into account when parsing configuration. See the [`prettier.resolveConfig`](https://prettier.io/docs/en/api.html) docs for details.",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": true,
      "restricted": true
    },
    "prettier.ignorePath": {
      "type": "string",
      "default": ".prettierignore",
      "markdownDescription": "Path to a `.prettierignore` file.",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": ".prettierignore",
      "restricted": true
    },
    "prettier.prettierPath": {
      "type": "string",
      "markdownDescription": "Path to the `prettier` module, eg: `./node_modules/prettier`.",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "default": "",
      "restricted": true
    },
    "prettier.configPath": {
      "type": "string",
      "markdownDescription": "Path to the prettier configuration file.",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "default": "",
      "restricted": true
    },
    "prettier.enableDebugLogs": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable debug logs for troubleshooting.",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.printWidth": {
      "type": "integer",
      "default": 80,
      "markdownDescription": "Fit code within this line limit.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": 80,
      "restricted": false
    },
    "prettier.tabWidth": {
      "type": "integer",
      "default": 2,
      "markdownDescription": "Number of spaces it should use per tab.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": 2,
      "restricted": false
    },
    "prettier.singleQuote": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Use single instead of double quotes.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.trailingComma": {
      "type": "string",
      "enum": [
        "none",
        "es5",
        "all"
      ],
      "default": "es5",
      "markdownDescription": "Controls the printing of trailing commas wherever possible. \nValid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "es5",
      "restricted": false
    },
    "prettier.bracketSpacing": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls the printing of spaces inside object literals.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "prettier.singleAttributePerLine": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enforces single attribute per line in HTML, JSX, Vue and Angular.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.bracketSameLine": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Puts the `>` of a multi-line HTML (HTML, JSX, Vue, Angular) element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.jsxBracketSameLine": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).",
      "deprecationMessage": "This option has been deprecated in v2.4.0, use `bracketSameLine` instead.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.semi": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Whether to add a semicolon at the end of every line.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "prettier.requirePragma": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.insertPragma": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Prettier can insert a special `@format` marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the `@format` marker.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.useTabs": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Indent lines with tabs.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.proseWrap": {
      "type": "string",
      "enum": [
        "preserve",
        "always",
        "never"
      ],
      "default": "preserve",
      "markdownDescription": "(Markdown) wrap prose over multiple lines.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "preserve",
      "restricted": false
    },
    "prettier.arrowParens": {
      "type": "string",
      "enum": [
        "avoid",
        "always"
      ],
      "default": "always",
      "markdownDescription": "Include parentheses around a sole arrow function parameter.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "always",
      "restricted": false
    },
    "prettier.jsxSingleQuote": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Use single quotes instead of double quotes in JSX.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.htmlWhitespaceSensitivity": {
      "type": "string",
      "enum": [
        "css",
        "strict",
        "ignore"
      ],
      "default": "css",
      "markdownDescription": "Specify the global [whitespace sensitivity](https://prettier.io/blog/2018/11/07/1.15.0.html#whitespace-sensitive-formatting) for HTML files.\nValid options:\n- `css` - Respect the default value of CSS `display` property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignore` - Whitespaces are considered insensitive.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "css",
      "restricted": false
    },
    "prettier.vueIndentScriptAndStyle": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Whether or not to indent the code inside `<script>` and `<style>` tags in Vue SFC files.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.endOfLine": {
      "type": "string",
      "enum": [
        "auto",
        "lf",
        "crlf",
        "cr"
      ],
      "default": "lf",
      "markdownDescription": "Specify the end of line used by prettier.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "lf",
      "restricted": false
    },
    "prettier.quoteProps": {
      "type": "string",
      "enum": [
        "as-needed",
        "consistent",
        "preserve"
      ],
      "default": "as-needed",
      "markdownDescription": "Change when properties in objects are quoted.\nValid options:\n- `\"as-needed\"` - Only add quotes around object properties where required.\n- `\"consistent\"` - If at least one property in an object requires quotes, quote all properties.\n- `\"preserve\"` - Respect the input use of quotes in object properties.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "as-needed",
      "restricted": false
    },
    "prettier.embeddedLanguageFormatting": {
      "type": "string",
      "enum": [
        "auto",
        "off"
      ],
      "default": "auto",
      "markdownDescription": "Control whether Prettier formats quoted code embedded in the file.",
      "scope": 5,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "auto-close-tag.activationOnLanguage": {
      "type": "array",
      "default": [
        "xml",
        "php",
        "blade",
        "ejs",
        "jinja",
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "plaintext",
        "markdown",
        "vue",
        "liquid",
        "erb",
        "lang-cfml",
        "cfml",
        "HTML (EEx)",
        "HTML (Eex)",
        "plist"
      ],
      "description": "Set the languages that the extension will be activated.  e.g. [\"html\",\"xml\",\"php\"]. Use [\"*\"] to activate for all languages.",
      "scope": 4,
      "source": {
        "id": "formulahendry.auto-close-tag",
        "displayName": "Auto Close Tag"
      },
      "defaultDefaultValue": [
        "xml",
        "php",
        "blade",
        "ejs",
        "jinja",
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "plaintext",
        "markdown",
        "vue",
        "liquid",
        "erb",
        "lang-cfml",
        "cfml",
        "HTML (EEx)",
        "HTML (Eex)",
        "plist"
      ],
      "restricted": false
    },
    "auto-close-tag.disableOnLanguage": {
      "type": "array",
      "default": [],
      "description": "Set the languages where the extension will be disabled.  e.g. [\"html\",\"xml\",\"php\"].",
      "scope": 4,
      "source": {
        "id": "formulahendry.auto-close-tag",
        "displayName": "Auto Close Tag"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "auto-close-tag.excludedTags": {
      "type": "array",
      "default": [
        "area",
        "base",
        "br",
        "col",
        "command",
        "embed",
        "hr",
        "img",
        "input",
        "keygen",
        "link",
        "meta",
        "param",
        "source",
        "track",
        "wbr"
      ],
      "description": "Set the tag list that would not be auto closed.",
      "scope": 4,
      "source": {
        "id": "formulahendry.auto-close-tag",
        "displayName": "Auto Close Tag"
      },
      "defaultDefaultValue": [
        "area",
        "base",
        "br",
        "col",
        "command",
        "embed",
        "hr",
        "img",
        "input",
        "keygen",
        "link",
        "meta",
        "param",
        "source",
        "track",
        "wbr"
      ],
      "restricted": false
    },
    "auto-close-tag.SublimeText3Mode": {
      "type": "boolean",
      "default": false,
      "description": "Auto close tag when </ is typed, same as Sublime Text 3",
      "scope": 4,
      "source": {
        "id": "formulahendry.auto-close-tag",
        "displayName": "Auto Close Tag"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "auto-close-tag.enableAutoCloseTag": {
      "type": "boolean",
      "default": true,
      "description": "Whether to insert close tag automatically",
      "scope": 4,
      "source": {
        "id": "formulahendry.auto-close-tag",
        "displayName": "Auto Close Tag"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "auto-close-tag.enableAutoCloseSelfClosingTag": {
      "type": "boolean",
      "default": true,
      "description": "Whether to close self-closing tag automatically",
      "scope": 4,
      "source": {
        "id": "formulahendry.auto-close-tag",
        "displayName": "Auto Close Tag"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "auto-close-tag.insertSpaceBeforeSelfClosingTag": {
      "type": "boolean",
      "default": false,
      "description": "Insert a space before the forward slash in a self-closing tag.",
      "scope": 4,
      "source": {
        "id": "formulahendry.auto-close-tag",
        "displayName": "Auto Close Tag"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "auto-close-tag.fullMode": {
      "type": "boolean",
      "default": false,
      "description": "Enable both Visual Studio and Sublime Text mode",
      "scope": 4,
      "source": {
        "id": "formulahendry.auto-close-tag",
        "displayName": "Auto Close Tag"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "auto-rename-tag.activationOnLanguage": {
      "type": "array",
      "default": [
        "*"
      ],
      "description": "Set the languages that the extension will be activated.  e.g. [\"html\",\"xml\",\"php\"] By default, it is [\"*\"] and will be activated for all languages.",
      "scope": 4,
      "source": {
        "id": "formulahendry.auto-rename-tag",
        "displayName": "Auto Rename Tag"
      },
      "defaultDefaultValue": [
        "*"
      ],
      "restricted": false
    },
    "yarn.runInTerminal": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Run yarn commands in a terminal, otherwise shows the output in the output panel",
      "source": {
        "id": "gamunu.vscode-yarn",
        "displayName": "yarn"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "yarn.packageJson": {
      "type": "string",
      "scope": 4,
      "default": "package.json",
      "description": "Default package json path. relative to current project root",
      "source": {
        "id": "gamunu.vscode-yarn",
        "displayName": "yarn"
      },
      "defaultDefaultValue": "package.json",
      "restricted": false
    },
    "yarn.dontHideOutputOnSuccess": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Keep the output panel visible when yarn execution is successful (no effect with runInTerminal)",
      "source": {
        "id": "gamunu.vscode-yarn",
        "displayName": "yarn"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "yarn.enableTouchbar": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Enable yarn commands in the macOS touchbar.",
      "source": {
        "id": "gamunu.vscode-yarn",
        "displayName": "yarn"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gutterpreview.sourceFolder": {
      "default": "src",
      "scope": 4,
      "description": "Additional folder to consider when resolving relative urls",
      "type": "string",
      "source": {
        "id": "kisstkondoros.vscode-gutter-preview",
        "displayName": "Image preview"
      },
      "defaultDefaultValue": "src",
      "restricted": false
    },
    "gutterpreview.imagePreviewMaxHeight": {
      "default": "100",
      "scope": 4,
      "description": "The maximum height of the image preview",
      "type": "number",
      "source": {
        "id": "kisstkondoros.vscode-gutter-preview",
        "displayName": "Image preview"
      },
      "defaultDefaultValue": "100",
      "restricted": false
    },
    "gutterpreview.imagePreviewMaxWidth": {
      "default": "-1",
      "scope": 4,
      "description": "The maximum width of the image preview, if configured to > 0, it is used instead of the max height setting",
      "type": "number",
      "source": {
        "id": "kisstkondoros.vscode-gutter-preview",
        "displayName": "Image preview"
      },
      "defaultDefaultValue": "-1",
      "restricted": false
    },
    "gutterpreview.showImagePreviewOnGutter": {
      "default": true,
      "scope": 4,
      "description": "A flag which indicates whether the image preview should be shown on the gutter",
      "type": "boolean",
      "source": {
        "id": "kisstkondoros.vscode-gutter-preview",
        "displayName": "Image preview"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gutterpreview.showUnderline": {
      "default": true,
      "scope": 4,
      "description": "A flag which indicates whether to underline recognized URLs",
      "type": "boolean",
      "source": {
        "id": "kisstkondoros.vscode-gutter-preview",
        "displayName": "Image preview"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gutterpreview.paths": {
      "default": {},
      "scope": 4,
      "description": "Specify path mapping to be computed relative to project root.",
      "type": "object",
      "source": {
        "id": "kisstkondoros.vscode-gutter-preview",
        "displayName": "Image preview"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "gutterpreview.currentColorForSVG": {
      "default": "white",
      "scope": 4,
      "description": "The default color to be used in svg previews",
      "type": "string",
      "source": {
        "id": "kisstkondoros.vscode-gutter-preview",
        "displayName": "Image preview"
      },
      "defaultDefaultValue": "white",
      "restricted": false
    },
    "gutterpreview.enableReferenceLookup": {
      "default": false,
      "scope": 4,
      "description": "A flag which indicates whether resources should be resolved from references",
      "type": "boolean",
      "source": {
        "id": "kisstkondoros.vscode-gutter-preview",
        "displayName": "Image preview"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gutterpreview.urlDetectionPatterns": {
      "default": [],
      "scope": 4,
      "markdownDescription": "Sometimes image URLs without extensions (such as `https://example.com/pic/640?fmt=jpeg`) are not detected. You can now specify regular expressions to detect these URLs. configured values (such as `/^http(s)*://example.com/pic/i`) will be parsed using [regex-parser](https://github.com/IonicaBizau/regex-parser.js) and ignored if they are illegal regular expression strings.",
      "type": "array",
      "source": {
        "id": "kisstkondoros.vscode-gutter-preview",
        "displayName": "Image preview"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "debugpy.debugJustMyCode": {
      "default": true,
      "description": "When debugging only step through user-written code. Disable this to allow stepping into library code.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.debugpy",
        "displayName": "Python Debugger"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.autoComplete.extraPaths": {
      "default": [],
      "description": "List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.",
      "scope": 4,
      "type": "array",
      "uniqueItems": true,
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.envFile": {
      "default": "${workspaceFolder}/.env",
      "description": "Absolute path to a file containing environment variable definitions.",
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "${workspaceFolder}/.env",
      "restricted": false
    },
    "python.globalModuleInstallation": {
      "default": false,
      "description": "Whether to install Python modules globally when not using an environment.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.missingPackage.severity": {
      "default": "Hint",
      "description": "Set severity of missing packages in requirements.txt or pyproject.toml",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Hint",
      "restricted": false
    },
    "python.tensorBoard.logDirectory": {
      "default": "",
      "description": "Set this setting to your preferred TensorBoard log directory to skip log directory prompt when starting TensorBoard.",
      "scope": 4,
      "type": "string",
      "markdownDeprecationMessage": "Tensorboard support has been moved to the extension [Tensorboard extension](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.tensorboard). Instead use the setting `tensorBoard.logDirectory`.",
      "deprecationMessage": "Tensorboard support has been moved to the extension Tensorboard extension. Instead use the setting `tensorBoard.logDirectory`.",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "python.terminal.activateEnvInCurrentTerminal": {
      "default": false,
      "description": "Activate Python Environment in the current Terminal on load of the Extension.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.terminal.activateEnvironment": {
      "default": true,
      "description": "Activate Python Environment in all Terminals created.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.terminal.executeInFileDir": {
      "default": false,
      "description": "When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.terminal.focusAfterLaunch": {
      "default": false,
      "description": "When launching a python terminal, whether to focus the cursor on the terminal.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.terminal.launchArgs": {
      "default": [],
      "description": "Python launch arguments to use when executing a file in the terminal.",
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.REPL.enableREPLSmartSend": {
      "default": true,
      "description": "Toggle Smart Send for the Python REPL. Smart Send enables sending the smallest runnable block of code to the REPL on Shift+Enter and moves the cursor accordingly.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.testing.autoTestDiscoverOnSaveEnabled": {
      "default": true,
      "description": "Enable auto run test discovery when saving a test file.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.testing.cwd": {
      "default": null,
      "description": "Optional working directory for tests.",
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "python.testing.debugPort": {
      "default": 3000,
      "description": "Port number used for debugging of tests.",
      "scope": 4,
      "type": "number",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": 3000,
      "restricted": false
    },
    "python.testing.promptToConfigure": {
      "default": true,
      "description": "Prompt to configure a test framework if potential tests directories are discovered.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.testing.pytestArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.testing.pytestEnabled": {
      "default": false,
      "description": "Enable testing using pytest.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.testing.unittestArgs": {
      "default": [
        "-v",
        "-s",
        ".",
        "-p",
        "*test*.py"
      ],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [
        "-v",
        "-s",
        ".",
        "-p",
        "*test*.py"
      ],
      "restricted": false
    },
    "python.testing.unittestEnabled": {
      "default": false,
      "description": "Enable testing using unittest.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.inlayHints.variableTypes": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for variable types:\n```python\nfoo':list[str]' = [\"a\"]\n \n```\n",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.inlayHints.functionReturnTypes": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for function return types:\n```python\ndef foo(x:int) '-> int':\n\treturn x\n```\n",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.inlayHints.callArgumentNames": {
      "type": "string",
      "default": "off",
      "markdownDescription": "Enable/disable inlay hints for call argument names:\n```python\ndatetime('year='2019, 'month='10, 'day='27)\n```\n",
      "enum": [
        "off",
        "partial",
        "all"
      ],
      "enumDescriptions": [
        "Disable inlay hints for call argument names.",
        "Enable inlay hints for positional-or-keyword arguments while ignoring positional-only and keyword-only.",
        "Enable inlay hints for positional-or-keyword and positional-only arguments while ignoring keyword-only."
      ],
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "python.analysis.inlayHints.pytestParameters": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for pytest function parameter types:\n```python\ndef test_foo(my_fixture: 'str'):\n\tassert(my_fixture == 'foo')\n```\n",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.completeFunctionParens": {
      "type": "boolean",
      "default": false,
      "description": "Add parentheses to function completions.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.autoImportCompletions": {
      "type": "boolean",
      "default": false,
      "description": "Enable auto-import completions.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.autoFormatStrings": {
      "type": "boolean",
      "default": false,
      "description": "When typing a '{' in a string, automatically prefix the string with an 'f'.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.autoSearchPaths": {
      "type": "boolean",
      "default": true,
      "description": "Automatically add common search paths like 'src'.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.analysis.stubPath": {
      "type": "string",
      "default": "typings",
      "description": "Path to directory containing custom type stub files.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "typings",
      "restricted": false
    },
    "python.analysis.diagnosticMode": {
      "type": "string",
      "default": "openFilesOnly",
      "description": "Analysis scope for showing diagnostics.",
      "enum": [
        "openFilesOnly",
        "workspace"
      ],
      "enumDescriptions": [
        "Analyzes and reports errors on only open files.",
        "Analyzes and reports errors on all files in the workspace."
      ],
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "openFilesOnly",
      "restricted": false
    },
    "python.analysis.extraPaths": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      },
      "description": "Additional import search resolution paths",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.analysis.include": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      },
      "description": "Paths of directories or files that should be included. If no paths are specified, Pylance defaults to the workspace root directory. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character).",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.analysis.exclude": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      },
      "description": "Paths of directories or files that should not be included. These override the include directories, allowing specific subdirectories to be excluded. Note that files in the exclude paths may still be included in the analysis if they are referenced (imported) by source files that are not excluded. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If no exclude paths are specified, Pylance automatically excludes the following: `**/node_modules`, `**/__pycache__`, `.git` and any virtual environment directories.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.analysis.ignore": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      },
      "description": "Paths of directories or files whose diagnostic output (errors and warnings) should be suppressed even if they are an included file or within the transitive closure of an included file. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character).",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.analysis.indexing": {
      "type": "boolean",
      "default": true,
      "description": "Enable indexing of installed third party libraries and user files for language features such as auto-import, add import, workspace symbols and etc.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.analysis.userFileIndexingLimit": {
      "type": "number",
      "default": 2000,
      "description": "Maximum number of user files to index in the workspace. Indexing files is a performance-intensive task. Please use this setting to limit the number of files you want us to index. If you enter -1, we will index all files.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": 2000,
      "restricted": false
    },
    "python.analysis.persistAllIndices": {
      "type": "boolean",
      "default": true,
      "description": "Indices for all third party libraries will be persisted to disk.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.analysis.extraCommitChars": {
      "type": "boolean",
      "default": false,
      "description": "Allow using '.', '(' as commit characters when applicable.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.useLibraryCodeForTypes": {
      "type": "boolean",
      "default": true,
      "description": "Use library implementations to extract type information when type stub is not present.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.analysis.autoIndent": {
      "type": "boolean",
      "default": true,
      "description": "Automatically adjust indentation based on language semantics when typing Python code.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.analysis.typeCheckingMode": {
      "type": "string",
      "default": "off",
      "enum": [
        "off",
        "basic",
        "standard",
        "strict"
      ],
      "description": "Defines the default rule set for type checking.",
      "enumDescriptions": [
        "Show diagnostics for invalid syntax, unresolved imports, undefined variables.",
        "All \"off\" rules + basic type checking rules.",
        "All \"off\" rules + basic type checking rules + standard typechecker rules.",
        "All \"off\" rules + all type checking rules."
      ],
      "scope": 4,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "python.analysis.fixAll": {
      "type": "array",
      "default": [],
      "items": {
        "enum": [
          "source.unusedImports",
          "source.convertImportFormat"
        ],
        "enumDescriptions": [
          "Remove unused imports.",
          "Convert import format following python.analysis.importFormat."
        ]
      },
      "description": "source fixes to run in fix all.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.analysis.packageIndexDepths": {
      "type": "array",
      "default": [
        {
          "name": "sklearn",
          "depth": 2
        },
        {
          "name": "matplotlib",
          "depth": 2
        },
        {
          "name": "scipy",
          "depth": 2
        },
        {
          "name": "django",
          "depth": 2
        },
        {
          "name": "flask",
          "depth": 2
        },
        {
          "name": "fastapi",
          "depth": 2
        }
      ],
      "items": {
        "type": "object",
        "label": "Per package settings",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "label": "Package name to configure. Empty name means all packages.",
            "default": ""
          },
          "depth": {
            "type": "integer",
            "label": "Depth to scan modules.",
            "default": 1
          },
          "includeAllSymbols": {
            "type": "boolean",
            "label": "'true' means include all symbols. 'false' means only symbols in __all__.",
            "default": false
          }
        }
      },
      "markdownDescription": "Used to override how many levels under installed packages to index on a per package basis. By default, only top-level modules are indexed (depth = 1). To index submodules, increase depth by 1 for each level of submodule you want to index. Accepted values are:\n```JSON\n{\"name\": \"package name (str)\",\n \"depth\": \"depth to scan (int)\",\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\n\n```\nIf `include all symbols` is set to `false`, only symbols in each package's `__all__` are included. When it's set to `true`, Pylance will index every module/top level symbol declarations in the file.  \n  \nUsage example: \n```JSON\n[\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\n]\n\n```\n",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [
        {
          "name": "sklearn",
          "depth": 2
        },
        {
          "name": "matplotlib",
          "depth": 2
        },
        {
          "name": "scipy",
          "depth": 2
        },
        {
          "name": "django",
          "depth": 2
        },
        {
          "name": "flask",
          "depth": 2
        },
        {
          "name": "fastapi",
          "depth": 2
        }
      ],
      "restricted": false
    },
    "python.analysis.diagnosticSeverityOverrides": {
      "type": "object",
      "markdownDescription": "Allows a user to override the severity levels for individual diagnostics. Use the rule name as a key and one of \"error\", \"warning\", \"information\", \"none\", `true` (alias for \"error\") or `false` (alias for \"none\") as value. The default value shown for each diagnostic is the default when \"python.analysis.typeCheckingMode\" is set to \"off\". See [here](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) for defaults for each type checking mode (\"off\", \"basic\" and \"strict\").",
      "scope": 4,
      "properties": {
        "reportGeneralTypeIssues": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for general type inconsistencies, unsupported operations, argument/parameter mismatches, etc. Covers all of the basic type-checking rules not covered by other rules. Does not include syntax errors.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportPropertyTypeMismatch": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for property whose setter and getter have mismatched types.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportFunctionMemberAccess": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for member accesses on functions.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportMissingImports": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for imports that have no corresponding imported python file or type stub file.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportMissingModuleSource": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for imports that have no corresponding source file. This happens when a type stub is found, but the module source file was not found, indicating that the code may fail at runtime when using this execution environment. Type checking will be done using the type stub.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportInvalidTypeForm": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for type expression that uses an invalid form.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportMissingTypeStubs": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for imports that have no corresponding type stub file (either a typeshed file or a custom type stub). The type checker requires type stubs to do its best job at analysis.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportImportCycles": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for cyclical import chains. These are not errors in Python, but they do slow down type analysis and often hint at architectural layering issues. Generally, they should be avoided.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnusedImport": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for an imported symbol that is not referenced within that file.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnusedClass": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for a class with a private name (starting with an underscore) that is not accessed.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnusedFunction": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for a function or method with a private name (starting with an underscore) that is not accessed.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnusedVariable": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for a variable that is not accessed.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportDuplicateImport": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for an imported symbol or module that is imported more than once.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportWildcardImportFromLibrary": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for an wildcard import from an external library.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportAbstractUsage": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for an attempt to instantiate an abstract or protocol class or use an abstract method.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportArgumentType": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for a type incompatibility for an argument to a call.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportAssertTypeFailure": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for a type incompatibility detected by a typing.assert_type call.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportAssignmentType": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for type incompatibilities for assignments.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportAttributeAccessIssue": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for issues involving attribute accesses.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportCallIssue": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for issues involving call expressions and arguments.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportInconsistentOverload": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for inconsistencies between function overload signatures and implementation.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportIndexIssue": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics related to index operations and expressions.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportInvalidTypeArguments": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for invalid type argument usage.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportNoOverloadImplementation": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for an overloaded function or method with a missing implementation.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportOperatorIssue": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for related to unary or binary operators.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportOptionalSubscript": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for an attempt to subscript (index) a variable with an Optional type.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportOptionalMemberAccess": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for an attempt to access a member of a variable with an Optional type.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportOptionalCall": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for an attempt to call a variable with an Optional type.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportOptionalIterable": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for an attempt to use an Optional type as an iterable value (e.g. within a for statement).",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportOptionalContextManager": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for an attempt to use an Optional type as a context manager (as a parameter to a with statement).",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportOptionalOperand": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for an attempt to use an Optional type as an operand to a binary or unary operator (like '+', '==', 'or', 'not').",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportRedeclaration": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for an attempt to declare the type of a symbol multiple times.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportReturnType": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics related to function return type compatibility.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportTypedDictNotRequiredAccess": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for an attempt to access a non-required key within a TypedDict without a check for its presence.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUntypedFunctionDecorator": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for function decorators that have no type annotations. These obscure the function type, defeating many type analysis features.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUntypedClassDecorator": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for class decorators that have no type annotations. These obscure the class type, defeating many type analysis features.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUntypedBaseClass": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for base classes whose type cannot be determined statically. These obscure the class type, defeating many type analysis features.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUntypedNamedTuple": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics when “namedtuple” is used rather than “NamedTuple”. The former contains no type information, whereas the latter does.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportPrivateUsage": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for incorrect usage of private or protected variables or functions. Protected class members begin with a single underscore _ and can be accessed only by subclasses. Private class members begin with a double underscore but do not end in a double underscore and can be accessed only within the declaring class. Variables and functions declared outside of a class are considered private if their names start with either a single or double underscore, and they cannot be accessed outside of the declaring module.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportTypeCommentUsage": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for usage of deprecated type comments.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportPrivateImportUsage": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for incorrect usage of symbol imported from a \"py.typed\" module that is not re-exported from that module.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportConstantRedefinition": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for attempts to redefine variables whose names are all-caps with underscores and numerals.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportDeprecated": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for use of deprecated classes or functions.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportIncompatibleMethodOverride": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for methods that override a method of the same name in a base class in an incompatible manner (wrong number of parameters, incompatible parameter types, or incompatible return type).",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportIncompatibleVariableOverride": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for overrides in subclasses that redefine a variable in an incompatible way.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportInconsistentConstructor": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for __init__ and __new__ methods whose signatures are inconsistent.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportOverlappingOverload": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for function overloads that overlap in signature and obscure each other or have incompatible return types.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportPossiblyUnboundVariable": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for the use of variables that may be unbound on some code paths.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportMissingSuperCall": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for missing call to parent class for inherited `__init__` methods.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUninitializedInstanceVariable": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for instance variables that are not declared or initialized within class body or `__init__` method.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportInvalidStringEscapeSequence": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for invalid escape sequences used within string literals. The Python specification indicates that such sequences will generate a syntax error in future versions.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnknownParameterType": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for input or return parameters for functions or methods that have an unknown type.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnknownArgumentType": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for call arguments for functions or methods that have an unknown type.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnknownLambdaType": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for input or return parameters for lambdas that have an unknown type.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnknownVariableType": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for variables that have an unknown type..",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnknownMemberType": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for class or instance variables that have an unknown type.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportMissingParameterType": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for parameters that are missing a type annotation.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportMissingTypeArgument": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for generic class reference with missing type arguments.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportInvalidTypeVarUse": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for improper use of type variables in a function signature.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportCallInDefaultInitializer": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for function calls within a default value initialization expression. Such calls can mask expensive operations that are performed at module initialization time.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnnecessaryIsInstance": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for 'isinstance' or 'issubclass' calls where the result is statically determined to be always true. Such calls are often indicative of a programming error.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnnecessaryCast": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for 'cast' calls that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnnecessaryComparison": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for '==' and '!=' comparisons that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnnecessaryContains": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for 'in' operation that is statically determined to be unnecessary. Such operations are sometimes indicative of a programming error.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportAssertAlwaysTrue": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for 'assert' statement that will provably always assert. This can be indicative of a programming error.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportSelfClsParameterName": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportImplicitStringConcatenation": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for two or more string literals that follow each other, indicating an implicit concatenation. This is considered a bad practice and often masks bugs such as missing commas.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportInvalidStubStatement": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for type stub statements that do not conform to PEP 484.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportIncompleteStub": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for the use of a module-level “__getattr__” function, indicating that the stub is incomplete.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUndefinedVariable": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for undefined variables.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnboundVariable": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for the use of unbound variables.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnhashable": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for the use of an unhashable object in a container that requires hashability.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnusedCallResult": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for call expressions whose results are not consumed and are not None.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnusedCoroutine": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for call expressions that return a Coroutine and whose results are not consumed.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnusedExcept": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for unreachable except clause.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnusedExpression": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for simple expressions whose value is not used in any way.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnsupportedDunderAll": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for unsupported operations performed on __all__.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportUnnecessaryTypeIgnoreComment": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for '# type: ignore' comments that have no effect.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportMatchNotExhaustive": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for 'match' statements that do not exhaustively match all possible values.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportShadowedImports": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for files that are overriding a module in the stdlib.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        },
        "reportImplicitOverride": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "Diagnostics for overridden methods that do not include an `@override` decorator.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error",
            true,
            false
          ]
        }
      },
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "default": {},
      "restricted": false
    },
    "python.analysis.typeshedPaths": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      },
      "description": "Paths to look for typeshed modules.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.analysis.importFormat": {
      "type": "string",
      "default": "absolute",
      "enum": [
        "absolute",
        "relative"
      ],
      "description": "Defines the default format for import module.",
      "enumDescriptions": [
        "Use absolute import format when creating new import statement.",
        "Use relative import format when creating new import statement."
      ],
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "absolute",
      "restricted": false
    },
    "python.analysis.perfReporting": {
      "type": "boolean",
      "default": true,
      "scope": 4,
      "description": "Allow pylance to ask users to report performance issues",
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "defaultValueSource": "Experiments",
      "restricted": false
    },
    "python.analysis.enableSyncServer": {
      "type": "boolean",
      "default": false,
      "scope": 4,
      "description": "Use sync server mode [Experimental]. For internal use only, may cause Pylance to stop working.",
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.enablePytestSupport": {
      "type": "boolean",
      "default": true,
      "description": "Enables pytest support in Pylance.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.analysis.gotoDefinitionInStringLiteral": {
      "type": "boolean",
      "default": true,
      "description": "For string literals that look like module names, enables go to definition to go to the module.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescriptHero.imports.insertSpaceBeforeAndAfterImportBraces": {
      "type": "boolean",
      "default": true,
      "description": "Defines if there should be a space inside the curly braces of an import statement.",
      "scope": 4,
      "source": {
        "id": "rbbit.typescript-hero",
        "displayName": "TypeScript Hero"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescriptHero.imports.removeTrailingIndex": {
      "type": "boolean",
      "default": true,
      "description": "Defines if a trailing '/index' should be removed from imports.",
      "scope": 4,
      "source": {
        "id": "rbbit.typescript-hero",
        "displayName": "TypeScript Hero"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescriptHero.imports.insertSemicolons": {
      "type": "boolean",
      "default": true,
      "description": "Defines if there should be a semicolon at the end of a statement.",
      "scope": 4,
      "source": {
        "id": "rbbit.typescript-hero",
        "displayName": "TypeScript Hero"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescriptHero.imports.stringQuoteStyle": {
      "enum": [
        "'",
        "\""
      ],
      "default": "'",
      "description": "Defines if single or double quotes should be used.",
      "scope": 4,
      "source": {
        "id": "rbbit.typescript-hero",
        "displayName": "TypeScript Hero"
      },
      "defaultDefaultValue": "'",
      "restricted": false
    },
    "typescriptHero.imports.multiLineWrapThreshold": {
      "type": "number",
      "minimum": 1,
      "multipleOf": 1,
      "default": 125,
      "description": "Defines the threshold when an import should be wrapped into a multiline import.",
      "scope": 4,
      "source": {
        "id": "rbbit.typescript-hero",
        "displayName": "TypeScript Hero"
      },
      "defaultDefaultValue": 125,
      "restricted": false
    },
    "typescriptHero.imports.multiLineTrailingComma": {
      "type": "boolean",
      "default": true,
      "description": "Defined if multi line imports contain the last trailing comma.",
      "scope": 4,
      "source": {
        "id": "rbbit.typescript-hero",
        "displayName": "TypeScript Hero"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescriptHero.imports.organizeOnSave": {
      "type": "boolean",
      "default": false,
      "description": "Defines if the imports should be organized on save.",
      "scope": 4,
      "source": {
        "id": "rbbit.typescript-hero",
        "displayName": "TypeScript Hero"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescriptHero.imports.organizeSortsByFirstSpecifier": {
      "type": "boolean",
      "default": false,
      "description": "Defines if the imports are organized by first specifier/alias instead of module path.",
      "scope": 4,
      "source": {
        "id": "rbbit.typescript-hero",
        "displayName": "TypeScript Hero"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescriptHero.imports.disableImportsSorting": {
      "type": "boolean",
      "default": false,
      "description": "Defines if sorting is disable during organize imports.",
      "scope": 4,
      "source": {
        "id": "rbbit.typescript-hero",
        "displayName": "TypeScript Hero"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescriptHero.imports.disableImportRemovalOnOrganize": {
      "type": "boolean",
      "default": false,
      "description": "Defines if any imports should be removed at all on an organize imports command.",
      "scope": 4,
      "source": {
        "id": "rbbit.typescript-hero",
        "displayName": "TypeScript Hero"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescriptHero.imports.ignoredFromRemoval": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "default": [
        "react"
      ],
      "description": "Defines imports (libraries, so the 'from' part), which are not removed during 'organize imports'.",
      "scope": 4,
      "source": {
        "id": "rbbit.typescript-hero",
        "displayName": "TypeScript Hero"
      },
      "defaultDefaultValue": [
        "react"
      ],
      "restricted": false
    },
    "typescriptHero.imports.grouping": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "enum": [
              "Modules",
              "Plains",
              "Workspace",
              "Remaining"
            ]
          },
          {
            "type": "string",
            "pattern": "\\/[A-Za-z-_0-9]+\\/"
          },
          {
            "type": "object",
            "properties": {
              "identifier": {
                "enum": [
                  "Modules",
                  "Plains",
                  "Workspace",
                  "Remaining"
                ]
              },
              "order": {
                "enum": [
                  "asc",
                  "desc"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "identifier",
              "order"
            ]
          },
          {
            "type": "object",
            "properties": {
              "identifier": {
                "type": "string",
                "pattern": "\\/[A-Za-z-_0-9]+\\/"
              },
              "order": {
                "enum": [
                  "asc",
                  "desc"
                ]
              }
            },
            "additionalProperties": false,
            "required": [
              "identifier",
              "order"
            ]
          }
        ]
      },
      "default": [
        "Plains",
        "Modules",
        "Workspace"
      ],
      "description": "Defines the groups of the imports ordering. Multiple groups possible, see readme for instructions.",
      "scope": 4,
      "source": {
        "id": "rbbit.typescript-hero",
        "displayName": "TypeScript Hero"
      },
      "defaultDefaultValue": [
        "Plains",
        "Modules",
        "Workspace"
      ],
      "restricted": false
    },
    "crates.listPreReleases": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "If true, pre-release versions will be available.",
      "source": {
        "id": "serayuzgur.crates",
        "displayName": "crates"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "crates.indexServerURL": {
      "type": "string",
      "scope": 4,
      "description": "URL of the index server. Default value goes to official sparse index. Alternative values would be onpremise index servers.",
      "default": "https://index.crates.io",
      "source": {
        "id": "serayuzgur.crates",
        "displayName": "crates"
      },
      "defaultDefaultValue": "https://index.crates.io",
      "restricted": false
    },
    "crates.errorDecorator": {
      "type": "string",
      "scope": 4,
      "default": "❗️❗️❗️",
      "description": "The text to show when a dependency has errors.",
      "source": {
        "id": "serayuzgur.crates",
        "displayName": "crates"
      },
      "defaultDefaultValue": "❗️❗️❗️",
      "restricted": false
    },
    "crates.incompatibleDecorator": {
      "type": "string",
      "scope": 4,
      "default": "❌ ${version}",
      "description": "The text template to show when a dependency is not semver compatible. ${version} will be replaced by the latest version info.",
      "source": {
        "id": "serayuzgur.crates",
        "displayName": "crates"
      },
      "defaultDefaultValue": "❌ ${version}",
      "restricted": false
    },
    "crates.compatibleDecorator": {
      "type": "string",
      "scope": 4,
      "default": "✅",
      "description": "The text template to show when a dependency is semver compatible. ${version} will be replaced by the latest version info.",
      "source": {
        "id": "serayuzgur.crates",
        "displayName": "crates"
      },
      "defaultDefaultValue": "✅",
      "restricted": false
    },
    "java.test.defaultConfig": {
      "type": "string",
      "description": "Specify the name of the default test configuration.",
      "scope": 4,
      "source": {
        "id": "vscjava.vscode-java-test",
        "displayName": "Test Runner for Java"
      },
      "default": "",
      "restricted": false
    },
    "java.test.config": {
      "type": [
        "object",
        "array"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Specify the name of the configuration item.",
          "pattern": "^((?!default).)*$",
          "default": ""
        },
        "workingDirectory": {
          "type": "string",
          "description": "Specify the working directory when running the tests.",
          "default": "${workspaceFolder}"
        },
        "classPaths": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "enum": [
                  "$Auto",
                  "$Runtime",
                  "$Test",
                  "!<path>"
                ],
                "enumDescriptions": [
                  "Automatically resolve the classpaths of current project.",
                  "The classpaths within 'runtime' scope of current project.",
                  "The classpaths within 'test' scope of current project.",
                  "The path after '!' will be excluded from the classpaths."
                ]
              },
              "string"
            ]
          },
          "description": "The classpaths defined in this setting will be appended to the resolved classpaths.",
          "default": []
        },
        "modulePaths": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "enum": [
                  "$Auto",
                  "$Runtime",
                  "$Test",
                  "!<path>"
                ],
                "enumDescriptions": [
                  "Automatically resolve the modulepaths of current project.",
                  "The modulepaths within 'runtime' scope of current project.",
                  "The modulepaths within 'test' scope of current project.",
                  "The path after '!' will be excluded from the modulePaths."
                ]
              },
              "string"
            ]
          },
          "description": "The modulepaths defined in this setting will be appended to the resolved modulepaths.",
          "default": []
        },
        "javaExec": {
          "type": "string",
          "markdownDescription": "The path to java executable to use. For example: `C:\\Program Files\\jdk\\bin\\java.exe`. If unset project JDK's java executable is used.",
          "default": ""
        },
        "vmArgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specify the extra options and system properties for the JVM.",
          "default": []
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specify the command line arguments which will be passed to the test runner.",
          "default": []
        },
        "env": {
          "type": "object",
          "description": "Specify the extra environment variables when running the tests.",
          "default": {}
        },
        "envFile": {
          "type": "string",
          "description": "Specify the absolute path to a file containing environment variable definitions.",
          "default": "${workspaceFolder}/.env"
        },
        "sourcePaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specify extra source paths when debugging the tests.",
          "default": []
        },
        "preLaunchTask": {
          "type": "string",
          "description": "Specify the label of a task specified in tasks.json (in the workspace's .vscode folder). The task will be launched before the start of testing.",
          "default": ""
        },
        "postDebugTask": {
          "type": "string",
          "description": "Specify the label of a task specified in tasks.json (in the workspace's .vscode folder). The task will be launched at the very end of testing.",
          "default": ""
        },
        "testKind": {
          "type": "string",
          "markdownDescription": "Specify the targeting test framework for this test configuration. Supported values are `junit`, `testng`.",
          "enum": [
            "junit",
            "testng"
          ],
          "default": "junit"
        },
        "filters": {
          "type": "object",
          "description": "Specify the test filters.",
          "default": {},
          "properties": {
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "markdownDescription": "Specify the tags to be included or excluded. \n\nTags having `!` as the prefix will be **excluded**. \n\nNote: This setting **only** takes effect when `testKind` is set to `junit`.",
              "default": []
            }
          }
        },
        "when": {
          "type": "string",
          "markdownDescription": "Specify the when clause for matching tests by to determine if the configuration should be run with.\n\nNote: `testItem =~ /<regular-expression>/` is the only supported clause currently, where `testItem` is the fully-qualified name of a test class or method. For example:\n- `testItem =~ /^com\\.company\\.package\\.test/` - a package with the name \"com.company.package.test\".\n- `testItem =~ /(?<=\\.)Test/` - a class with a name containing \"Test\".\n\nWhen launching a test that satisfies a single configuration's when clause, it will be run with that configuration. If multiple configurations are satisfied, the user will be prompted to pick which configuration to run with.\n\nWhen launching multiple tests (e.g. for a class or package), a configuration's when clause must be satisfied for **all** tests to be considered.\n\nConfigurations that do not define a when clause will match all tests.",
          "default": ""
        },
        "coverage": {
          "type": "object",
          "description": "The configurations for test coverage.",
          "default": {},
          "properties": {
            "appendResult": {
              "type": "boolean",
              "description": "Whether the coverage result is appended.",
              "default": true
            }
          }
        }
      },
      "description": "Specify the configurations for running the tests.",
      "items": {
        "type": "object",
        "description": "Specify the configuration item for running the tests.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Specify the name of the configuration item.",
            "pattern": "^((?!default).)*$",
            "default": ""
          },
          "workingDirectory": {
            "type": "string",
            "description": "Specify the working directory when running the tests.",
            "default": "${workspaceFolder}"
          },
          "classPaths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "enum": [
                    "$Auto",
                    "$Runtime",
                    "$Test",
                    "!<path>"
                  ],
                  "enumDescriptions": [
                    "Automatically resolve the classpaths of current project.",
                    "The classpaths within 'runtime' scope of current project.",
                    "The classpaths within 'test' scope of current project.",
                    "The path after '!' will be excluded from the classpaths."
                  ]
                },
                "string"
              ]
            },
            "description": "The classpaths defined in this setting will be appended to the resolved classpaths.",
            "default": []
          },
          "modulePaths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "enum": [
                    "$Auto",
                    "$Runtime",
                    "$Test",
                    "!<path>"
                  ],
                  "enumDescriptions": [
                    "Automatically resolve the modulepaths of current project.",
                    "The modulepaths within 'runtime' scope of current project.",
                    "The modulepaths within 'test' scope of current project.",
                    "The path after '!' will be excluded from the modulePaths."
                  ]
                },
                "string"
              ]
            },
            "description": "The modulepaths defined in this setting will be appended to the resolved modulepaths.",
            "default": []
          },
          "javaExec": {
            "type": "string",
            "markdownDescription": "The path to java executable to use. For example: `C:\\Program Files\\jdk\\bin\\java.exe`. If unset project JDK's java executable is used.",
            "default": ""
          },
          "vmargs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Specify the extra options and system properties for the JVM.",
            "default": []
          },
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Specify the command line arguments which will be passed to the test runner.",
            "default": []
          },
          "env": {
            "type": "object",
            "description": "Specify the extra environment variables when running the tests.",
            "default": {}
          },
          "envFile": {
            "type": "string",
            "description": "Specify the absolute path to a file containing environment variable definitions.",
            "default": "${workspaceFolder}/.env"
          },
          "sourcePaths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Specify extra source paths when debugging the tests.",
            "default": []
          },
          "preLaunchTask": {
            "type": "string",
            "description": "Specify the label of a task specified in tasks.json (in the workspace's .vscode folder). The task will be launched before the start of testing.",
            "default": ""
          },
          "postDebugTask": {
            "type": "string",
            "description": "Specify the label of a task specified in tasks.json (in the workspace's .vscode folder). The task will be launched at the very end of testing.",
            "default": ""
          },
          "testKind": {
            "type": "string",
            "markdownDescription": "Specify the targeting test framework for this test configuration. Supported values are `junit`, `testng`.",
            "enum": [
              "junit",
              "testng"
            ],
            "default": "junit"
          },
          "filters": {
            "type": "object",
            "description": "Specify the test filters.",
            "default": {},
            "properties": {
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "markdownDescription": "Specify the tags to be included or excluded. \n\nTags having `!` as the prefix will be **excluded**. \n\nNote: This setting **only** takes effect when `testKind` is set to `junit`.",
                "default": []
              }
            }
          },
          "when": {
            "type": "string",
            "markdownDescription": "Specify the when clause for matching tests by to determine if the configuration should be run with.\n\nNote: `testItem =~ /<regular-expression>/` is the only supported clause currently, where `testItem` is the fully-qualified name of a test class or method. For example:\n- `testItem =~ /^com\\.company\\.package\\.test/` - a package with the name \"com.company.package.test\".\n- `testItem =~ /(?<=\\.)Test/` - a class with a name containing \"Test\".\n\nWhen launching a test that satisfies a single configuration's when clause, it will be run with that configuration. If multiple configurations are satisfied, the user will be prompted to pick which configuration to run with.\n\nWhen launching multiple tests (e.g. for a class or package), a configuration's when clause must be satisfied for **all** tests to be considered.\n\nConfigurations that do not define a when clause will match all tests.",
            "default": ""
          },
          "coverage": {
            "type": "object",
            "description": "The configurations for test coverage.",
            "default": {},
            "properties": {
              "appendResult": {
                "type": "boolean",
                "description": "Whether the coverage result is appended.",
                "default": true
              }
            }
          }
        }
      },
      "scope": 4,
      "source": {
        "id": "vscjava.vscode-java-test",
        "displayName": "Test Runner for Java"
      },
      "default": {},
      "restricted": false
    },
    "maven.excludedFolders": {
      "type": "array",
      "default": [
        "**/.*",
        "**/node_modules",
        "**/target",
        "**/bin",
        "**/archetype-resources"
      ],
      "description": "Specifies file path pattern of folders to exclude while searching for Maven projects.",
      "scope": 4,
      "source": {
        "id": "vscjava.vscode-maven",
        "displayName": "Maven for Java"
      },
      "defaultDefaultValue": [
        "**/.*",
        "**/node_modules",
        "**/target",
        "**/bin",
        "**/archetype-resources"
      ],
      "restricted": false
    },
    "maven.executable.preferMavenWrapper": {
      "type": "boolean",
      "default": "true",
      "description": "Specifies whether you prefer to use Maven wrapper. If true, it tries using 'mvnw' by walking up the parent folders. If false, or 'mvnw' is not found, it tries 'mvn' in PATH instead.",
      "scope": 4,
      "source": {
        "id": "vscjava.vscode-maven",
        "displayName": "Maven for Java"
      },
      "defaultDefaultValue": "true",
      "restricted": false
    },
    "maven.terminal.customEnv": {
      "type": "array",
      "items": {
        "type": "object",
        "title": "environment setting",
        "required": [
          "environmentVariable",
          "value"
        ],
        "properties": {
          "environmentVariable": {
            "type": "string",
            "minLength": 1,
            "description": "Name of the environment variable to set."
          },
          "value": {
            "type": "string",
            "description": "Value of the environment variable to set."
          }
        }
      },
      "default": [],
      "description": "Specifies an array of environment variable names and values. These environment variable values will be added to the terminal session before Maven is first executed.",
      "scope": 4,
      "source": {
        "id": "vscjava.vscode-maven",
        "displayName": "Maven for Java"
      },
      "defaultDefaultValue": [],
      "restricted": true
    },
    "maven.terminal.favorites": {
      "type": "array",
      "items": {
        "type": "object",
        "title": "Favorite commands",
        "required": [
          "command"
        ],
        "properties": {
          "alias": {
            "type": "string",
            "minLength": 1,
            "description": "A short name for the command."
          },
          "command": {
            "type": "string",
            "minLength": 1,
            "description": "Content of the favorite command."
          },
          "debug": {
            "type": "boolean",
            "default": false,
            "description": "Whether to execute in debug mode."
          }
        }
      },
      "default": [],
      "description": "Specify pre-defined favorite commands to execute.",
      "scope": 4,
      "source": {
        "id": "vscjava.vscode-maven",
        "displayName": "Maven for Java"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "maven.showInExplorerContextMenu": {
      "type": "boolean",
      "default": "true",
      "description": "If this value is true, add a command to create Maven Projects in the Explorer context menu for folders.",
      "scope": 4,
      "source": {
        "id": "vscjava.vscode-maven",
        "displayName": "Maven for Java"
      },
      "defaultDefaultValue": "true",
      "restricted": false
    },
    "workbench.editorLargeFileConfirmation": {
      "type": "number",
      "default": 10,
      "minimum": 1,
      "scope": 4,
      "markdownDescription": "Controls the minimum size of a file in MB before asking for confirmation when opening in the editor. Note that this setting may not apply to all editor types and environments.",
      "defaultDefaultValue": 10,
      "restricted": false
    }
  },
  "patternProperties": {
    "^(\\[([^\\]]+)\\])+$": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage"
    }
  },
  "additionalProperties": true,
  "allowTrailingCommas": true,
  "allowComments": true
}
